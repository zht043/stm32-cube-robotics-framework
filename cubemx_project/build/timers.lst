ARM GAS  /tmp/ccYqoODf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"timers.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvGetNextExpireTime:
  25              	.LFB16:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  /tmp/ccYqoODf.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** header files above, but not in this file, in order to generate the correct
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** privileged Vs unprivileged linkage and placement. */
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t				uxAutoReload;		/*<< Set to pdTRUE if the timer should be automatically restarted on
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		uint8_t 			ucStaticallyAllocated; /*<< Set to pdTRUE if the timer was created statically so no at
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
ARM GAS  /tmp/ccYqoODf.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists. */
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1 = {0};
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2 = {0};
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList = NULL;
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList = NULL;
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
ARM GAS  /tmp/ccYqoODf.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters ) PRIVILEGED_FUNCTION;
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto reload timer, then call its callback.
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
ARM GAS  /tmp/ccYqoODf.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
ARM GAS  /tmp/ccYqoODf.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically, so note this
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created dynamically in case the timer is later
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				deleted. */
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdFALSE;
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
ARM GAS  /tmp/ccYqoODf.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically so note this
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created statically in case it is later deleted. */
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdTRUE;
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
ARM GAS  /tmp/ccYqoODf.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccYqoODf.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
ARM GAS  /tmp/ccYqoODf.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters )
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
ARM GAS  /tmp/ccYqoODf.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  27              		.loc 1 599 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccYqoODf.s 			page 12


  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  33              		.loc 1 609 0
  34 0000 064B     		ldr	r3, .L4
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 1368     		ldr	r3, [r2]
  37 0006 B3FA83F3 		clz	r3, r3
  38 000a 5B09     		lsrs	r3, r3, #5
  39 000c 0360     		str	r3, [r0]
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  40              		.loc 1 610 0
  41 000e 13B9     		cbnz	r3, .L3
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  42              		.loc 1 612 0
  43 0010 D368     		ldr	r3, [r2, #12]
  44 0012 1868     		ldr	r0, [r3]
  45              	.LVL1:
  46 0014 7047     		bx	lr
  47              	.LVL2:
  48              	.L3:
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  49              		.loc 1 617 0
  50 0016 0020     		movs	r0, #0
  51              	.LVL3:
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  52              		.loc 1 621 0
  53 0018 7047     		bx	lr
  54              	.L5:
  55 001a 00BF     		.align	2
  56              	.L4:
  57 001c 00000000 		.word	.LANCHOR0
  58              		.cfi_endproc
  59              	.LFE16:
  61              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  62              		.align	1
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
ARM GAS  /tmp/ccYqoODf.s 			page 13


  66              		.fpu fpv4-sp-d16
  68              	prvInsertTimerInActiveList:
  69              	.LFB18:
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  70              		.loc 1 648 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              	.LVL4:
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  80              	.LVL5:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  81              		.loc 1 651 0
  82 0002 4160     		str	r1, [r0, #4]
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  83              		.loc 1 652 0
  84 0004 0061     		str	r0, [r0, #16]
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  85              		.loc 1 654 0
  86 0006 9142     		cmp	r1, r2
  87 0008 0CD8     		bhi	.L7
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
ARM GAS  /tmp/ccYqoODf.s 			page 14


 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  88              		.loc 1 658 0
  89 000a D21A     		subs	r2, r2, r3
  90              	.LVL6:
  91 000c 8369     		ldr	r3, [r0, #24]
  92              	.LVL7:
  93 000e 9A42     		cmp	r2, r3
  94 0010 01D3     		bcc	.L13
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
  95              		.loc 1 662 0
  96 0012 0120     		movs	r0, #1
  97              	.LVL8:
  98 0014 10E0     		b	.L6
  99              	.LVL9:
 100              	.L13:
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 101              		.loc 1 666 0
 102 0016 011D     		adds	r1, r0, #4
 103              	.LVL10:
 104 0018 094B     		ldr	r3, .L14
 105 001a 1868     		ldr	r0, [r3]
 106              	.LVL11:
 107 001c FFF7FEFF 		bl	vListInsert
 108              	.LVL12:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 109              		.loc 1 649 0
 110 0020 0020     		movs	r0, #0
 111 0022 09E0     		b	.L6
 112              	.LVL13:
 113              	.L7:
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 114              		.loc 1 671 0
 115 0024 9A42     		cmp	r2, r3
 116 0026 01D2     		bcs	.L9
 117              		.loc 1 671 0 is_stmt 0 discriminator 1
 118 0028 9942     		cmp	r1, r3
 119 002a 06D2     		bcs	.L11
 120              	.L9:
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
ARM GAS  /tmp/ccYqoODf.s 			page 15


 121              		.loc 1 680 0 is_stmt 1
 122 002c 011D     		adds	r1, r0, #4
 123              	.LVL14:
 124 002e 054B     		ldr	r3, .L14+4
 125              	.LVL15:
 126 0030 1868     		ldr	r0, [r3]
 127              	.LVL16:
 128 0032 FFF7FEFF 		bl	vListInsert
 129              	.LVL17:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 130              		.loc 1 649 0
 131 0036 0020     		movs	r0, #0
 132              	.LVL18:
 133              	.L6:
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 134              		.loc 1 685 0
 135 0038 08BD     		pop	{r3, pc}
 136              	.LVL19:
 137              	.L11:
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 138              		.loc 1 676 0
 139 003a 0120     		movs	r0, #1
 140              	.LVL20:
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 141              		.loc 1 684 0
 142 003c FCE7     		b	.L6
 143              	.L15:
 144 003e 00BF     		.align	2
 145              	.L14:
 146 0040 00000000 		.word	.LANCHOR1
 147 0044 00000000 		.word	.LANCHOR0
 148              		.cfi_endproc
 149              	.LFE18:
 151              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 152              		.align	1
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 156              		.fpu fpv4-sp-d16
 158              	prvCheckForValidListAndQueue:
 159              	.LFB21:
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
ARM GAS  /tmp/ccYqoODf.s 			page 16


 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_START_FROM_ISR :
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET :
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET_FROM_ISR :
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
ARM GAS  /tmp/ccYqoODf.s 			page 17


 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list.
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					There is nothing to do here. */
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list,
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					just free up the memory if the memory was dynamically
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					allocated. */
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer can only have been allocated dynamically -
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						free it again. */
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						vPortFree( pxTimer );
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer could have been allocated statically or
ARM GAS  /tmp/ccYqoODf.s 			page 18


 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						dynamically, so check before attempting to free the
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						memory. */
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
ARM GAS  /tmp/ccYqoODf.s 			page 19


 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 160              		.loc 1 895 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164 0000 30B5     		push	{r4, r5, lr}
 165              	.LCFI1:
 166              		.cfi_def_cfa_offset 12
 167              		.cfi_offset 4, -12
 168              		.cfi_offset 5, -8
 169              		.cfi_offset 14, -4
 170 0002 83B0     		sub	sp, sp, #12
 171              	.LCFI2:
 172              		.cfi_def_cfa_offset 24
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 173              		.loc 1 899 0
 174 0004 FFF7FEFF 		bl	vPortEnterCritical
 175              	.LVL21:
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 176              		.loc 1 901 0
 177 0008 114B     		ldr	r3, .L20
 178 000a 1B68     		ldr	r3, [r3]
 179 000c 1BB1     		cbz	r3, .L19
 180              	.L17:
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
ARM GAS  /tmp/ccYqoODf.s 			page 20


 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 181              		.loc 1 941 0
 182 000e FFF7FEFF 		bl	vPortExitCritical
 183              	.LVL22:
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 184              		.loc 1 942 0
 185 0012 03B0     		add	sp, sp, #12
 186              	.LCFI3:
 187              		.cfi_remember_state
 188              		.cfi_def_cfa_offset 12
 189              		@ sp needed
 190 0014 30BD     		pop	{r4, r5, pc}
 191              	.L19:
 192              	.LCFI4:
 193              		.cfi_restore_state
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 194              		.loc 1 903 0
 195 0016 0F4D     		ldr	r5, .L20+4
 196 0018 2846     		mov	r0, r5
 197 001a FFF7FEFF 		bl	vListInitialise
 198              	.LVL23:
ARM GAS  /tmp/ccYqoODf.s 			page 21


 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 199              		.loc 1 904 0
 200 001e 0E4C     		ldr	r4, .L20+8
 201 0020 2046     		mov	r0, r4
 202 0022 FFF7FEFF 		bl	vListInitialise
 203              	.LVL24:
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 204              		.loc 1 905 0
 205 0026 0D4B     		ldr	r3, .L20+12
 206 0028 1D60     		str	r5, [r3]
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 207              		.loc 1 906 0
 208 002a 0D4B     		ldr	r3, .L20+16
 209 002c 1C60     		str	r4, [r3]
 210              	.LBB41:
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 211              		.loc 1 915 0
 212 002e 0023     		movs	r3, #0
 213 0030 0093     		str	r3, [sp]
 214 0032 0C4B     		ldr	r3, .L20+20
 215 0034 0C4A     		ldr	r2, .L20+24
 216 0036 1021     		movs	r1, #16
 217 0038 0A20     		movs	r0, #10
 218 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 219              	.LVL25:
 220 003e 044B     		ldr	r3, .L20
 221 0040 1860     		str	r0, [r3]
 222              	.LBE41:
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 223              		.loc 1 925 0
 224 0042 0028     		cmp	r0, #0
 225 0044 E3D0     		beq	.L17
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 226              		.loc 1 927 0
 227 0046 0949     		ldr	r1, .L20+28
 228 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 229              	.LVL26:
 230 004c DFE7     		b	.L17
 231              	.L21:
 232 004e 00BF     		.align	2
 233              	.L20:
 234 0050 00000000 		.word	.LANCHOR2
 235 0054 00000000 		.word	.LANCHOR3
 236 0058 00000000 		.word	.LANCHOR4
 237 005c 00000000 		.word	.LANCHOR0
 238 0060 00000000 		.word	.LANCHOR1
 239 0064 00000000 		.word	.LANCHOR5
 240 0068 00000000 		.word	.LANCHOR6
 241 006c 00000000 		.word	.LC0
 242              		.cfi_endproc
 243              	.LFE21:
 245              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 246              		.align	1
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccYqoODf.s 			page 22


 252              	prvInitialiseNewTimer:
 253              	.LFB7:
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 254              		.loc 1 358 0
 255              		.cfi_startproc
 256              		@ args = 8, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              	.LVL27:
 259 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 260              	.LCFI5:
 261              		.cfi_def_cfa_offset 24
 262              		.cfi_offset 4, -24
 263              		.cfi_offset 5, -20
 264              		.cfi_offset 6, -16
 265              		.cfi_offset 7, -12
 266              		.cfi_offset 8, -8
 267              		.cfi_offset 14, -4
 268 0004 079C     		ldr	r4, [sp, #28]
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 269              		.loc 1 360 0
 270 0006 41B9     		cbnz	r1, .L23
 271              	.LBB42:
 272              	.LBB43:
 273              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
ARM GAS  /tmp/ccYqoODf.s 			page 23


  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
ARM GAS  /tmp/ccYqoODf.s 			page 24


  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
ARM GAS  /tmp/ccYqoODf.s 			page 25


 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 274              		.loc 2 195 0
 275              		.syntax unified
 276              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 277 0008 4FF05003 			mov r3, #80												
 278 000c 83F31188 		msr basepri, r3											
 279 0010 BFF36F8F 		isb														
 280 0014 BFF34F8F 		dsb														
 281              	
 282              	@ 0 "" 2
ARM GAS  /tmp/ccYqoODf.s 			page 26


 283              	.LVL28:
 284              		.thumb
 285              		.syntax unified
 286              	.L24:
 287 0018 FEE7     		b	.L24
 288              	.LVL29:
 289              	.L23:
 290 001a 0F46     		mov	r7, r1
 291              	.LBE43:
 292              	.LBE42:
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 293              		.loc 1 362 0
 294 001c 74B1     		cbz	r4, .L22
 295 001e 1D46     		mov	r5, r3
 296 0020 1646     		mov	r6, r2
 297 0022 8046     		mov	r8, r0
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 298              		.loc 1 366 0
 299 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 300              	.LVL30:
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 301              		.loc 1 370 0
 302 0028 C4F80080 		str	r8, [r4]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 303              		.loc 1 371 0
 304 002c A761     		str	r7, [r4, #24]
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 305              		.loc 1 372 0
 306 002e E661     		str	r6, [r4, #28]
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 307              		.loc 1 373 0
 308 0030 2562     		str	r5, [r4, #32]
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 309              		.loc 1 374 0
 310 0032 069B     		ldr	r3, [sp, #24]
 311 0034 6362     		str	r3, [r4, #36]
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 312              		.loc 1 375 0
 313 0036 201D     		adds	r0, r4, #4
 314 0038 FFF7FEFF 		bl	vListInitialiseItem
 315              	.LVL31:
 316              	.L22:
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 317              		.loc 1 378 0
 318 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 319              		.cfi_endproc
 320              	.LFE7:
 322              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 323              		.align	1
 324              		.global	xTimerCreateTimerTask
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.fpu fpv4-sp-d16
 330              	xTimerCreateTimerTask:
 331              	.LFB4:
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
ARM GAS  /tmp/ccYqoODf.s 			page 27


 332              		.loc 1 224 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 16
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 10B5     		push	{r4, lr}
 337              	.LCFI6:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 4, -8
 340              		.cfi_offset 14, -4
 341 0002 88B0     		sub	sp, sp, #32
 342              	.LCFI7:
 343              		.cfi_def_cfa_offset 40
 344              	.LVL32:
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 345              		.loc 1 231 0
 346 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 347              	.LVL33:
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 348              		.loc 1 233 0
 349 0008 124B     		ldr	r3, .L33
 350 000a 1B68     		ldr	r3, [r3]
 351 000c CBB1     		cbz	r3, .L28
 352              	.LBB44:
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 353              		.loc 1 237 0
 354 000e 0024     		movs	r4, #0
 355 0010 0594     		str	r4, [sp, #20]
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 356              		.loc 1 238 0
 357 0012 0694     		str	r4, [sp, #24]
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 358              		.loc 1 241 0
 359 0014 07AA     		add	r2, sp, #28
 360 0016 06A9     		add	r1, sp, #24
 361 0018 05A8     		add	r0, sp, #20
 362 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 363              	.LVL34:
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 364              		.loc 1 242 0
 365 001e 059B     		ldr	r3, [sp, #20]
 366 0020 0293     		str	r3, [sp, #8]
 367 0022 069B     		ldr	r3, [sp, #24]
 368 0024 0193     		str	r3, [sp, #4]
 369 0026 0223     		movs	r3, #2
 370 0028 0093     		str	r3, [sp]
 371 002a 2346     		mov	r3, r4
 372 002c 079A     		ldr	r2, [sp, #28]
 373 002e 0A49     		ldr	r1, .L33+4
 374 0030 0A48     		ldr	r0, .L33+8
 375 0032 FFF7FEFF 		bl	xTaskCreateStatic
 376              	.LVL35:
 377 0036 0A4B     		ldr	r3, .L33+12
 378 0038 1860     		str	r0, [r3]
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 379              		.loc 1 250 0
 380 003a 10B1     		cbz	r0, .L28
 381              	.LBE44:
ARM GAS  /tmp/ccYqoODf.s 			page 28


 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 382              		.loc 1 273 0
 383 003c 0120     		movs	r0, #1
 384 003e 08B0     		add	sp, sp, #32
 385              	.LCFI8:
 386              		.cfi_remember_state
 387              		.cfi_def_cfa_offset 8
 388              		@ sp needed
 389 0040 10BD     		pop	{r4, pc}
 390              	.L28:
 391              	.LCFI9:
 392              		.cfi_restore_state
 393              	.LBB45:
 394              	.LBB46:
 395              		.loc 2 195 0
 396              		.syntax unified
 397              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 398 0042 4FF05003 			mov r3, #80												
 399 0046 83F31188 		msr basepri, r3											
 400 004a BFF36F8F 		isb														
 401 004e BFF34F8F 		dsb														
 402              	
 403              	@ 0 "" 2
 404              	.LVL36:
 405              		.thumb
 406              		.syntax unified
 407              	.L30:
 408 0052 FEE7     		b	.L30
 409              	.L34:
 410              		.align	2
 411              	.L33:
 412 0054 00000000 		.word	.LANCHOR2
 413 0058 00000000 		.word	.LC1
 414 005c 00000000 		.word	prvTimerTask
 415 0060 00000000 		.word	.LANCHOR7
 416              	.LBE46:
 417              	.LBE45:
 418              		.cfi_endproc
 419              	.LFE4:
 421              		.section	.text.xTimerCreate,"ax",%progbits
 422              		.align	1
 423              		.global	xTimerCreate
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 427              		.fpu fpv4-sp-d16
 429              	xTimerCreate:
 430              	.LFB5:
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 431              		.loc 1 283 0
 432              		.cfi_startproc
 433              		@ args = 4, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              	.LVL37:
 436 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 437              	.LCFI10:
 438              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccYqoODf.s 			page 29


 439              		.cfi_offset 4, -24
 440              		.cfi_offset 5, -20
 441              		.cfi_offset 6, -16
 442              		.cfi_offset 7, -12
 443              		.cfi_offset 8, -8
 444              		.cfi_offset 14, -4
 445 0004 82B0     		sub	sp, sp, #8
 446              	.LCFI11:
 447              		.cfi_def_cfa_offset 32
 448 0006 0546     		mov	r5, r0
 449 0008 0E46     		mov	r6, r1
 450 000a 1746     		mov	r7, r2
 451 000c 9846     		mov	r8, r3
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 452              		.loc 1 286 0
 453 000e 3020     		movs	r0, #48
 454              	.LVL38:
 455 0010 FFF7FEFF 		bl	pvPortMalloc
 456              	.LVL39:
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 457              		.loc 1 288 0
 458 0014 0446     		mov	r4, r0
 459 0016 58B1     		cbz	r0, .L35
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 460              		.loc 1 290 0
 461 0018 0190     		str	r0, [sp, #4]
 462 001a 089B     		ldr	r3, [sp, #32]
 463 001c 0093     		str	r3, [sp]
 464 001e 4346     		mov	r3, r8
 465 0020 3A46     		mov	r2, r7
 466 0022 3146     		mov	r1, r6
 467 0024 2846     		mov	r0, r5
 468              	.LVL40:
 469 0026 FFF7FEFF 		bl	prvInitialiseNewTimer
 470              	.LVL41:
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 471              		.loc 1 297 0
 472 002a 0023     		movs	r3, #0
 473 002c 84F82C30 		strb	r3, [r4, #44]
 474              	.L35:
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 475              		.loc 1 303 0
 476 0030 2046     		mov	r0, r4
 477 0032 02B0     		add	sp, sp, #8
 478              	.LCFI12:
 479              		.cfi_def_cfa_offset 24
 480              		@ sp needed
 481 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 482              		.cfi_endproc
 483              	.LFE5:
 485              		.section	.text.xTimerCreateStatic,"ax",%progbits
 486              		.align	1
 487              		.global	xTimerCreateStatic
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 491              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccYqoODf.s 			page 30


 493              	xTimerCreateStatic:
 494              	.LFB6:
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 495              		.loc 1 316 0
 496              		.cfi_startproc
 497              		@ args = 8, pretend = 0, frame = 8
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              	.LVL42:
 500 0000 30B5     		push	{r4, r5, lr}
 501              	.LCFI13:
 502              		.cfi_def_cfa_offset 12
 503              		.cfi_offset 4, -12
 504              		.cfi_offset 5, -8
 505              		.cfi_offset 14, -4
 506 0002 85B0     		sub	sp, sp, #20
 507              	.LCFI14:
 508              		.cfi_def_cfa_offset 32
 509 0004 099C     		ldr	r4, [sp, #36]
 510              	.LBB47:
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 511              		.loc 1 324 0
 512 0006 3025     		movs	r5, #48
 513 0008 0395     		str	r5, [sp, #12]
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 514              		.loc 1 325 0
 515 000a 039D     		ldr	r5, [sp, #12]
 516 000c 302D     		cmp	r5, #48
 517 000e 08D0     		beq	.L39
 518              	.LBB48:
 519              	.LBB49:
 520              		.loc 2 195 0
 521              		.syntax unified
 522              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 523 0010 4FF05003 			mov r3, #80												
 524 0014 83F31188 		msr basepri, r3											
 525 0018 BFF36F8F 		isb														
 526 001c BFF34F8F 		dsb														
 527              	
 528              	@ 0 "" 2
 529              	.LVL43:
 530              		.thumb
 531              		.syntax unified
 532              	.L40:
 533 0020 FEE7     		b	.L40
 534              	.LVL44:
 535              	.L39:
 536              	.LBE49:
 537              	.LBE48:
 538              	.LBE47:
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 539              		.loc 1 330 0
 540 0022 44B9     		cbnz	r4, .L41
 541              	.LBB50:
 542              	.LBB51:
 543              		.loc 2 195 0
 544              		.syntax unified
 545              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /tmp/ccYqoODf.s 			page 31


 546 0024 4FF05003 			mov r3, #80												
 547 0028 83F31188 		msr basepri, r3											
 548 002c BFF36F8F 		isb														
 549 0030 BFF34F8F 		dsb														
 550              	
 551              	@ 0 "" 2
 552              	.LVL45:
 553              		.thumb
 554              		.syntax unified
 555              	.L42:
 556 0034 FEE7     		b	.L42
 557              	.LVL46:
 558              	.L41:
 559              	.LBE51:
 560              	.LBE50:
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 561              		.loc 1 335 0
 562 0036 0194     		str	r4, [sp, #4]
 563 0038 089D     		ldr	r5, [sp, #32]
 564 003a 0095     		str	r5, [sp]
 565 003c FFF7FEFF 		bl	prvInitialiseNewTimer
 566              	.LVL47:
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 567              		.loc 1 341 0
 568 0040 0123     		movs	r3, #1
 569 0042 84F82C30 		strb	r3, [r4, #44]
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 570              		.loc 1 347 0
 571 0046 2046     		mov	r0, r4
 572 0048 05B0     		add	sp, sp, #20
 573              	.LCFI15:
 574              		.cfi_def_cfa_offset 12
 575              		@ sp needed
 576 004a 30BD     		pop	{r4, r5, pc}
 577              		.cfi_endproc
 578              	.LFE6:
 580              		.section	.text.xTimerGenericCommand,"ax",%progbits
 581              		.align	1
 582              		.global	xTimerGenericCommand
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 586              		.fpu fpv4-sp-d16
 588              	xTimerGenericCommand:
 589              	.LFB8:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 590              		.loc 1 382 0
 591              		.cfi_startproc
 592              		@ args = 4, pretend = 0, frame = 16
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              	.LVL48:
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 595              		.loc 1 386 0
 596 0000 C8B1     		cbz	r0, .L53
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 597              		.loc 1 382 0
 598 0002 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccYqoODf.s 			page 32


 599              	.LCFI16:
 600              		.cfi_def_cfa_offset 12
 601              		.cfi_offset 4, -12
 602              		.cfi_offset 5, -8
 603              		.cfi_offset 14, -4
 604 0004 85B0     		sub	sp, sp, #20
 605              	.LCFI17:
 606              		.cfi_def_cfa_offset 32
 607 0006 1546     		mov	r5, r2
 608 0008 0446     		mov	r4, r0
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 609              		.loc 1 390 0
 610 000a 174A     		ldr	r2, .L55
 611              	.LVL49:
 612 000c 1068     		ldr	r0, [r2]
 613              	.LVL50:
 614 000e 40B3     		cbz	r0, .L50
 615 0010 1A46     		mov	r2, r3
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 616              		.loc 1 393 0
 617 0012 0091     		str	r1, [sp]
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 618              		.loc 1 394 0
 619 0014 0195     		str	r5, [sp, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 620              		.loc 1 395 0
 621 0016 0294     		str	r4, [sp, #8]
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 622              		.loc 1 397 0
 623 0018 0529     		cmp	r1, #5
 624 001a 1DDC     		bgt	.L48
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 625              		.loc 1 399 0
 626 001c FFF7FEFF 		bl	xTaskGetSchedulerState
 627              	.LVL51:
 628 0020 0228     		cmp	r0, #2
 629 0022 11D0     		beq	.L54
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 630              		.loc 1 405 0
 631 0024 0023     		movs	r3, #0
 632 0026 1A46     		mov	r2, r3
 633 0028 6946     		mov	r1, sp
 634 002a 0F48     		ldr	r0, .L55
 635 002c 0068     		ldr	r0, [r0]
 636 002e FFF7FEFF 		bl	xQueueGenericSend
 637              	.LVL52:
 638              	.L44:
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 639              		.loc 1 421 0
 640 0032 05B0     		add	sp, sp, #20
 641              	.LCFI18:
 642              		.cfi_def_cfa_offset 12
 643              		@ sp needed
 644 0034 30BD     		pop	{r4, r5, pc}
 645              	.LVL53:
 646              	.L53:
 647              	.LCFI19:
ARM GAS  /tmp/ccYqoODf.s 			page 33


 648              		.cfi_def_cfa_offset 0
 649              		.cfi_restore 4
 650              		.cfi_restore 5
 651              		.cfi_restore 14
 652              	.LBB52:
 653              	.LBB53:
 654              		.loc 2 195 0
 655              		.syntax unified
 656              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 657 0036 4FF05003 			mov r3, #80												
 658 003a 83F31188 		msr basepri, r3											
 659 003e BFF36F8F 		isb														
 660 0042 BFF34F8F 		dsb														
 661              	
 662              	@ 0 "" 2
 663              	.LVL54:
 664              		.thumb
 665              		.syntax unified
 666              	.L46:
 667 0046 FEE7     		b	.L46
 668              	.LVL55:
 669              	.L54:
 670              	.LCFI20:
 671              		.cfi_def_cfa_offset 32
 672              		.cfi_offset 4, -12
 673              		.cfi_offset 5, -8
 674              		.cfi_offset 14, -4
 675              	.LBE53:
 676              	.LBE52:
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 677              		.loc 1 401 0
 678 0048 0023     		movs	r3, #0
 679 004a 089A     		ldr	r2, [sp, #32]
 680 004c 6946     		mov	r1, sp
 681 004e 0648     		ldr	r0, .L55
 682 0050 0068     		ldr	r0, [r0]
 683 0052 FFF7FEFF 		bl	xQueueGenericSend
 684              	.LVL56:
 685 0056 ECE7     		b	.L44
 686              	.LVL57:
 687              	.L48:
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 688              		.loc 1 410 0
 689 0058 0023     		movs	r3, #0
 690 005a 6946     		mov	r1, sp
 691              	.LVL58:
 692 005c FFF7FEFF 		bl	xQueueGenericSendFromISR
 693              	.LVL59:
 694 0060 E7E7     		b	.L44
 695              	.LVL60:
 696              	.L50:
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 697              		.loc 1 383 0
 698 0062 0020     		movs	r0, #0
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 699              		.loc 1 420 0
 700 0064 E5E7     		b	.L44
ARM GAS  /tmp/ccYqoODf.s 			page 34


 701              	.L56:
 702 0066 00BF     		.align	2
 703              	.L55:
 704 0068 00000000 		.word	.LANCHOR2
 705              		.cfi_endproc
 706              	.LFE8:
 708              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 709              		.align	1
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 713              		.fpu fpv4-sp-d16
 715              	prvSwitchTimerLists:
 716              	.LFB20:
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 717              		.loc 1 836 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721 0000 70B5     		push	{r4, r5, r6, lr}
 722              	.LCFI21:
 723              		.cfi_def_cfa_offset 16
 724              		.cfi_offset 4, -16
 725              		.cfi_offset 5, -12
 726              		.cfi_offset 6, -8
 727              		.cfi_offset 14, -4
 728 0002 82B0     		sub	sp, sp, #8
 729              	.LCFI22:
 730              		.cfi_def_cfa_offset 24
 731              	.L59:
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 732              		.loc 1 846 0
 733 0004 1A4B     		ldr	r3, .L66
 734 0006 1B68     		ldr	r3, [r3]
 735 0008 1A68     		ldr	r2, [r3]
 736 000a 52B3     		cbz	r2, .L65
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 737              		.loc 1 848 0
 738 000c DB68     		ldr	r3, [r3, #12]
 739 000e 1E68     		ldr	r6, [r3]
 740              	.LVL61:
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 741              		.loc 1 851 0
 742 0010 DC68     		ldr	r4, [r3, #12]
 743              	.LVL62:
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 744              		.loc 1 852 0
 745 0012 251D     		adds	r5, r4, #4
 746 0014 2846     		mov	r0, r5
 747 0016 FFF7FEFF 		bl	uxListRemove
 748              	.LVL63:
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 749              		.loc 1 858 0
 750 001a 636A     		ldr	r3, [r4, #36]
 751 001c 2046     		mov	r0, r4
 752 001e 9847     		blx	r3
 753              	.LVL64:
ARM GAS  /tmp/ccYqoODf.s 			page 35


 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 754              		.loc 1 860 0
 755 0020 E369     		ldr	r3, [r4, #28]
 756 0022 012B     		cmp	r3, #1
 757 0024 EED1     		bne	.L59
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 758              		.loc 1 868 0
 759 0026 A369     		ldr	r3, [r4, #24]
 760 0028 3344     		add	r3, r3, r6
 761              	.LVL65:
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 762              		.loc 1 869 0
 763 002a 9E42     		cmp	r6, r3
 764 002c 07D2     		bcs	.L60
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 765              		.loc 1 871 0
 766 002e 6360     		str	r3, [r4, #4]
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 767              		.loc 1 872 0
 768 0030 2461     		str	r4, [r4, #16]
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 769              		.loc 1 873 0
 770 0032 2946     		mov	r1, r5
 771 0034 0E4B     		ldr	r3, .L66
 772              	.LVL66:
 773 0036 1868     		ldr	r0, [r3]
 774 0038 FFF7FEFF 		bl	vListInsert
 775              	.LVL67:
 776 003c E2E7     		b	.L59
 777              	.LVL68:
 778              	.L60:
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 779              		.loc 1 877 0
 780 003e 0021     		movs	r1, #0
 781 0040 0091     		str	r1, [sp]
 782 0042 0B46     		mov	r3, r1
 783              	.LVL69:
 784 0044 3246     		mov	r2, r6
 785 0046 2046     		mov	r0, r4
 786 0048 FFF7FEFF 		bl	xTimerGenericCommand
 787              	.LVL70:
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 788              		.loc 1 878 0
 789 004c 0028     		cmp	r0, #0
 790 004e D9D1     		bne	.L59
 791              	.LBB54:
 792              	.LBB55:
 793              		.loc 2 195 0
 794              		.syntax unified
 795              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 796 0050 4FF05003 			mov r3, #80												
 797 0054 83F31188 		msr basepri, r3											
 798 0058 BFF36F8F 		isb														
 799 005c BFF34F8F 		dsb														
 800              	
 801              	@ 0 "" 2
 802              	.LVL71:
ARM GAS  /tmp/ccYqoODf.s 			page 36


 803              		.thumb
 804              		.syntax unified
 805              	.L62:
 806 0060 FEE7     		b	.L62
 807              	.LVL72:
 808              	.L65:
 809              	.LBE55:
 810              	.LBE54:
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 811              		.loc 1 889 0
 812 0062 044A     		ldr	r2, .L66+4
 813 0064 1068     		ldr	r0, [r2]
 814 0066 0249     		ldr	r1, .L66
 815 0068 0860     		str	r0, [r1]
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 816              		.loc 1 890 0
 817 006a 1360     		str	r3, [r2]
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 818              		.loc 1 891 0
 819 006c 02B0     		add	sp, sp, #8
 820              	.LCFI23:
 821              		.cfi_def_cfa_offset 16
 822              		@ sp needed
 823 006e 70BD     		pop	{r4, r5, r6, pc}
 824              	.L67:
 825              		.align	2
 826              	.L66:
 827 0070 00000000 		.word	.LANCHOR0
 828 0074 00000000 		.word	.LANCHOR1
 829              		.cfi_endproc
 830              	.LFE20:
 832              		.section	.text.prvSampleTimeNow,"ax",%progbits
 833              		.align	1
 834              		.syntax unified
 835              		.thumb
 836              		.thumb_func
 837              		.fpu fpv4-sp-d16
 839              	prvSampleTimeNow:
 840              	.LFB17:
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 841              		.loc 1 625 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              	.LVL73:
 846 0000 38B5     		push	{r3, r4, r5, lr}
 847              	.LCFI24:
 848              		.cfi_def_cfa_offset 16
 849              		.cfi_offset 3, -16
 850              		.cfi_offset 4, -12
 851              		.cfi_offset 5, -8
 852              		.cfi_offset 14, -4
 853 0002 0546     		mov	r5, r0
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 854              		.loc 1 629 0
 855 0004 FFF7FEFF 		bl	xTaskGetTickCount
 856              	.LVL74:
ARM GAS  /tmp/ccYqoODf.s 			page 37


 857 0008 0446     		mov	r4, r0
 858              	.LVL75:
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 859              		.loc 1 631 0
 860 000a 074B     		ldr	r3, .L73
 861 000c 1B68     		ldr	r3, [r3]
 862 000e 8342     		cmp	r3, r0
 863 0010 05D8     		bhi	.L72
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 864              		.loc 1 638 0
 865 0012 0023     		movs	r3, #0
 866 0014 2B60     		str	r3, [r5]
 867              	.LVL76:
 868              	.L70:
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 869              		.loc 1 641 0
 870 0016 044B     		ldr	r3, .L73
 871 0018 1C60     		str	r4, [r3]
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 872              		.loc 1 644 0
 873 001a 2046     		mov	r0, r4
 874 001c 38BD     		pop	{r3, r4, r5, pc}
 875              	.LVL77:
 876              	.L72:
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 877              		.loc 1 633 0
 878 001e FFF7FEFF 		bl	prvSwitchTimerLists
 879              	.LVL78:
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 880              		.loc 1 634 0
 881 0022 0123     		movs	r3, #1
 882 0024 2B60     		str	r3, [r5]
 883 0026 F6E7     		b	.L70
 884              	.L74:
 885              		.align	2
 886              	.L73:
 887 0028 00000000 		.word	.LANCHOR8
 888              		.cfi_endproc
 889              	.LFE17:
 891              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 892              		.align	1
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 896              		.fpu fpv4-sp-d16
 898              	prvProcessExpiredTimer:
 899              	.LFB13:
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 900              		.loc 1 463 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              	.LVL79:
 905 0000 70B5     		push	{r4, r5, r6, lr}
 906              	.LCFI25:
 907              		.cfi_def_cfa_offset 16
 908              		.cfi_offset 4, -16
ARM GAS  /tmp/ccYqoODf.s 			page 38


 909              		.cfi_offset 5, -12
 910              		.cfi_offset 6, -8
 911              		.cfi_offset 14, -4
 912 0002 82B0     		sub	sp, sp, #8
 913              	.LCFI26:
 914              		.cfi_def_cfa_offset 24
 915 0004 0546     		mov	r5, r0
 916 0006 0E46     		mov	r6, r1
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 917              		.loc 1 465 0
 918 0008 144B     		ldr	r3, .L80
 919 000a 1B68     		ldr	r3, [r3]
 920 000c DB68     		ldr	r3, [r3, #12]
 921 000e DC68     		ldr	r4, [r3, #12]
 922              	.LVL80:
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 923              		.loc 1 469 0
 924 0010 201D     		adds	r0, r4, #4
 925              	.LVL81:
 926 0012 FFF7FEFF 		bl	uxListRemove
 927              	.LVL82:
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 928              		.loc 1 474 0
 929 0016 E369     		ldr	r3, [r4, #28]
 930 0018 012B     		cmp	r3, #1
 931 001a 04D0     		beq	.L79
 932              	.L76:
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 933              		.loc 1 498 0
 934 001c 636A     		ldr	r3, [r4, #36]
 935 001e 2046     		mov	r0, r4
 936 0020 9847     		blx	r3
 937              	.LVL83:
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 938              		.loc 1 499 0
 939 0022 02B0     		add	sp, sp, #8
 940              	.LCFI27:
 941              		.cfi_remember_state
 942              		.cfi_def_cfa_offset 16
 943              		@ sp needed
 944 0024 70BD     		pop	{r4, r5, r6, pc}
 945              	.LVL84:
 946              	.L79:
 947              	.LCFI28:
 948              		.cfi_restore_state
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 949              		.loc 1 479 0
 950 0026 A169     		ldr	r1, [r4, #24]
 951 0028 2B46     		mov	r3, r5
 952 002a 3246     		mov	r2, r6
 953 002c 2944     		add	r1, r1, r5
 954 002e 2046     		mov	r0, r4
 955 0030 FFF7FEFF 		bl	prvInsertTimerInActiveList
 956              	.LVL85:
 957 0034 0028     		cmp	r0, #0
 958 0036 F1D0     		beq	.L76
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
ARM GAS  /tmp/ccYqoODf.s 			page 39


 959              		.loc 1 483 0
 960 0038 0021     		movs	r1, #0
 961 003a 0091     		str	r1, [sp]
 962 003c 0B46     		mov	r3, r1
 963 003e 2A46     		mov	r2, r5
 964 0040 2046     		mov	r0, r4
 965 0042 FFF7FEFF 		bl	xTimerGenericCommand
 966              	.LVL86:
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 967              		.loc 1 484 0
 968 0046 0028     		cmp	r0, #0
 969 0048 E8D1     		bne	.L76
 970              	.LBB56:
 971              	.LBB57:
 972              		.loc 2 195 0
 973              		.syntax unified
 974              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 975 004a 4FF05003 			mov r3, #80												
 976 004e 83F31188 		msr basepri, r3											
 977 0052 BFF36F8F 		isb														
 978 0056 BFF34F8F 		dsb														
 979              	
 980              	@ 0 "" 2
 981              	.LVL87:
 982              		.thumb
 983              		.syntax unified
 984              	.L77:
 985 005a FEE7     		b	.L77
 986              	.L81:
 987              		.align	2
 988              	.L80:
 989 005c 00000000 		.word	.LANCHOR0
 990              	.LBE57:
 991              	.LBE56:
 992              		.cfi_endproc
 993              	.LFE13:
 995              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 996              		.align	1
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1000              		.fpu fpv4-sp-d16
 1002              	prvProcessTimerOrBlockTask:
 1003              	.LFB15:
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 1004              		.loc 1 539 0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 8
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 1008              	.LVL88:
 1009 0000 70B5     		push	{r4, r5, r6, lr}
 1010              	.LCFI29:
 1011              		.cfi_def_cfa_offset 16
 1012              		.cfi_offset 4, -16
 1013              		.cfi_offset 5, -12
 1014              		.cfi_offset 6, -8
 1015              		.cfi_offset 14, -4
ARM GAS  /tmp/ccYqoODf.s 			page 40


 1016 0002 82B0     		sub	sp, sp, #8
 1017              	.LCFI30:
 1018              		.cfi_def_cfa_offset 24
 1019 0004 0646     		mov	r6, r0
 1020 0006 0C46     		mov	r4, r1
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1021              		.loc 1 543 0
 1022 0008 FFF7FEFF 		bl	vTaskSuspendAll
 1023              	.LVL89:
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 1024              		.loc 1 550 0
 1025 000c 01A8     		add	r0, sp, #4
 1026 000e FFF7FEFF 		bl	prvSampleTimeNow
 1027              	.LVL90:
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1028              		.loc 1 551 0
 1029 0012 019B     		ldr	r3, [sp, #4]
 1030 0014 1BBB     		cbnz	r3, .L83
 1031 0016 0546     		mov	r5, r0
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1032              		.loc 1 554 0
 1033 0018 0CB9     		cbnz	r4, .L84
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1034              		.loc 1 554 0 is_stmt 0 discriminator 1
 1035 001a B042     		cmp	r0, r6
 1036 001c 18D2     		bcs	.L88
 1037              	.L84:
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1038              		.loc 1 567 0 is_stmt 1
 1039 001e 2CB1     		cbz	r4, .L86
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1040              		.loc 1 571 0
 1041 0020 114B     		ldr	r3, .L89
 1042 0022 1B68     		ldr	r3, [r3]
 1043 0024 1C68     		ldr	r4, [r3]
 1044              	.LVL91:
 1045 0026 B4FA84F4 		clz	r4, r4
 1046 002a 6409     		lsrs	r4, r4, #5
 1047              	.LVL92:
 1048              	.L86:
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1049              		.loc 1 574 0
 1050 002c 2246     		mov	r2, r4
 1051 002e 711B     		subs	r1, r6, r5
 1052 0030 0E4B     		ldr	r3, .L89+4
 1053 0032 1868     		ldr	r0, [r3]
 1054              	.LVL93:
 1055 0034 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 1056              	.LVL94:
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1057              		.loc 1 576 0
 1058 0038 FFF7FEFF 		bl	xTaskResumeAll
 1059              	.LVL95:
 1060 003c 88B9     		cbnz	r0, .L82
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1061              		.loc 1 582 0
 1062 003e 0C4B     		ldr	r3, .L89+8
ARM GAS  /tmp/ccYqoODf.s 			page 41


 1063 0040 4FF08052 		mov	r2, #268435456
 1064 0044 1A60     		str	r2, [r3]
 1065              		.syntax unified
 1066              	@ 582 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1067 0046 BFF34F8F 		dsb
 1068              	@ 0 "" 2
 1069              	@ 582 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1070 004a BFF36F8F 		isb
 1071              	@ 0 "" 2
 1072              		.thumb
 1073              		.syntax unified
 1074 004e 08E0     		b	.L82
 1075              	.LVL96:
 1076              	.L88:
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1077              		.loc 1 556 0
 1078 0050 FFF7FEFF 		bl	xTaskResumeAll
 1079              	.LVL97:
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1080              		.loc 1 557 0
 1081 0054 2946     		mov	r1, r5
 1082 0056 3046     		mov	r0, r6
 1083 0058 FFF7FEFF 		bl	prvProcessExpiredTimer
 1084              	.LVL98:
 1085 005c 01E0     		b	.L82
 1086              	.LVL99:
 1087              	.L83:
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1088              		.loc 1 592 0
 1089 005e FFF7FEFF 		bl	xTaskResumeAll
 1090              	.LVL100:
 1091              	.L82:
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1092              		.loc 1 595 0
 1093 0062 02B0     		add	sp, sp, #8
 1094              	.LCFI31:
 1095              		.cfi_def_cfa_offset 16
 1096              		@ sp needed
 1097 0064 70BD     		pop	{r4, r5, r6, pc}
 1098              	.LVL101:
 1099              	.L90:
 1100 0066 00BF     		.align	2
 1101              	.L89:
 1102 0068 00000000 		.word	.LANCHOR1
 1103 006c 00000000 		.word	.LANCHOR2
 1104 0070 04ED00E0 		.word	-536810236
 1105              		.cfi_endproc
 1106              	.LFE15:
 1108              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1109              		.align	1
 1110              		.syntax unified
 1111              		.thumb
 1112              		.thumb_func
 1113              		.fpu fpv4-sp-d16
 1115              	prvProcessReceivedCommands:
 1116              	.LFB19:
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
ARM GAS  /tmp/ccYqoODf.s 			page 42


 1117              		.loc 1 689 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 24
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121 0000 30B5     		push	{r4, r5, lr}
 1122              	.LCFI32:
 1123              		.cfi_def_cfa_offset 12
 1124              		.cfi_offset 4, -12
 1125              		.cfi_offset 5, -8
 1126              		.cfi_offset 14, -4
 1127 0002 89B0     		sub	sp, sp, #36
 1128              	.LCFI33:
 1129              		.cfi_def_cfa_offset 48
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1130              		.loc 1 695 0
 1131 0004 02E0     		b	.L94
 1132              	.L93:
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1133              		.loc 1 721 0
 1134 0006 049B     		ldr	r3, [sp, #16]
 1135 0008 002B     		cmp	r3, #0
 1136 000a 0FDA     		bge	.L106
 1137              	.L94:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1138              		.loc 1 695 0
 1139 000c 0022     		movs	r2, #0
 1140 000e 04A9     		add	r1, sp, #16
 1141 0010 394B     		ldr	r3, .L109
 1142 0012 1868     		ldr	r0, [r3]
 1143 0014 FFF7FEFF 		bl	xQueueReceive
 1144              	.LVL102:
 1145 0018 0028     		cmp	r0, #0
 1146 001a 6AD0     		beq	.L107
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1147              		.loc 1 701 0
 1148 001c 049B     		ldr	r3, [sp, #16]
 1149 001e 002B     		cmp	r3, #0
 1150 0020 F1DA     		bge	.L93
 1151              	.LVL103:
 1152              	.LBB58:
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1153              		.loc 1 710 0
 1154 0022 0799     		ldr	r1, [sp, #28]
 1155 0024 0698     		ldr	r0, [sp, #24]
 1156 0026 059B     		ldr	r3, [sp, #20]
 1157 0028 9847     		blx	r3
 1158              	.LVL104:
 1159              	.LBE58:
 1160 002a ECE7     		b	.L93
 1161              	.LVL105:
 1162              	.L106:
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1163              		.loc 1 725 0
 1164 002c 069C     		ldr	r4, [sp, #24]
 1165              	.LVL106:
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1166              		.loc 1 727 0
ARM GAS  /tmp/ccYqoODf.s 			page 43


 1167 002e 6369     		ldr	r3, [r4, #20]
 1168 0030 13B1     		cbz	r3, .L95
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1169              		.loc 1 730 0
 1170 0032 201D     		adds	r0, r4, #4
 1171 0034 FFF7FEFF 		bl	uxListRemove
 1172              	.LVL107:
 1173              	.L95:
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1174              		.loc 1 745 0
 1175 0038 03A8     		add	r0, sp, #12
 1176 003a FFF7FEFF 		bl	prvSampleTimeNow
 1177              	.LVL108:
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1178              		.loc 1 747 0
 1179 003e 049B     		ldr	r3, [sp, #16]
 1180 0040 092B     		cmp	r3, #9
 1181 0042 E3D8     		bhi	.L94
 1182 0044 01A2     		adr	r2, .L98
 1183 0046 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1184 004a 00BF     		.p2align 2
 1185              	.L98:
 1186 004c 75000000 		.word	.L97+1
 1187 0050 75000000 		.word	.L97+1
 1188 0054 75000000 		.word	.L97+1
 1189 0058 0D000000 		.word	.L94+1
 1190 005c BD000000 		.word	.L99+1
 1191 0060 E3000000 		.word	.L100+1
 1192 0064 75000000 		.word	.L97+1
 1193 0068 75000000 		.word	.L97+1
 1194 006c 0D000000 		.word	.L94+1
 1195 0070 BD000000 		.word	.L99+1
 1196              		.p2align 1
 1197              	.L97:
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1198              		.loc 1 755 0
 1199 0074 0599     		ldr	r1, [sp, #20]
 1200 0076 A569     		ldr	r5, [r4, #24]
 1201 0078 0B46     		mov	r3, r1
 1202 007a 0246     		mov	r2, r0
 1203 007c 2944     		add	r1, r1, r5
 1204 007e 2046     		mov	r0, r4
 1205              	.LVL109:
 1206 0080 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1207              	.LVL110:
 1208 0084 0028     		cmp	r0, #0
 1209 0086 C1D0     		beq	.L94
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1210              		.loc 1 759 0
 1211 0088 636A     		ldr	r3, [r4, #36]
 1212 008a 2046     		mov	r0, r4
 1213 008c 9847     		blx	r3
 1214              	.LVL111:
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1215              		.loc 1 762 0
 1216 008e E369     		ldr	r3, [r4, #28]
 1217 0090 012B     		cmp	r3, #1
ARM GAS  /tmp/ccYqoODf.s 			page 44


 1218 0092 BBD1     		bne	.L94
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1219              		.loc 1 764 0
 1220 0094 A269     		ldr	r2, [r4, #24]
 1221 0096 0021     		movs	r1, #0
 1222 0098 0091     		str	r1, [sp]
 1223 009a 0B46     		mov	r3, r1
 1224 009c 0598     		ldr	r0, [sp, #20]
 1225 009e 0244     		add	r2, r2, r0
 1226 00a0 2046     		mov	r0, r4
 1227 00a2 FFF7FEFF 		bl	xTimerGenericCommand
 1228              	.LVL112:
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1229              		.loc 1 765 0
 1230 00a6 0028     		cmp	r0, #0
 1231 00a8 B0D1     		bne	.L94
 1232              	.LBB59:
 1233              	.LBB60:
 1234              		.loc 2 195 0
 1235              		.syntax unified
 1236              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1237 00aa 4FF05003 			mov r3, #80												
 1238 00ae 83F31188 		msr basepri, r3											
 1239 00b2 BFF36F8F 		isb														
 1240 00b6 BFF34F8F 		dsb														
 1241              	
 1242              	@ 0 "" 2
 1243              	.LVL113:
 1244              		.thumb
 1245              		.syntax unified
 1246              	.L101:
 1247 00ba FEE7     		b	.L101
 1248              	.LVL114:
 1249              	.L99:
 1250              	.LBE60:
 1251              	.LBE59:
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1252              		.loc 1 787 0
 1253 00bc 0599     		ldr	r1, [sp, #20]
 1254 00be A161     		str	r1, [r4, #24]
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1255              		.loc 1 788 0
 1256 00c0 31B1     		cbz	r1, .L108
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1257              		.loc 1 796 0
 1258 00c2 0346     		mov	r3, r0
 1259 00c4 0246     		mov	r2, r0
 1260 00c6 0144     		add	r1, r1, r0
 1261 00c8 2046     		mov	r0, r4
 1262              	.LVL115:
 1263 00ca FFF7FEFF 		bl	prvInsertTimerInActiveList
 1264              	.LVL116:
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1265              		.loc 1 797 0
 1266 00ce 9DE7     		b	.L94
 1267              	.LVL117:
 1268              	.L108:
ARM GAS  /tmp/ccYqoODf.s 			page 45


 1269              	.LBB61:
 1270              	.LBB62:
 1271              		.loc 2 195 0
 1272              		.syntax unified
 1273              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1274 00d0 4FF05003 			mov r3, #80												
 1275 00d4 83F31188 		msr basepri, r3											
 1276 00d8 BFF36F8F 		isb														
 1277 00dc BFF34F8F 		dsb														
 1278              	
 1279              	@ 0 "" 2
 1280              	.LVL118:
 1281              		.thumb
 1282              		.syntax unified
 1283              	.L103:
 1284 00e0 FEE7     		b	.L103
 1285              	.L100:
 1286              	.LBE62:
 1287              	.LBE61:
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1288              		.loc 1 814 0
 1289 00e2 94F82C30 		ldrb	r3, [r4, #44]	@ zero_extendqisi2
 1290 00e6 002B     		cmp	r3, #0
 1291 00e8 90D1     		bne	.L94
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1292              		.loc 1 816 0
 1293 00ea 2046     		mov	r0, r4
 1294              	.LVL119:
 1295 00ec FFF7FEFF 		bl	vPortFree
 1296              	.LVL120:
 1297 00f0 8CE7     		b	.L94
 1298              	.LVL121:
 1299              	.L107:
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1300              		.loc 1 832 0
 1301 00f2 09B0     		add	sp, sp, #36
 1302              	.LCFI34:
 1303              		.cfi_def_cfa_offset 12
 1304              		@ sp needed
 1305 00f4 30BD     		pop	{r4, r5, pc}
 1306              	.L110:
 1307 00f6 00BF     		.align	2
 1308              	.L109:
 1309 00f8 00000000 		.word	.LANCHOR2
 1310              		.cfi_endproc
 1311              	.LFE19:
 1313              		.section	.text.prvTimerTask,"ax",%progbits
 1314              		.align	1
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu fpv4-sp-d16
 1320              	prvTimerTask:
 1321              	.LFB14:
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1322              		.loc 1 503 0
 1323              		.cfi_startproc
ARM GAS  /tmp/ccYqoODf.s 			page 46


 1324              		@ args = 0, pretend = 0, frame = 8
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326              	.LVL122:
 1327 0000 00B5     		push	{lr}
 1328              	.LCFI35:
 1329              		.cfi_def_cfa_offset 4
 1330              		.cfi_offset 14, -4
 1331 0002 83B0     		sub	sp, sp, #12
 1332              	.LCFI36:
 1333              		.cfi_def_cfa_offset 16
 1334              	.LVL123:
 1335              	.L112:
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1336              		.loc 1 526 0 discriminator 1
 1337 0004 01A8     		add	r0, sp, #4
 1338 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1339              	.LVL124:
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1340              		.loc 1 530 0 discriminator 1
 1341 000a 0199     		ldr	r1, [sp, #4]
 1342 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1343              	.LVL125:
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1344              		.loc 1 533 0 discriminator 1
 1345 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1346              	.LVL126:
 1347 0014 F6E7     		b	.L112
 1348              		.cfi_endproc
 1349              	.LFE14:
 1351              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1352              		.align	1
 1353              		.global	xTimerGetTimerDaemonTaskHandle
 1354              		.syntax unified
 1355              		.thumb
 1356              		.thumb_func
 1357              		.fpu fpv4-sp-d16
 1359              	xTimerGetTimerDaemonTaskHandle:
 1360              	.LFB9:
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1361              		.loc 1 425 0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 0, uses_anonymous_args = 0
 1365              		@ link register save eliminated.
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1366              		.loc 1 428 0
 1367 0000 064B     		ldr	r3, .L118
 1368 0002 1868     		ldr	r0, [r3]
 1369 0004 00B1     		cbz	r0, .L117
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1370              		.loc 1 430 0
 1371 0006 7047     		bx	lr
 1372              	.L117:
 1373              	.LBB63:
 1374              	.LBB64:
 1375              		.loc 2 195 0
 1376              		.syntax unified
ARM GAS  /tmp/ccYqoODf.s 			page 47


 1377              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1378 0008 4FF05003 			mov r3, #80												
 1379 000c 83F31188 		msr basepri, r3											
 1380 0010 BFF36F8F 		isb														
 1381 0014 BFF34F8F 		dsb														
 1382              	
 1383              	@ 0 "" 2
 1384              	.LVL127:
 1385              		.thumb
 1386              		.syntax unified
 1387              	.L116:
 1388 0018 FEE7     		b	.L116
 1389              	.L119:
 1390 001a 00BF     		.align	2
 1391              	.L118:
 1392 001c 00000000 		.word	.LANCHOR7
 1393              	.LBE64:
 1394              	.LBE63:
 1395              		.cfi_endproc
 1396              	.LFE9:
 1398              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1399              		.align	1
 1400              		.global	xTimerGetPeriod
 1401              		.syntax unified
 1402              		.thumb
 1403              		.thumb_func
 1404              		.fpu fpv4-sp-d16
 1406              	xTimerGetPeriod:
 1407              	.LFB10:
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1408              		.loc 1 434 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              		@ link register save eliminated.
 1413              	.LVL128:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1414              		.loc 1 437 0
 1415 0000 08B1     		cbz	r0, .L123
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1416              		.loc 1 439 0
 1417 0002 8069     		ldr	r0, [r0, #24]
 1418              	.LVL129:
 1419 0004 7047     		bx	lr
 1420              	.LVL130:
 1421              	.L123:
 1422              	.LBB65:
 1423              	.LBB66:
 1424              		.loc 2 195 0
 1425              		.syntax unified
 1426              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1427 0006 4FF05003 			mov r3, #80												
 1428 000a 83F31188 		msr basepri, r3											
 1429 000e BFF36F8F 		isb														
 1430 0012 BFF34F8F 		dsb														
 1431              	
 1432              	@ 0 "" 2
ARM GAS  /tmp/ccYqoODf.s 			page 48


 1433              	.LVL131:
 1434              		.thumb
 1435              		.syntax unified
 1436              	.L122:
 1437 0016 FEE7     		b	.L122
 1438              	.LBE66:
 1439              	.LBE65:
 1440              		.cfi_endproc
 1441              	.LFE10:
 1443              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1444              		.align	1
 1445              		.global	xTimerGetExpiryTime
 1446              		.syntax unified
 1447              		.thumb
 1448              		.thumb_func
 1449              		.fpu fpv4-sp-d16
 1451              	xTimerGetExpiryTime:
 1452              	.LFB11:
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 1453              		.loc 1 443 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 1458              	.LVL132:
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1459              		.loc 1 447 0
 1460 0000 08B1     		cbz	r0, .L127
 1461              	.LVL133:
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1462              		.loc 1 450 0
 1463 0002 4068     		ldr	r0, [r0, #4]
 1464              	.LVL134:
 1465 0004 7047     		bx	lr
 1466              	.LVL135:
 1467              	.L127:
 1468              	.LBB67:
 1469              	.LBB68:
 1470              		.loc 2 195 0
 1471              		.syntax unified
 1472              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1473 0006 4FF05003 			mov r3, #80												
 1474 000a 83F31188 		msr basepri, r3											
 1475 000e BFF36F8F 		isb														
 1476 0012 BFF34F8F 		dsb														
 1477              	
 1478              	@ 0 "" 2
 1479              	.LVL136:
 1480              		.thumb
 1481              		.syntax unified
 1482              	.L126:
 1483 0016 FEE7     		b	.L126
 1484              	.LBE68:
 1485              	.LBE67:
 1486              		.cfi_endproc
 1487              	.LFE11:
 1489              		.section	.text.pcTimerGetName,"ax",%progbits
ARM GAS  /tmp/ccYqoODf.s 			page 49


 1490              		.align	1
 1491              		.global	pcTimerGetName
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1495              		.fpu fpv4-sp-d16
 1497              	pcTimerGetName:
 1498              	.LFB12:
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1499              		.loc 1 454 0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503              		@ link register save eliminated.
 1504              	.LVL137:
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1505              		.loc 1 457 0
 1506 0000 08B1     		cbz	r0, .L131
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1507              		.loc 1 459 0
 1508 0002 0068     		ldr	r0, [r0]
 1509              	.LVL138:
 1510 0004 7047     		bx	lr
 1511              	.LVL139:
 1512              	.L131:
 1513              	.LBB69:
 1514              	.LBB70:
 1515              		.loc 2 195 0
 1516              		.syntax unified
 1517              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1518 0006 4FF05003 			mov r3, #80												
 1519 000a 83F31188 		msr basepri, r3											
 1520 000e BFF36F8F 		isb														
 1521 0012 BFF34F8F 		dsb														
 1522              	
 1523              	@ 0 "" 2
 1524              	.LVL140:
 1525              		.thumb
 1526              		.syntax unified
 1527              	.L130:
 1528 0016 FEE7     		b	.L130
 1529              	.LBE70:
 1530              	.LBE69:
 1531              		.cfi_endproc
 1532              	.LFE12:
 1534              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1535              		.align	1
 1536              		.global	xTimerIsTimerActive
 1537              		.syntax unified
 1538              		.thumb
 1539              		.thumb_func
 1540              		.fpu fpv4-sp-d16
 1542              	xTimerIsTimerActive:
 1543              	.LFB22:
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
ARM GAS  /tmp/ccYqoODf.s 			page 50


 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1544              		.loc 1 946 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 0
 1547              		@ frame_needed = 0, uses_anonymous_args = 0
 1548              	.LVL141:
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1549              		.loc 1 950 0
 1550 0000 40B9     		cbnz	r0, .L133
 1551              	.LBB71:
 1552              	.LBB72:
 1553              		.loc 2 195 0
 1554              		.syntax unified
 1555              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1556 0002 4FF05003 			mov r3, #80												
 1557 0006 83F31188 		msr basepri, r3											
 1558 000a BFF36F8F 		isb														
 1559 000e BFF34F8F 		dsb														
 1560              	
 1561              	@ 0 "" 2
 1562              	.LVL142:
 1563              		.thumb
 1564              		.syntax unified
 1565              	.L134:
 1566 0012 FEE7     		b	.L134
 1567              	.L133:
 1568              	.LBE72:
 1569              	.LBE71:
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 1570              		.loc 1 946 0
 1571 0014 10B5     		push	{r4, lr}
 1572              	.LCFI37:
 1573              		.cfi_def_cfa_offset 8
 1574              		.cfi_offset 4, -8
 1575              		.cfi_offset 14, -4
 1576 0016 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1577              		.loc 1 953 0
 1578 0018 FFF7FEFF 		bl	vPortEnterCritical
 1579              	.LVL143:
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Checking to see if it is in the NULL list in effect checks to see if
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is referenced from either the current or the overflow timer lists in
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		one go, but the logic has to be reversed, hence the '!'. */
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimerIsInActiveList = ( BaseType_t ) !( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListIte
 1580              		.loc 1 958 0
 1581 001c 6469     		ldr	r4, [r4, #20]
 1582              	.LVL144:
 1583 001e 0034     		adds	r4, r4, #0
 1584 0020 18BF     		it	ne
 1585 0022 0124     		movne	r4, #1
 1586              	.LVL145:
ARM GAS  /tmp/ccYqoODf.s 			page 51


 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1587              		.loc 1 960 0
 1588 0024 FFF7FEFF 		bl	vPortExitCritical
 1589              	.LVL146:
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerIsInActiveList;
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1590              		.loc 1 963 0
 1591 0028 2046     		mov	r0, r4
 1592 002a 10BD     		pop	{r4, pc}
 1593              		.cfi_endproc
 1594              	.LFE22:
 1596              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1597              		.align	1
 1598              		.global	pvTimerGetTimerID
 1599              		.syntax unified
 1600              		.thumb
 1601              		.thumb_func
 1602              		.fpu fpv4-sp-d16
 1604              	pvTimerGetTimerID:
 1605              	.LFB23:
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1606              		.loc 1 967 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              	.LVL147:
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1611              		.loc 1 971 0
 1612 0000 40B9     		cbnz	r0, .L138
 1613              	.LBB73:
 1614              	.LBB74:
 1615              		.loc 2 195 0
 1616              		.syntax unified
 1617              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1618 0002 4FF05003 			mov r3, #80												
 1619 0006 83F31188 		msr basepri, r3											
 1620 000a BFF36F8F 		isb														
 1621 000e BFF34F8F 		dsb														
 1622              	
 1623              	@ 0 "" 2
 1624              	.LVL148:
 1625              		.thumb
 1626              		.syntax unified
 1627              	.L139:
 1628 0012 FEE7     		b	.L139
 1629              	.L138:
 1630              	.LBE74:
 1631              	.LBE73:
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
ARM GAS  /tmp/ccYqoODf.s 			page 52


 1632              		.loc 1 967 0
 1633 0014 10B5     		push	{r4, lr}
 1634              	.LCFI38:
 1635              		.cfi_def_cfa_offset 8
 1636              		.cfi_offset 4, -8
 1637              		.cfi_offset 14, -4
 1638 0016 0446     		mov	r4, r0
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1639              		.loc 1 973 0
 1640 0018 FFF7FEFF 		bl	vPortEnterCritical
 1641              	.LVL149:
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1642              		.loc 1 975 0
 1643 001c 246A     		ldr	r4, [r4, #32]
 1644              	.LVL150:
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1645              		.loc 1 977 0
 1646 001e FFF7FEFF 		bl	vPortExitCritical
 1647              	.LVL151:
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1648              		.loc 1 980 0
 1649 0022 2046     		mov	r0, r4
 1650 0024 10BD     		pop	{r4, pc}
 1651              		.cfi_endproc
 1652              	.LFE23:
 1654              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1655              		.align	1
 1656              		.global	vTimerSetTimerID
 1657              		.syntax unified
 1658              		.thumb
 1659              		.thumb_func
 1660              		.fpu fpv4-sp-d16
 1662              	vTimerSetTimerID:
 1663              	.LFB24:
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1664              		.loc 1 984 0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 0
 1667              		@ frame_needed = 0, uses_anonymous_args = 0
 1668              	.LVL152:
 1669 0000 38B5     		push	{r3, r4, r5, lr}
 1670              	.LCFI39:
 1671              		.cfi_def_cfa_offset 16
 1672              		.cfi_offset 3, -16
 1673              		.cfi_offset 4, -12
 1674              		.cfi_offset 5, -8
 1675              		.cfi_offset 14, -4
 1676              	.LVL153:
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
ARM GAS  /tmp/ccYqoODf.s 			page 53


 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1677              		.loc 1 987 0
 1678 0002 40B9     		cbnz	r0, .L143
 1679              	.LBB75:
 1680              	.LBB76:
 1681              		.loc 2 195 0
 1682              		.syntax unified
 1683              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1684 0004 4FF05003 			mov r3, #80												
 1685 0008 83F31188 		msr basepri, r3											
 1686 000c BFF36F8F 		isb														
 1687 0010 BFF34F8F 		dsb														
 1688              	
 1689              	@ 0 "" 2
 1690              	.LVL154:
 1691              		.thumb
 1692              		.syntax unified
 1693              	.L144:
 1694 0014 FEE7     		b	.L144
 1695              	.L143:
 1696 0016 0446     		mov	r4, r0
 1697 0018 0D46     		mov	r5, r1
 1698              	.LBE76:
 1699              	.LBE75:
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1700              		.loc 1 989 0
 1701 001a FFF7FEFF 		bl	vPortEnterCritical
 1702              	.LVL155:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1703              		.loc 1 991 0
 1704 001e 2562     		str	r5, [r4, #32]
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1705              		.loc 1 993 0
 1706 0020 FFF7FEFF 		bl	vPortExitCritical
 1707              	.LVL156:
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1708              		.loc 1 994 0
 1709 0024 38BD     		pop	{r3, r4, r5, pc}
 1710              		.cfi_endproc
 1711              	.LFE24:
 1713              		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
 1714              		.align	1
 1715              		.global	xTimerPendFunctionCallFromISR
 1716              		.syntax unified
 1717              		.thumb
 1718              		.thumb_func
 1719              		.fpu fpv4-sp-d16
 1721              	xTimerPendFunctionCallFromISR:
 1722              	.LFB25:
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/ccYqoODf.s 			page 54


 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1723              		.loc 1 1000 0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 16
 1726              		@ frame_needed = 0, uses_anonymous_args = 0
 1727              	.LVL157:
 1728 0000 10B5     		push	{r4, lr}
 1729              	.LCFI40:
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 4, -8
 1732              		.cfi_offset 14, -4
 1733 0002 84B0     		sub	sp, sp, #16
 1734              	.LCFI41:
 1735              		.cfi_def_cfa_offset 24
 1736 0004 1C46     		mov	r4, r3
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 1737              		.loc 1 1006 0
 1738 0006 6FF00103 		mvn	r3, #1
 1739              	.LVL158:
 1740 000a 0093     		str	r3, [sp]
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1741              		.loc 1 1007 0
 1742 000c 0190     		str	r0, [sp, #4]
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1743              		.loc 1 1008 0
 1744 000e 0291     		str	r1, [sp, #8]
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1745              		.loc 1 1009 0
 1746 0010 0392     		str	r2, [sp, #12]
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 1747              		.loc 1 1011 0
 1748 0012 0023     		movs	r3, #0
 1749 0014 2246     		mov	r2, r4
 1750              	.LVL159:
 1751 0016 6946     		mov	r1, sp
 1752              	.LVL160:
 1753 0018 0248     		ldr	r0, .L148
 1754              	.LVL161:
 1755 001a 0068     		ldr	r0, [r0]
 1756 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 1757              	.LVL162:
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1758              		.loc 1 1016 0
 1759 0020 04B0     		add	sp, sp, #16
 1760              	.LCFI42:
 1761              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccYqoODf.s 			page 55


 1762              		@ sp needed
 1763 0022 10BD     		pop	{r4, pc}
 1764              	.LVL163:
 1765              	.L149:
 1766              		.align	2
 1767              	.L148:
 1768 0024 00000000 		.word	.LANCHOR2
 1769              		.cfi_endproc
 1770              	.LFE25:
 1772              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 1773              		.align	1
 1774              		.global	xTimerPendFunctionCall
 1775              		.syntax unified
 1776              		.thumb
 1777              		.thumb_func
 1778              		.fpu fpv4-sp-d16
 1780              	xTimerPendFunctionCall:
 1781              	.LFB26:
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1782              		.loc 1 1024 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 16
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786              	.LVL164:
 1787 0000 30B5     		push	{r4, r5, lr}
 1788              	.LCFI43:
 1789              		.cfi_def_cfa_offset 12
 1790              		.cfi_offset 4, -12
 1791              		.cfi_offset 5, -8
 1792              		.cfi_offset 14, -4
 1793 0002 85B0     		sub	sp, sp, #20
 1794              	.LCFI44:
 1795              		.cfi_def_cfa_offset 32
 1796 0004 1446     		mov	r4, r2
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* This function can only be called after a timer has been created or
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		queue does not exist. */
1031:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( xTimerQueue );
 1797              		.loc 1 1031 0
 1798 0006 0D4A     		ldr	r2, .L154
 1799              	.LVL165:
 1800 0008 1568     		ldr	r5, [r2]
 1801 000a 45B9     		cbnz	r5, .L151
 1802              	.LBB77:
 1803              	.LBB78:
 1804              		.loc 2 195 0
 1805              		.syntax unified
ARM GAS  /tmp/ccYqoODf.s 			page 56


 1806              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1807 000c 4FF05003 			mov r3, #80												
 1808 0010 83F31188 		msr basepri, r3											
 1809 0014 BFF36F8F 		isb														
 1810 0018 BFF34F8F 		dsb														
 1811              	
 1812              	@ 0 "" 2
 1813              	.LVL166:
 1814              		.thumb
 1815              		.syntax unified
 1816              	.L152:
 1817 001c FEE7     		b	.L152
 1818              	.LVL167:
 1819              	.L151:
 1820 001e 1A46     		mov	r2, r3
 1821 0020 0346     		mov	r3, r0
 1822              	.LVL168:
 1823              	.LBE78:
 1824              	.LBE77:
1032:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1033:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1034:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1035:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 1825              		.loc 1 1035 0
 1826 0022 4FF0FF30 		mov	r0, #-1
 1827              	.LVL169:
 1828 0026 0090     		str	r0, [sp]
1036:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1829              		.loc 1 1036 0
 1830 0028 0193     		str	r3, [sp, #4]
1037:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1831              		.loc 1 1037 0
 1832 002a 0291     		str	r1, [sp, #8]
1038:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1833              		.loc 1 1038 0
 1834 002c 0394     		str	r4, [sp, #12]
1039:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1040:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 1835              		.loc 1 1040 0
 1836 002e 0023     		movs	r3, #0
 1837              	.LVL170:
 1838 0030 6946     		mov	r1, sp
 1839              	.LVL171:
 1840 0032 2846     		mov	r0, r5
 1841 0034 FFF7FEFF 		bl	xQueueGenericSend
 1842              	.LVL172:
1041:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1042:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1043:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1044:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1045:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1843              		.loc 1 1045 0
 1844 0038 05B0     		add	sp, sp, #20
 1845              	.LCFI45:
 1846              		.cfi_def_cfa_offset 12
 1847              		@ sp needed
 1848 003a 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccYqoODf.s 			page 57


 1849              	.LVL173:
 1850              	.L155:
 1851              		.align	2
 1852              	.L154:
 1853 003c 00000000 		.word	.LANCHOR2
 1854              		.cfi_endproc
 1855              	.LFE26:
 1857              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 1858              		.align	1
 1859              		.global	uxTimerGetTimerNumber
 1860              		.syntax unified
 1861              		.thumb
 1862              		.thumb_func
 1863              		.fpu fpv4-sp-d16
 1865              	uxTimerGetTimerNumber:
 1866              	.LFB27:
1046:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1047:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1048:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1049:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1050:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1051:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1052:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1053:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1867              		.loc 1 1053 0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 0
 1870              		@ frame_needed = 0, uses_anonymous_args = 0
 1871              		@ link register save eliminated.
 1872              	.LVL174:
1054:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
1055:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1873              		.loc 1 1055 0
 1874 0000 806A     		ldr	r0, [r0, #40]
 1875              	.LVL175:
 1876 0002 7047     		bx	lr
 1877              		.cfi_endproc
 1878              	.LFE27:
 1880              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 1881              		.align	1
 1882              		.global	vTimerSetTimerNumber
 1883              		.syntax unified
 1884              		.thumb
 1885              		.thumb_func
 1886              		.fpu fpv4-sp-d16
 1888              	vTimerSetTimerNumber:
 1889              	.LFB28:
1056:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1057:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1058:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1059:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1060:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1061:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1062:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1063:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1890              		.loc 1 1063 0
 1891              		.cfi_startproc
ARM GAS  /tmp/ccYqoODf.s 			page 58


 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894              		@ link register save eliminated.
 1895              	.LVL176:
1064:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1896              		.loc 1 1064 0
 1897 0000 8162     		str	r1, [r0, #40]
1065:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1898              		.loc 1 1065 0
 1899 0002 7047     		bx	lr
 1900              		.cfi_endproc
 1901              	.LFE28:
 1903              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1904              		.align	2
 1905              		.set	.LANCHOR0,. + 0
 1908              	pxCurrentTimerList:
 1909 0000 00000000 		.space	4
 1910              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1911              		.align	2
 1912              		.set	.LANCHOR1,. + 0
 1915              	pxOverflowTimerList:
 1916 0000 00000000 		.space	4
 1917              		.section	.bss.ucStaticTimerQueueStorage.6791,"aw",%nobits
 1918              		.align	2
 1919              		.set	.LANCHOR6,. + 0
 1922              	ucStaticTimerQueueStorage.6791:
 1923 0000 00000000 		.space	160
 1923      00000000 
 1923      00000000 
 1923      00000000 
 1923      00000000 
 1924              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1925              		.align	2
 1926              		.set	.LANCHOR3,. + 0
 1929              	xActiveTimerList1:
 1930 0000 00000000 		.space	20
 1930      00000000 
 1930      00000000 
 1930      00000000 
 1930      00000000 
 1931              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1932              		.align	2
 1933              		.set	.LANCHOR4,. + 0
 1936              	xActiveTimerList2:
 1937 0000 00000000 		.space	20
 1937      00000000 
 1937      00000000 
 1937      00000000 
 1937      00000000 
 1938              		.section	.bss.xLastTime.6740,"aw",%nobits
 1939              		.align	2
 1940              		.set	.LANCHOR8,. + 0
 1943              	xLastTime.6740:
 1944 0000 00000000 		.space	4
 1945              		.section	.bss.xStaticTimerQueue.6790,"aw",%nobits
 1946              		.align	2
 1947              		.set	.LANCHOR5,. + 0
ARM GAS  /tmp/ccYqoODf.s 			page 59


 1950              	xStaticTimerQueue.6790:
 1951 0000 00000000 		.space	80
 1951      00000000 
 1951      00000000 
 1951      00000000 
 1951      00000000 
 1952              		.section	.bss.xTimerQueue,"aw",%nobits
 1953              		.align	2
 1954              		.set	.LANCHOR2,. + 0
 1957              	xTimerQueue:
 1958 0000 00000000 		.space	4
 1959              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1960              		.align	2
 1961              		.set	.LANCHOR7,. + 0
 1964              	xTimerTaskHandle:
 1965 0000 00000000 		.space	4
 1966              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 1967              		.align	2
 1968              	.LC0:
 1969 0000 546D7251 		.ascii	"TmrQ\000"
 1969      00
 1970              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 1971              		.align	2
 1972              	.LC1:
 1973 0000 546D7220 		.ascii	"Tmr Svc\000"
 1973      53766300 
 1974              		.text
 1975              	.Letext0:
 1976              		.file 3 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eab
 1977              		.file 4 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 1978              		.file 5 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 1979              		.file 6 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 1980              		.file 7 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 1981              		.file 8 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 1982              		.file 9 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 1983              		.file 10 "Inc/FreeRTOSConfig.h"
 1984              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1985              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1986              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1987              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1988              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 1989              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccYqoODf.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/ccYqoODf.s:18     .text.prvGetNextExpireTime:0000000000000000 $t
     /tmp/ccYqoODf.s:24     .text.prvGetNextExpireTime:0000000000000000 prvGetNextExpireTime
     /tmp/ccYqoODf.s:57     .text.prvGetNextExpireTime:000000000000001c $d
     /tmp/ccYqoODf.s:62     .text.prvInsertTimerInActiveList:0000000000000000 $t
     /tmp/ccYqoODf.s:68     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
     /tmp/ccYqoODf.s:146    .text.prvInsertTimerInActiveList:0000000000000040 $d
     /tmp/ccYqoODf.s:152    .text.prvCheckForValidListAndQueue:0000000000000000 $t
     /tmp/ccYqoODf.s:158    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
     /tmp/ccYqoODf.s:234    .text.prvCheckForValidListAndQueue:0000000000000050 $d
     /tmp/ccYqoODf.s:246    .text.prvInitialiseNewTimer:0000000000000000 $t
     /tmp/ccYqoODf.s:252    .text.prvInitialiseNewTimer:0000000000000000 prvInitialiseNewTimer
     /tmp/ccYqoODf.s:323    .text.xTimerCreateTimerTask:0000000000000000 $t
     /tmp/ccYqoODf.s:330    .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
     /tmp/ccYqoODf.s:412    .text.xTimerCreateTimerTask:0000000000000054 $d
     /tmp/ccYqoODf.s:1320   .text.prvTimerTask:0000000000000000 prvTimerTask
     /tmp/ccYqoODf.s:422    .text.xTimerCreate:0000000000000000 $t
     /tmp/ccYqoODf.s:429    .text.xTimerCreate:0000000000000000 xTimerCreate
     /tmp/ccYqoODf.s:486    .text.xTimerCreateStatic:0000000000000000 $t
     /tmp/ccYqoODf.s:493    .text.xTimerCreateStatic:0000000000000000 xTimerCreateStatic
     /tmp/ccYqoODf.s:581    .text.xTimerGenericCommand:0000000000000000 $t
     /tmp/ccYqoODf.s:588    .text.xTimerGenericCommand:0000000000000000 xTimerGenericCommand
     /tmp/ccYqoODf.s:704    .text.xTimerGenericCommand:0000000000000068 $d
     /tmp/ccYqoODf.s:709    .text.prvSwitchTimerLists:0000000000000000 $t
     /tmp/ccYqoODf.s:715    .text.prvSwitchTimerLists:0000000000000000 prvSwitchTimerLists
     /tmp/ccYqoODf.s:827    .text.prvSwitchTimerLists:0000000000000070 $d
     /tmp/ccYqoODf.s:833    .text.prvSampleTimeNow:0000000000000000 $t
     /tmp/ccYqoODf.s:839    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
     /tmp/ccYqoODf.s:887    .text.prvSampleTimeNow:0000000000000028 $d
     /tmp/ccYqoODf.s:892    .text.prvProcessExpiredTimer:0000000000000000 $t
     /tmp/ccYqoODf.s:898    .text.prvProcessExpiredTimer:0000000000000000 prvProcessExpiredTimer
     /tmp/ccYqoODf.s:989    .text.prvProcessExpiredTimer:000000000000005c $d
     /tmp/ccYqoODf.s:996    .text.prvProcessTimerOrBlockTask:0000000000000000 $t
     /tmp/ccYqoODf.s:1002   .text.prvProcessTimerOrBlockTask:0000000000000000 prvProcessTimerOrBlockTask
     /tmp/ccYqoODf.s:1102   .text.prvProcessTimerOrBlockTask:0000000000000068 $d
     /tmp/ccYqoODf.s:1109   .text.prvProcessReceivedCommands:0000000000000000 $t
     /tmp/ccYqoODf.s:1115   .text.prvProcessReceivedCommands:0000000000000000 prvProcessReceivedCommands
     /tmp/ccYqoODf.s:1186   .text.prvProcessReceivedCommands:000000000000004c $d
     /tmp/ccYqoODf.s:1196   .text.prvProcessReceivedCommands:0000000000000074 $t
     /tmp/ccYqoODf.s:1309   .text.prvProcessReceivedCommands:00000000000000f8 $d
     /tmp/ccYqoODf.s:1314   .text.prvTimerTask:0000000000000000 $t
     /tmp/ccYqoODf.s:1352   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
     /tmp/ccYqoODf.s:1359   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
     /tmp/ccYqoODf.s:1392   .text.xTimerGetTimerDaemonTaskHandle:000000000000001c $d
     /tmp/ccYqoODf.s:1399   .text.xTimerGetPeriod:0000000000000000 $t
     /tmp/ccYqoODf.s:1406   .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
     /tmp/ccYqoODf.s:1444   .text.xTimerGetExpiryTime:0000000000000000 $t
     /tmp/ccYqoODf.s:1451   .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
     /tmp/ccYqoODf.s:1490   .text.pcTimerGetName:0000000000000000 $t
     /tmp/ccYqoODf.s:1497   .text.pcTimerGetName:0000000000000000 pcTimerGetName
     /tmp/ccYqoODf.s:1535   .text.xTimerIsTimerActive:0000000000000000 $t
     /tmp/ccYqoODf.s:1542   .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
     /tmp/ccYqoODf.s:1597   .text.pvTimerGetTimerID:0000000000000000 $t
     /tmp/ccYqoODf.s:1604   .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
     /tmp/ccYqoODf.s:1655   .text.vTimerSetTimerID:0000000000000000 $t
     /tmp/ccYqoODf.s:1662   .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
ARM GAS  /tmp/ccYqoODf.s 			page 61


     /tmp/ccYqoODf.s:1714   .text.xTimerPendFunctionCallFromISR:0000000000000000 $t
     /tmp/ccYqoODf.s:1721   .text.xTimerPendFunctionCallFromISR:0000000000000000 xTimerPendFunctionCallFromISR
     /tmp/ccYqoODf.s:1768   .text.xTimerPendFunctionCallFromISR:0000000000000024 $d
     /tmp/ccYqoODf.s:1773   .text.xTimerPendFunctionCall:0000000000000000 $t
     /tmp/ccYqoODf.s:1780   .text.xTimerPendFunctionCall:0000000000000000 xTimerPendFunctionCall
     /tmp/ccYqoODf.s:1853   .text.xTimerPendFunctionCall:000000000000003c $d
     /tmp/ccYqoODf.s:1858   .text.uxTimerGetTimerNumber:0000000000000000 $t
     /tmp/ccYqoODf.s:1865   .text.uxTimerGetTimerNumber:0000000000000000 uxTimerGetTimerNumber
     /tmp/ccYqoODf.s:1881   .text.vTimerSetTimerNumber:0000000000000000 $t
     /tmp/ccYqoODf.s:1888   .text.vTimerSetTimerNumber:0000000000000000 vTimerSetTimerNumber
     /tmp/ccYqoODf.s:1904   .bss.pxCurrentTimerList:0000000000000000 $d
     /tmp/ccYqoODf.s:1908   .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
     /tmp/ccYqoODf.s:1911   .bss.pxOverflowTimerList:0000000000000000 $d
     /tmp/ccYqoODf.s:1915   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
     /tmp/ccYqoODf.s:1918   .bss.ucStaticTimerQueueStorage.6791:0000000000000000 $d
     /tmp/ccYqoODf.s:1922   .bss.ucStaticTimerQueueStorage.6791:0000000000000000 ucStaticTimerQueueStorage.6791
     /tmp/ccYqoODf.s:1925   .bss.xActiveTimerList1:0000000000000000 $d
     /tmp/ccYqoODf.s:1929   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
     /tmp/ccYqoODf.s:1932   .bss.xActiveTimerList2:0000000000000000 $d
     /tmp/ccYqoODf.s:1936   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
     /tmp/ccYqoODf.s:1939   .bss.xLastTime.6740:0000000000000000 $d
     /tmp/ccYqoODf.s:1943   .bss.xLastTime.6740:0000000000000000 xLastTime.6740
     /tmp/ccYqoODf.s:1946   .bss.xStaticTimerQueue.6790:0000000000000000 $d
     /tmp/ccYqoODf.s:1950   .bss.xStaticTimerQueue.6790:0000000000000000 xStaticTimerQueue.6790
     /tmp/ccYqoODf.s:1953   .bss.xTimerQueue:0000000000000000 $d
     /tmp/ccYqoODf.s:1957   .bss.xTimerQueue:0000000000000000 xTimerQueue
     /tmp/ccYqoODf.s:1960   .bss.xTimerTaskHandle:0000000000000000 $d
     /tmp/ccYqoODf.s:1964   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
     /tmp/ccYqoODf.s:1967   .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
     /tmp/ccYqoODf.s:1971   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
