ARM GAS  /tmp/ccyQlUm1.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"queue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvGetDisinheritPriorityAfterTimeout:
  25              	.LFB32:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  /tmp/ccyQlUm1.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** against the coding standard (although an exception to the standard has been
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** permitted where the dual use also significantly changes the type of the
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure member). */
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define pxMutexHolder					pcTail
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
ARM GAS  /tmp/ccyQlUm1.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
ARM GAS  /tmp/ccyQlUm1.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
ARM GAS  /tmp/ccyQlUm1.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
ARM GAS  /tmp/ccyQlUm1.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
ARM GAS  /tmp/ccyQlUm1.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
ARM GAS  /tmp/ccyQlUm1.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
ARM GAS  /tmp/ccyQlUm1.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
ARM GAS  /tmp/ccyQlUm1.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccyQlUm1.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
ARM GAS  /tmp/ccyQlUm1.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
ARM GAS  /tmp/ccyQlUm1.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
ARM GAS  /tmp/ccyQlUm1.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
ARM GAS  /tmp/ccyQlUm1.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
ARM GAS  /tmp/ccyQlUm1.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
ARM GAS  /tmp/ccyQlUm1.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
ARM GAS  /tmp/ccyQlUm1.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
ARM GAS  /tmp/ccyQlUm1.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccyQlUm1.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
ARM GAS  /tmp/ccyQlUm1.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
ARM GAS  /tmp/ccyQlUm1.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
ARM GAS  /tmp/ccyQlUm1.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/ccyQlUm1.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/ccyQlUm1.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
ARM GAS  /tmp/ccyQlUm1.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is n
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccyQlUm1.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccyQlUm1.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
ARM GAS  /tmp/ccyQlUm1.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccyQlUm1.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccyQlUm1.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccyQlUm1.s 			page 32


1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
ARM GAS  /tmp/ccyQlUm1.s 			page 33


1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
ARM GAS  /tmp/ccyQlUm1.s 			page 34


1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
ARM GAS  /tmp/ccyQlUm1.s 			page 35


1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccyQlUm1.s 			page 36


1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  27              		.loc 1 2015 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
ARM GAS  /tmp/ccyQlUm1.s 			page 37


2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0 )
  33              		.loc 1 2024 0
  34 0000 436A     		ldr	r3, [r0, #36]
  35 0002 23B1     		cbz	r3, .L3
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = configMAX_PRIORITIES - listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( px
  36              		.loc 1 2026 0
  37 0004 036B     		ldr	r3, [r0, #48]
  38 0006 1868     		ldr	r0, [r3]
  39              	.LVL1:
  40 0008 C0F13800 		rsb	r0, r0, #56
  41              	.LVL2:
  42 000c 7047     		bx	lr
  43              	.LVL3:
  44              	.L3:
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  45              		.loc 1 2030 0
  46 000e 0020     		movs	r0, #0
  47              	.LVL4:
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
  48              		.loc 1 2034 0
  49 0010 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE32:
  53              		.section	.text.prvIsQueueFull,"ax",%progbits
  54              		.align	1
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv4-sp-d16
  60              	prvIsQueueFull:
  61              	.LFB38:
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccyQlUm1.s 			page 38


2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccyQlUm1.s 			page 39


2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/ccyQlUm1.s 			page 40


2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
ARM GAS  /tmp/ccyQlUm1.s 			page 41


2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
ARM GAS  /tmp/ccyQlUm1.s 			page 42


2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  62              		.loc 1 2296 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              	.LVL5:
  67 0000 10B5     		push	{r4, lr}
  68              	.LCFI0:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
  72 0002 0446     		mov	r4, r0
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  73              		.loc 1 2299 0
  74 0004 FFF7FEFF 		bl	vPortEnterCritical
  75              	.LVL6:
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  76              		.loc 1 2301 0
  77 0008 A26B     		ldr	r2, [r4, #56]
  78 000a E36B     		ldr	r3, [r4, #60]
  79 000c 9A42     		cmp	r2, r3
  80 000e 04D0     		beq	.L8
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  81              		.loc 1 2307 0
  82 0010 0024     		movs	r4, #0
  83              	.LVL7:
  84              	.L5:
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  85              		.loc 1 2310 0
  86 0012 FFF7FEFF 		bl	vPortExitCritical
  87              	.LVL8:
ARM GAS  /tmp/ccyQlUm1.s 			page 43


2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  88              		.loc 1 2313 0
  89 0016 2046     		mov	r0, r4
  90 0018 10BD     		pop	{r4, pc}
  91              	.LVL9:
  92              	.L8:
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  93              		.loc 1 2303 0
  94 001a 0124     		movs	r4, #1
  95              	.LVL10:
  96 001c F9E7     		b	.L5
  97              		.cfi_endproc
  98              	.LFE38:
 100              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 101              		.align	1
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu fpv4-sp-d16
 107              	prvIsQueueEmpty:
 108              	.LFB36:
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 109              		.loc 1 2257 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              	.LVL11:
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 119 0002 0446     		mov	r4, r0
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 120              		.loc 1 2260 0
 121 0004 FFF7FEFF 		bl	vPortEnterCritical
 122              	.LVL12:
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 123              		.loc 1 2262 0
 124 0008 A36B     		ldr	r3, [r4, #56]
 125 000a 23B1     		cbz	r3, .L13
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 126              		.loc 1 2268 0
 127 000c 0024     		movs	r4, #0
 128              	.LVL13:
 129              	.L10:
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 130              		.loc 1 2271 0
 131 000e FFF7FEFF 		bl	vPortExitCritical
 132              	.LVL14:
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 133              		.loc 1 2274 0
 134 0012 2046     		mov	r0, r4
 135 0014 10BD     		pop	{r4, pc}
 136              	.LVL15:
ARM GAS  /tmp/ccyQlUm1.s 			page 44


 137              	.L13:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 138              		.loc 1 2264 0
 139 0016 0124     		movs	r4, #1
 140              	.LVL16:
 141 0018 F9E7     		b	.L10
 142              		.cfi_endproc
 143              	.LFE36:
 145              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	prvCopyDataToQueue:
 153              	.LFB33:
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 154              		.loc 1 2040 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              	.LVL17:
 159 0000 70B5     		push	{r4, r5, r6, lr}
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 16
 162              		.cfi_offset 4, -16
 163              		.cfi_offset 5, -12
 164              		.cfi_offset 6, -8
 165              		.cfi_offset 14, -4
 166 0002 0446     		mov	r4, r0
 167 0004 1646     		mov	r6, r2
 168              	.LVL18:
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 169              		.loc 1 2046 0
 170 0006 856B     		ldr	r5, [r0, #56]
 171              	.LVL19:
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 172              		.loc 1 2048 0
 173 0008 026C     		ldr	r2, [r0, #64]
 174              	.LVL20:
 175 000a 5AB9     		cbnz	r2, .L15
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 176              		.loc 1 2052 0
 177 000c 0368     		ldr	r3, [r0]
 178 000e 1BB1     		cbz	r3, .L24
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 179              		.loc 1 2041 0
 180 0010 0020     		movs	r0, #0
 181              	.LVL21:
 182              	.L16:
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 183              		.loc 1 2112 0
 184 0012 0135     		adds	r5, r5, #1
 185              	.LVL22:
 186 0014 A563     		str	r5, [r4, #56]
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 187              		.loc 1 2115 0
ARM GAS  /tmp/ccyQlUm1.s 			page 45


 188 0016 70BD     		pop	{r4, r5, r6, pc}
 189              	.LVL23:
 190              	.L24:
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 191              		.loc 1 2055 0
 192 0018 4068     		ldr	r0, [r0, #4]
 193              	.LVL24:
 194 001a FFF7FEFF 		bl	xTaskPriorityDisinherit
 195              	.LVL25:
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 196              		.loc 1 2056 0
 197 001e 0023     		movs	r3, #0
 198 0020 6360     		str	r3, [r4, #4]
 199 0022 F6E7     		b	.L16
 200              	.LVL26:
 201              	.L15:
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 202              		.loc 1 2065 0
 203 0024 6EB9     		cbnz	r6, .L17
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 204              		.loc 1 2067 0
 205 0026 8068     		ldr	r0, [r0, #8]
 206              	.LVL27:
 207 0028 FFF7FEFF 		bl	memcpy
 208              	.LVL28:
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 209              		.loc 1 2068 0
 210 002c 226C     		ldr	r2, [r4, #64]
 211 002e A368     		ldr	r3, [r4, #8]
 212 0030 1344     		add	r3, r3, r2
 213 0032 A360     		str	r3, [r4, #8]
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 214              		.loc 1 2069 0
 215 0034 6268     		ldr	r2, [r4, #4]
 216 0036 9342     		cmp	r3, r2
 217 0038 19D3     		bcc	.L20
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 218              		.loc 1 2071 0
 219 003a 2368     		ldr	r3, [r4]
 220 003c A360     		str	r3, [r4, #8]
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 221              		.loc 1 2041 0
 222 003e 0020     		movs	r0, #0
 223 0040 E7E7     		b	.L16
 224              	.LVL29:
 225              	.L17:
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 226              		.loc 1 2080 0
 227 0042 C068     		ldr	r0, [r0, #12]
 228              	.LVL30:
 229 0044 FFF7FEFF 		bl	memcpy
 230              	.LVL31:
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 231              		.loc 1 2081 0
 232 0048 226C     		ldr	r2, [r4, #64]
 233 004a 5242     		negs	r2, r2
 234 004c E368     		ldr	r3, [r4, #12]
ARM GAS  /tmp/ccyQlUm1.s 			page 46


 235 004e 1344     		add	r3, r3, r2
 236 0050 E360     		str	r3, [r4, #12]
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 237              		.loc 1 2082 0
 238 0052 2168     		ldr	r1, [r4]
 239 0054 8B42     		cmp	r3, r1
 240 0056 02D2     		bcs	.L18
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 241              		.loc 1 2084 0
 242 0058 6368     		ldr	r3, [r4, #4]
 243 005a 1A44     		add	r2, r2, r3
 244 005c E260     		str	r2, [r4, #12]
 245              	.L18:
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 246              		.loc 1 2091 0
 247 005e 022E     		cmp	r6, #2
 248 0060 01D0     		beq	.L25
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 249              		.loc 1 2041 0
 250 0062 0020     		movs	r0, #0
 251 0064 D5E7     		b	.L16
 252              	.L25:
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 253              		.loc 1 2093 0
 254 0066 25B1     		cbz	r5, .L22
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 255              		.loc 1 2099 0
 256 0068 013D     		subs	r5, r5, #1
 257              	.LVL32:
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 258              		.loc 1 2041 0
 259 006a 0020     		movs	r0, #0
 260 006c D1E7     		b	.L16
 261              	.L20:
 262 006e 0020     		movs	r0, #0
 263 0070 CFE7     		b	.L16
 264              	.L22:
 265 0072 0020     		movs	r0, #0
 266 0074 CDE7     		b	.L16
 267              		.cfi_endproc
 268              	.LFE33:
 270              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 271              		.align	1
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv4-sp-d16
 277              	prvCopyDataFromQueue:
 278              	.LFB34:
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 279              		.loc 1 2119 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              	.LVL33:
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 284              		.loc 1 2120 0
ARM GAS  /tmp/ccyQlUm1.s 			page 47


 285 0000 026C     		ldr	r2, [r0, #64]
 286 0002 72B1     		cbz	r2, .L30
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 287              		.loc 1 2119 0
 288 0004 10B5     		push	{r4, lr}
 289              	.LCFI3:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 4, -8
 292              		.cfi_offset 14, -4
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 293              		.loc 1 2122 0
 294 0006 C368     		ldr	r3, [r0, #12]
 295 0008 1344     		add	r3, r3, r2
 296 000a C360     		str	r3, [r0, #12]
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 297              		.loc 1 2123 0
 298 000c 4468     		ldr	r4, [r0, #4]
 299 000e A342     		cmp	r3, r4
 300 0010 01D3     		bcc	.L28
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 301              		.loc 1 2125 0
 302 0012 0368     		ldr	r3, [r0]
 303 0014 C360     		str	r3, [r0, #12]
 304              	.L28:
 305 0016 0C46     		mov	r4, r1
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 306              		.loc 1 2131 0
 307 0018 C168     		ldr	r1, [r0, #12]
 308              	.LVL34:
 309 001a 2046     		mov	r0, r4
 310              	.LVL35:
 311 001c FFF7FEFF 		bl	memcpy
 312              	.LVL36:
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 313              		.loc 1 2133 0
 314 0020 10BD     		pop	{r4, pc}
 315              	.LVL37:
 316              	.L30:
 317              	.LCFI4:
 318              		.cfi_def_cfa_offset 0
 319              		.cfi_restore 4
 320              		.cfi_restore 14
 321 0022 7047     		bx	lr
 322              		.cfi_endproc
 323              	.LFE34:
 325              		.section	.text.prvUnlockQueue,"ax",%progbits
 326              		.align	1
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu fpv4-sp-d16
 332              	prvUnlockQueue:
 333              	.LFB35:
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 334              		.loc 1 2137 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccyQlUm1.s 			page 48


 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              	.LVL38:
 339 0000 38B5     		push	{r3, r4, r5, lr}
 340              	.LCFI5:
 341              		.cfi_def_cfa_offset 16
 342              		.cfi_offset 3, -16
 343              		.cfi_offset 4, -12
 344              		.cfi_offset 5, -8
 345              		.cfi_offset 14, -4
 346 0002 0546     		mov	r5, r0
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 347              		.loc 1 2144 0
 348 0004 FFF7FEFF 		bl	vPortEnterCritical
 349              	.LVL39:
 350              	.LBB118:
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 351              		.loc 1 2146 0
 352 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 353 000c 64B2     		sxtb	r4, r4
 354              	.LVL40:
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 355              		.loc 1 2149 0
 356 000e 03E0     		b	.L34
 357              	.L43:
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 358              		.loc 1 2203 0
 359 0010 FFF7FEFF 		bl	vTaskMissedYield
 360              	.LVL41:
 361              	.L36:
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 362              		.loc 1 2217 0
 363 0014 013C     		subs	r4, r4, #1
 364              	.LVL42:
 365 0016 64B2     		sxtb	r4, r4
 366              	.LVL43:
 367              	.L34:
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 368              		.loc 1 2149 0
 369 0018 002C     		cmp	r4, #0
 370 001a 08DD     		ble	.L35
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 371              		.loc 1 2197 0
 372 001c 6B6A     		ldr	r3, [r5, #36]
 373 001e 33B1     		cbz	r3, .L35
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 374              		.loc 1 2199 0
 375 0020 05F12400 		add	r0, r5, #36
 376 0024 FFF7FEFF 		bl	xTaskRemoveFromEventList
 377              	.LVL44:
 378 0028 0028     		cmp	r0, #0
 379 002a F3D0     		beq	.L36
 380 002c F0E7     		b	.L43
 381              	.L35:
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 382              		.loc 1 2220 0
 383 002e FF23     		movs	r3, #255
 384 0030 85F84530 		strb	r3, [r5, #69]
ARM GAS  /tmp/ccyQlUm1.s 			page 49


 385              	.LBE118:
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386              		.loc 1 2222 0
 387 0034 FFF7FEFF 		bl	vPortExitCritical
 388              	.LVL45:
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 389              		.loc 1 2225 0
 390 0038 FFF7FEFF 		bl	vPortEnterCritical
 391              	.LVL46:
 392              	.LBB119:
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 393              		.loc 1 2227 0
 394 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 395              	.LVL47:
 396 0040 64B2     		sxtb	r4, r4
 397              	.LVL48:
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 398              		.loc 1 2229 0
 399 0042 03E0     		b	.L38
 400              	.L44:
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 401              		.loc 1 2235 0
 402 0044 FFF7FEFF 		bl	vTaskMissedYield
 403              	.LVL49:
 404              	.L40:
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 405              		.loc 1 2242 0
 406 0048 013C     		subs	r4, r4, #1
 407              	.LVL50:
 408 004a 64B2     		sxtb	r4, r4
 409              	.LVL51:
 410              	.L38:
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 411              		.loc 1 2229 0
 412 004c 002C     		cmp	r4, #0
 413 004e 08DD     		ble	.L39
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 414              		.loc 1 2231 0
 415 0050 2B69     		ldr	r3, [r5, #16]
 416 0052 33B1     		cbz	r3, .L39
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 417              		.loc 1 2233 0
 418 0054 05F11000 		add	r0, r5, #16
 419 0058 FFF7FEFF 		bl	xTaskRemoveFromEventList
 420              	.LVL52:
 421 005c 0028     		cmp	r0, #0
 422 005e F3D0     		beq	.L40
 423 0060 F0E7     		b	.L44
 424              	.L39:
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 425              		.loc 1 2250 0
 426 0062 FF23     		movs	r3, #255
 427 0064 85F84430 		strb	r3, [r5, #68]
 428              	.LBE119:
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 429              		.loc 1 2252 0
 430 0068 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  /tmp/ccyQlUm1.s 			page 50


 431              	.LVL53:
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 432              		.loc 1 2253 0
 433 006c 38BD     		pop	{r3, r4, r5, pc}
 434              		.cfi_endproc
 435              	.LFE35:
 437              		.section	.text.xQueueGenericReset,"ax",%progbits
 438              		.align	1
 439              		.global	xQueueGenericReset
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv4-sp-d16
 445              	xQueueGenericReset:
 446              	.LFB4:
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 447              		.loc 1 248 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              	.LVL54:
 452 0000 38B5     		push	{r3, r4, r5, lr}
 453              	.LCFI6:
 454              		.cfi_def_cfa_offset 16
 455              		.cfi_offset 3, -16
 456              		.cfi_offset 4, -12
 457              		.cfi_offset 5, -8
 458              		.cfi_offset 14, -4
 459              	.LVL55:
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 460              		.loc 1 251 0
 461 0002 40B9     		cbnz	r0, .L46
 462              	.LBB120:
 463              	.LBB121:
 464              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
ARM GAS  /tmp/ccyQlUm1.s 			page 51


  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
ARM GAS  /tmp/ccyQlUm1.s 			page 52


  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
ARM GAS  /tmp/ccyQlUm1.s 			page 53


 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
ARM GAS  /tmp/ccyQlUm1.s 			page 54


 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 465              		.loc 2 195 0
 466              		.syntax unified
 467              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 468 0004 4FF05003 			mov r3, #80												
 469 0008 83F31188 		msr basepri, r3											
 470 000c BFF36F8F 		isb														
 471 0010 BFF34F8F 		dsb														
 472              	
 473              	@ 0 "" 2
 474              	.LVL56:
 475              		.thumb
 476              		.syntax unified
 477              	.L47:
 478 0014 FEE7     		b	.L47
 479              	.L46:
 480 0016 0446     		mov	r4, r0
 481 0018 0D46     		mov	r5, r1
 482              	.LBE121:
 483              	.LBE120:
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 484              		.loc 1 253 0
 485 001a FFF7FEFF 		bl	vPortEnterCritical
 486              	.LVL57:
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 487              		.loc 1 255 0
 488 001e 2168     		ldr	r1, [r4]
 489 0020 E26B     		ldr	r2, [r4, #60]
 490 0022 236C     		ldr	r3, [r4, #64]
 491 0024 03FB0210 		mla	r0, r3, r2, r1
 492 0028 6060     		str	r0, [r4, #4]
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 493              		.loc 1 256 0
 494 002a 0020     		movs	r0, #0
 495 002c A063     		str	r0, [r4, #56]
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 496              		.loc 1 257 0
 497 002e A160     		str	r1, [r4, #8]
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 498              		.loc 1 258 0
 499 0030 013A     		subs	r2, r2, #1
 500 0032 02FB0313 		mla	r3, r2, r3, r1
 501 0036 E360     		str	r3, [r4, #12]
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 502              		.loc 1 259 0
 503 0038 FF23     		movs	r3, #255
 504 003a 84F84430 		strb	r3, [r4, #68]
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 505              		.loc 1 260 0
 506 003e 84F84530 		strb	r3, [r4, #69]
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 507              		.loc 1 262 0
 508 0042 A5B9     		cbnz	r5, .L48
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 509              		.loc 1 269 0
 510 0044 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/ccyQlUm1.s 			page 55


 511 0046 1BB9     		cbnz	r3, .L51
 512              	.L49:
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 513              		.loc 1 292 0
 514 0048 FFF7FEFF 		bl	vPortExitCritical
 515              	.LVL58:
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 516              		.loc 1 297 0
 517 004c 0120     		movs	r0, #1
 518 004e 38BD     		pop	{r3, r4, r5, pc}
 519              	.LVL59:
 520              	.L51:
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 521              		.loc 1 271 0
 522 0050 04F11000 		add	r0, r4, #16
 523 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 524              	.LVL60:
 525 0058 0028     		cmp	r0, #0
 526 005a F5D0     		beq	.L49
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 527              		.loc 1 273 0
 528 005c 084B     		ldr	r3, .L52
 529 005e 4FF08052 		mov	r2, #268435456
 530 0062 1A60     		str	r2, [r3]
 531              		.syntax unified
 532              	@ 273 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 533 0064 BFF34F8F 		dsb
 534              	@ 0 "" 2
 535              	@ 273 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 536 0068 BFF36F8F 		isb
 537              	@ 0 "" 2
 538              		.thumb
 539              		.syntax unified
 540 006c ECE7     		b	.L49
 541              	.L48:
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 542              		.loc 1 288 0
 543 006e 04F11000 		add	r0, r4, #16
 544 0072 FFF7FEFF 		bl	vListInitialise
 545              	.LVL61:
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 546              		.loc 1 289 0
 547 0076 04F12400 		add	r0, r4, #36
 548 007a FFF7FEFF 		bl	vListInitialise
 549              	.LVL62:
 550 007e E3E7     		b	.L49
 551              	.L53:
 552              		.align	2
 553              	.L52:
 554 0080 04ED00E0 		.word	-536810236
 555              		.cfi_endproc
 556              	.LFE4:
 558              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 559              		.align	1
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
ARM GAS  /tmp/ccyQlUm1.s 			page 56


 563              		.fpu fpv4-sp-d16
 565              	prvInitialiseNewQueue:
 566              	.LFB7:
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 567              		.loc 1 409 0
 568              		.cfi_startproc
 569              		@ args = 4, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              	.LVL63:
 572 0000 38B5     		push	{r3, r4, r5, lr}
 573              	.LCFI7:
 574              		.cfi_def_cfa_offset 16
 575              		.cfi_offset 3, -16
 576              		.cfi_offset 4, -12
 577              		.cfi_offset 5, -8
 578              		.cfi_offset 14, -4
 579 0002 1D46     		mov	r5, r3
 580 0004 049C     		ldr	r4, [sp, #16]
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 581              		.loc 1 414 0
 582 0006 0B46     		mov	r3, r1
 583              	.LVL64:
 584 0008 49B1     		cbz	r1, .L58
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 585              		.loc 1 425 0
 586 000a 2260     		str	r2, [r4]
 587              	.L56:
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 588              		.loc 1 430 0
 589 000c E063     		str	r0, [r4, #60]
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 590              		.loc 1 431 0
 591 000e 2364     		str	r3, [r4, #64]
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 592              		.loc 1 432 0
 593 0010 0121     		movs	r1, #1
 594              	.LVL65:
 595 0012 2046     		mov	r0, r4
 596              	.LVL66:
 597 0014 FFF7FEFF 		bl	xQueueGenericReset
 598              	.LVL67:
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 599              		.loc 1 436 0
 600 0018 84F84C50 		strb	r5, [r4, #76]
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 601              		.loc 1 447 0
 602 001c 38BD     		pop	{r3, r4, r5, pc}
 603              	.LVL68:
 604              	.L58:
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 605              		.loc 1 420 0
 606 001e 2460     		str	r4, [r4]
 607 0020 F4E7     		b	.L56
 608              		.cfi_endproc
 609              	.LFE7:
 611              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 612              		.align	1
ARM GAS  /tmp/ccyQlUm1.s 			page 57


 613              		.global	xQueueGenericCreateStatic
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu fpv4-sp-d16
 619              	xQueueGenericCreateStatic:
 620              	.LFB5:
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 621              		.loc 1 303 0
 622              		.cfi_startproc
 623              		@ args = 4, pretend = 0, frame = 8
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              	.LVL69:
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 626              		.loc 1 306 0
 627 0000 40B9     		cbnz	r0, .L60
 628              	.LBB122:
 629              	.LBB123:
 630              		.loc 2 195 0
 631              		.syntax unified
 632              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 633 0002 4FF05003 			mov r3, #80												
 634 0006 83F31188 		msr basepri, r3											
 635 000a BFF36F8F 		isb														
 636 000e BFF34F8F 		dsb														
 637              	
 638              	@ 0 "" 2
 639              	.LVL70:
 640              		.thumb
 641              		.syntax unified
 642              	.L61:
 643 0012 FEE7     		b	.L61
 644              	.LVL71:
 645              	.L60:
 646              	.LBE123:
 647              	.LBE122:
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 648              		.loc 1 303 0
 649 0014 10B5     		push	{r4, lr}
 650              	.LCFI8:
 651              		.cfi_def_cfa_offset 8
 652              		.cfi_offset 4, -8
 653              		.cfi_offset 14, -4
 654 0016 84B0     		sub	sp, sp, #16
 655              	.LCFI9:
 656              		.cfi_def_cfa_offset 24
 657 0018 0446     		mov	r4, r0
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 658              		.loc 1 310 0
 659 001a 53B1     		cbz	r3, .L72
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 660              		.loc 1 314 0
 661 001c 92B1     		cbz	r2, .L64
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 662              		.loc 1 314 0 is_stmt 0 discriminator 2
 663 001e 89B9     		cbnz	r1, .L64
 664              	.LBB124:
ARM GAS  /tmp/ccyQlUm1.s 			page 58


 665              	.LBB125:
 666              		.loc 2 195 0 is_stmt 1
 667              		.syntax unified
 668              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 669 0020 4FF05003 			mov r3, #80												
 670 0024 83F31188 		msr basepri, r3											
 671 0028 BFF36F8F 		isb														
 672 002c BFF34F8F 		dsb														
 673              	
 674              	@ 0 "" 2
 675              	.LVL72:
 676              		.thumb
 677              		.syntax unified
 678              	.L65:
 679 0030 FEE7     		b	.L65
 680              	.LVL73:
 681              	.L72:
 682              	.LBE125:
 683              	.LBE124:
 684              	.LBB126:
 685              	.LBB127:
 686              		.syntax unified
 687              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 688 0032 4FF05003 			mov r3, #80												
 689 0036 83F31188 		msr basepri, r3											
 690 003a BFF36F8F 		isb														
 691 003e BFF34F8F 		dsb														
 692              	
 693              	@ 0 "" 2
 694              	.LVL74:
 695              		.thumb
 696              		.syntax unified
 697              	.L63:
 698 0042 FEE7     		b	.L63
 699              	.LVL75:
 700              	.L64:
 701              	.LBE127:
 702              	.LBE126:
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 703              		.loc 1 315 0
 704 0044 4AB9     		cbnz	r2, .L66
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 705              		.loc 1 315 0 is_stmt 0 discriminator 2
 706 0046 41B1     		cbz	r1, .L66
 707              	.LBB128:
 708              	.LBB129:
 709              		.loc 2 195 0 is_stmt 1
 710              		.syntax unified
 711              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 712 0048 4FF05003 			mov r3, #80												
 713 004c 83F31188 		msr basepri, r3											
 714 0050 BFF36F8F 		isb														
 715 0054 BFF34F8F 		dsb														
 716              	
 717              	@ 0 "" 2
 718              	.LVL76:
 719              		.thumb
ARM GAS  /tmp/ccyQlUm1.s 			page 59


 720              		.syntax unified
 721              	.L67:
 722 0058 FEE7     		b	.L67
 723              	.LVL77:
 724              	.L66:
 725              	.LBE129:
 726              	.LBE128:
 727              	.LBB130:
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 728              		.loc 1 322 0
 729 005a 5020     		movs	r0, #80
 730              	.LVL78:
 731 005c 0390     		str	r0, [sp, #12]
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 732              		.loc 1 323 0
 733 005e 0398     		ldr	r0, [sp, #12]
 734 0060 5028     		cmp	r0, #80
 735 0062 08D0     		beq	.L68
 736              	.LBB131:
 737              	.LBB132:
 738              		.loc 2 195 0
 739              		.syntax unified
 740              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 741 0064 4FF05003 			mov r3, #80												
 742 0068 83F31188 		msr basepri, r3											
 743 006c BFF36F8F 		isb														
 744 0070 BFF34F8F 		dsb														
 745              	
 746              	@ 0 "" 2
 747              	.LVL79:
 748              		.thumb
 749              		.syntax unified
 750              	.L69:
 751 0074 FEE7     		b	.L69
 752              	.LVL80:
 753              	.L68:
 754 0076 2046     		mov	r0, r4
 755 0078 1C46     		mov	r4, r3
 756              	.LVL81:
 757              	.LBE132:
 758              	.LBE131:
 759              	.LBE130:
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 760              		.loc 1 339 0
 761 007a 0123     		movs	r3, #1
 762              	.LVL82:
 763 007c 84F84630 		strb	r3, [r4, #70]
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 764              		.loc 1 343 0
 765 0080 0094     		str	r4, [sp]
 766 0082 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 767 0086 FFF7FEFF 		bl	prvInitialiseNewQueue
 768              	.LVL83:
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 769              		.loc 1 351 0
 770 008a 2046     		mov	r0, r4
 771 008c 04B0     		add	sp, sp, #16
ARM GAS  /tmp/ccyQlUm1.s 			page 60


 772              	.LCFI10:
 773              		.cfi_def_cfa_offset 8
 774              		@ sp needed
 775 008e 10BD     		pop	{r4, pc}
 776              		.cfi_endproc
 777              	.LFE5:
 779              		.section	.text.xQueueGenericCreate,"ax",%progbits
 780              		.align	1
 781              		.global	xQueueGenericCreate
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 785              		.fpu fpv4-sp-d16
 787              	xQueueGenericCreate:
 788              	.LFB6:
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 789              		.loc 1 359 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              	.LVL84:
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 794              		.loc 1 364 0
 795 0000 40B9     		cbnz	r0, .L74
 796              	.LBB133:
 797              	.LBB134:
 798              		.loc 2 195 0
 799              		.syntax unified
 800              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 801 0002 4FF05003 			mov r3, #80												
 802 0006 83F31188 		msr basepri, r3											
 803 000a BFF36F8F 		isb														
 804 000e BFF34F8F 		dsb														
 805              	
 806              	@ 0 "" 2
 807              	.LVL85:
 808              		.thumb
 809              		.syntax unified
 810              	.L75:
 811 0012 FEE7     		b	.L75
 812              	.L74:
 813              	.LBE134:
 814              	.LBE133:
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 815              		.loc 1 359 0
 816 0014 F0B5     		push	{r4, r5, r6, r7, lr}
 817              	.LCFI11:
 818              		.cfi_def_cfa_offset 20
 819              		.cfi_offset 4, -20
 820              		.cfi_offset 5, -16
 821              		.cfi_offset 6, -12
 822              		.cfi_offset 7, -8
 823              		.cfi_offset 14, -4
 824 0016 83B0     		sub	sp, sp, #12
 825              	.LCFI12:
 826              		.cfi_def_cfa_offset 32
 827 0018 0646     		mov	r6, r0
ARM GAS  /tmp/ccyQlUm1.s 			page 61


 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 828              		.loc 1 366 0
 829 001a 11B1     		cbz	r1, .L78
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 830              		.loc 1 375 0
 831 001c 01FB00F0 		mul	r0, r1, r0
 832              	.LVL86:
 833 0020 00E0     		b	.L76
 834              	.LVL87:
 835              	.L78:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 836              		.loc 1 369 0
 837 0022 0020     		movs	r0, #0
 838              	.LVL88:
 839              	.L76:
 840 0024 1746     		mov	r7, r2
 841 0026 0C46     		mov	r4, r1
 842              	.LVL89:
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 843              		.loc 1 378 0
 844 0028 5030     		adds	r0, r0, #80
 845              	.LVL90:
 846 002a FFF7FEFF 		bl	pvPortMalloc
 847              	.LVL91:
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 848              		.loc 1 380 0
 849 002e 0546     		mov	r5, r0
 850 0030 50B1     		cbz	r0, .L73
 851              	.LVL92:
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 852              		.loc 1 391 0
 853 0032 0023     		movs	r3, #0
 854 0034 80F84630 		strb	r3, [r0, #70]
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 855              		.loc 1 395 0
 856 0038 0090     		str	r0, [sp]
 857 003a 3B46     		mov	r3, r7
 858 003c 00F15002 		add	r2, r0, #80
 859              	.LVL93:
 860 0040 2146     		mov	r1, r4
 861 0042 3046     		mov	r0, r6
 862              	.LVL94:
 863 0044 FFF7FEFF 		bl	prvInitialiseNewQueue
 864              	.LVL95:
 865              	.L73:
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 866              		.loc 1 403 0
 867 0048 2846     		mov	r0, r5
 868 004a 03B0     		add	sp, sp, #12
 869              	.LCFI13:
 870              		.cfi_def_cfa_offset 20
 871              		@ sp needed
 872 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 873              		.cfi_endproc
 874              	.LFE6:
 876              		.section	.text.xQueueGetMutexHolder,"ax",%progbits
 877              		.align	1
ARM GAS  /tmp/ccyQlUm1.s 			page 62


 878              		.global	xQueueGetMutexHolder
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu fpv4-sp-d16
 884              	xQueueGetMutexHolder:
 885              	.LFB11:
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 886              		.loc 1 519 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              	.LVL96:
 891 0000 10B5     		push	{r4, lr}
 892              	.LCFI14:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 4, -8
 895              		.cfi_offset 14, -4
 896 0002 0446     		mov	r4, r0
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 897              		.loc 1 527 0
 898 0004 FFF7FEFF 		bl	vPortEnterCritical
 899              	.LVL97:
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 900              		.loc 1 529 0
 901 0008 2368     		ldr	r3, [r4]
 902 000a 23B9     		cbnz	r3, .L83
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 903              		.loc 1 531 0
 904 000c 6468     		ldr	r4, [r4, #4]
 905              	.LVL98:
 906              	.L82:
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 907              		.loc 1 538 0
 908 000e FFF7FEFF 		bl	vPortExitCritical
 909              	.LVL99:
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 910              		.loc 1 541 0
 911 0012 2046     		mov	r0, r4
 912 0014 10BD     		pop	{r4, pc}
 913              	.LVL100:
 914              	.L83:
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 915              		.loc 1 535 0
 916 0016 0024     		movs	r4, #0
 917              	.LVL101:
 918 0018 F9E7     		b	.L82
 919              		.cfi_endproc
 920              	.LFE11:
 922              		.section	.text.xQueueGetMutexHolderFromISR,"ax",%progbits
 923              		.align	1
 924              		.global	xQueueGetMutexHolderFromISR
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv4-sp-d16
 930              	xQueueGetMutexHolderFromISR:
ARM GAS  /tmp/ccyQlUm1.s 			page 63


 931              	.LFB12:
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 932              		.loc 1 549 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937              	.LVL102:
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 938              		.loc 1 552 0
 939 0000 18B1     		cbz	r0, .L90
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 940              		.loc 1 557 0
 941 0002 0268     		ldr	r2, [r0]
 942 0004 52B9     		cbnz	r2, .L89
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 943              		.loc 1 559 0
 944 0006 4068     		ldr	r0, [r0, #4]
 945              	.LVL103:
 946 0008 7047     		bx	lr
 947              	.LVL104:
 948              	.L90:
 949              	.LBB135:
 950              	.LBB136:
 951              		.loc 2 195 0
 952              		.syntax unified
 953              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 954 000a 4FF05003 			mov r3, #80												
 955 000e 83F31188 		msr basepri, r3											
 956 0012 BFF36F8F 		isb														
 957 0016 BFF34F8F 		dsb														
 958              	
 959              	@ 0 "" 2
 960              	.LVL105:
 961              		.thumb
 962              		.syntax unified
 963              	.L87:
 964 001a FEE7     		b	.L87
 965              	.L89:
 966              	.LBE136:
 967              	.LBE135:
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 968              		.loc 1 563 0
 969 001c 0020     		movs	r0, #0
 970              	.LVL106:
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 971              		.loc 1 567 0
 972 001e 7047     		bx	lr
 973              		.cfi_endproc
 974              	.LFE12:
 976              		.section	.text.xQueueCreateCountingSemaphoreStatic,"ax",%progbits
 977              		.align	1
 978              		.global	xQueueCreateCountingSemaphoreStatic
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 982              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccyQlUm1.s 			page 64


 984              	xQueueCreateCountingSemaphoreStatic:
 985              	.LFB15:
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 986              		.loc 1 672 0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 0
 989              		@ frame_needed = 0, uses_anonymous_args = 0
 990              	.LVL107:
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 991              		.loc 1 675 0
 992 0000 40B9     		cbnz	r0, .L92
 993              	.LBB137:
 994              	.LBB138:
 995              		.loc 2 195 0
 996              		.syntax unified
 997              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 998 0002 4FF05003 			mov r3, #80												
 999 0006 83F31188 		msr basepri, r3											
 1000 000a BFF36F8F 		isb														
 1001 000e BFF34F8F 		dsb														
 1002              	
 1003              	@ 0 "" 2
 1004              	.LVL108:
 1005              		.thumb
 1006              		.syntax unified
 1007              	.L93:
 1008 0012 FEE7     		b	.L93
 1009              	.L92:
 1010              	.LBE138:
 1011              	.LBE137:
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1012              		.loc 1 676 0
 1013 0014 8842     		cmp	r0, r1
 1014 0016 08D2     		bcs	.L94
 1015              	.LBB139:
 1016              	.LBB140:
 1017              		.loc 2 195 0
 1018              		.syntax unified
 1019              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1020 0018 4FF05003 			mov r3, #80												
 1021 001c 83F31188 		msr basepri, r3											
 1022 0020 BFF36F8F 		isb														
 1023 0024 BFF34F8F 		dsb														
 1024              	
 1025              	@ 0 "" 2
 1026              	.LVL109:
 1027              		.thumb
 1028              		.syntax unified
 1029              	.L95:
 1030 0028 FEE7     		b	.L95
 1031              	.L94:
 1032              	.LBE140:
 1033              	.LBE139:
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1034              		.loc 1 672 0
 1035 002a 10B5     		push	{r4, lr}
 1036              	.LCFI15:
ARM GAS  /tmp/ccyQlUm1.s 			page 65


 1037              		.cfi_def_cfa_offset 8
 1038              		.cfi_offset 4, -8
 1039              		.cfi_offset 14, -4
 1040 002c 82B0     		sub	sp, sp, #8
 1041              	.LCFI16:
 1042              		.cfi_def_cfa_offset 16
 1043 002e 1346     		mov	r3, r2
 1044 0030 0C46     		mov	r4, r1
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1045              		.loc 1 678 0
 1046 0032 0222     		movs	r2, #2
 1047              	.LVL110:
 1048 0034 0092     		str	r2, [sp]
 1049 0036 0022     		movs	r2, #0
 1050 0038 1146     		mov	r1, r2
 1051              	.LVL111:
 1052 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 1053              	.LVL112:
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1054              		.loc 1 680 0
 1055 003e 0346     		mov	r3, r0
 1056 0040 00B1     		cbz	r0, .L91
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1057              		.loc 1 682 0
 1058 0042 8463     		str	r4, [r0, #56]
 1059              	.L91:
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1060              		.loc 1 692 0
 1061 0044 1846     		mov	r0, r3
 1062              	.LVL113:
 1063 0046 02B0     		add	sp, sp, #8
 1064              	.LCFI17:
 1065              		.cfi_def_cfa_offset 8
 1066              		@ sp needed
 1067 0048 10BD     		pop	{r4, pc}
 1068              		.cfi_endproc
 1069              	.LFE15:
 1071              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 1072              		.align	1
 1073              		.global	xQueueCreateCountingSemaphore
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1077              		.fpu fpv4-sp-d16
 1079              	xQueueCreateCountingSemaphore:
 1080              	.LFB16:
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1081              		.loc 1 700 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085              	.LVL114:
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1086              		.loc 1 703 0
 1087 0000 40B9     		cbnz	r0, .L100
 1088              	.LBB141:
 1089              	.LBB142:
ARM GAS  /tmp/ccyQlUm1.s 			page 66


 1090              		.loc 2 195 0
 1091              		.syntax unified
 1092              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1093 0002 4FF05003 			mov r3, #80												
 1094 0006 83F31188 		msr basepri, r3											
 1095 000a BFF36F8F 		isb														
 1096 000e BFF34F8F 		dsb														
 1097              	
 1098              	@ 0 "" 2
 1099              	.LVL115:
 1100              		.thumb
 1101              		.syntax unified
 1102              	.L101:
 1103 0012 FEE7     		b	.L101
 1104              	.L100:
 1105              	.LBE142:
 1106              	.LBE141:
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1107              		.loc 1 704 0
 1108 0014 8842     		cmp	r0, r1
 1109 0016 08D2     		bcs	.L102
 1110              	.LBB143:
 1111              	.LBB144:
 1112              		.loc 2 195 0
 1113              		.syntax unified
 1114              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1115 0018 4FF05003 			mov r3, #80												
 1116 001c 83F31188 		msr basepri, r3											
 1117 0020 BFF36F8F 		isb														
 1118 0024 BFF34F8F 		dsb														
 1119              	
 1120              	@ 0 "" 2
 1121              	.LVL116:
 1122              		.thumb
 1123              		.syntax unified
 1124              	.L103:
 1125 0028 FEE7     		b	.L103
 1126              	.L102:
 1127              	.LBE144:
 1128              	.LBE143:
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1129              		.loc 1 700 0
 1130 002a 10B5     		push	{r4, lr}
 1131              	.LCFI18:
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 4, -8
 1134              		.cfi_offset 14, -4
 1135 002c 0C46     		mov	r4, r1
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1136              		.loc 1 706 0
 1137 002e 0222     		movs	r2, #2
 1138 0030 0021     		movs	r1, #0
 1139              	.LVL117:
 1140 0032 FFF7FEFF 		bl	xQueueGenericCreate
 1141              	.LVL118:
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1142              		.loc 1 708 0
ARM GAS  /tmp/ccyQlUm1.s 			page 67


 1143 0036 0346     		mov	r3, r0
 1144 0038 00B1     		cbz	r0, .L99
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1145              		.loc 1 710 0
 1146 003a 8463     		str	r4, [r0, #56]
 1147              	.L99:
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1148              		.loc 1 720 0
 1149 003c 1846     		mov	r0, r3
 1150              	.LVL119:
 1151 003e 10BD     		pop	{r4, pc}
 1152              		.cfi_endproc
 1153              	.LFE16:
 1155              		.section	.text.xQueueGenericSend,"ax",%progbits
 1156              		.align	1
 1157              		.global	xQueueGenericSend
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1161              		.fpu fpv4-sp-d16
 1163              	xQueueGenericSend:
 1164              	.LFB17:
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1165              		.loc 1 726 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 16
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 1169              	.LVL120:
 1170 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1171              	.LCFI19:
 1172              		.cfi_def_cfa_offset 20
 1173              		.cfi_offset 4, -20
 1174              		.cfi_offset 5, -16
 1175              		.cfi_offset 6, -12
 1176              		.cfi_offset 7, -8
 1177              		.cfi_offset 14, -4
 1178 0002 85B0     		sub	sp, sp, #20
 1179              	.LCFI20:
 1180              		.cfi_def_cfa_offset 40
 1181 0004 0192     		str	r2, [sp, #4]
 1182              	.LVL121:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1183              		.loc 1 731 0
 1184 0006 60B1     		cbz	r0, .L132
 1185 0008 0446     		mov	r4, r0
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1186              		.loc 1 732 0
 1187 000a 99B9     		cbnz	r1, .L110
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1188              		.loc 1 732 0 is_stmt 0 discriminator 2
 1189 000c 026C     		ldr	r2, [r0, #64]
 1190              	.LVL122:
 1191 000e 8AB1     		cbz	r2, .L110
 1192              	.LBB145:
 1193              	.LBB146:
 1194              		.loc 2 195 0 is_stmt 1
 1195              		.syntax unified
ARM GAS  /tmp/ccyQlUm1.s 			page 68


 1196              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1197 0010 4FF05003 			mov r3, #80												
 1198 0014 83F31188 		msr basepri, r3											
 1199 0018 BFF36F8F 		isb														
 1200 001c BFF34F8F 		dsb														
 1201              	
 1202              	@ 0 "" 2
 1203              	.LVL123:
 1204              		.thumb
 1205              		.syntax unified
 1206              	.L111:
 1207 0020 FEE7     		b	.L111
 1208              	.LVL124:
 1209              	.L132:
 1210              	.LBE146:
 1211              	.LBE145:
 1212              	.LBB147:
 1213              	.LBB148:
 1214              		.syntax unified
 1215              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1216 0022 4FF05003 			mov r3, #80												
 1217 0026 83F31188 		msr basepri, r3											
 1218 002a BFF36F8F 		isb														
 1219 002e BFF34F8F 		dsb														
 1220              	
 1221              	@ 0 "" 2
 1222              	.LVL125:
 1223              		.thumb
 1224              		.syntax unified
 1225              	.L109:
 1226 0032 FEE7     		b	.L109
 1227              	.LVL126:
 1228              	.L110:
 1229              	.LBE148:
 1230              	.LBE147:
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1231              		.loc 1 733 0
 1232 0034 022B     		cmp	r3, #2
 1233 0036 0BD1     		bne	.L112
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1234              		.loc 1 733 0 is_stmt 0 discriminator 2
 1235 0038 E26B     		ldr	r2, [r4, #60]
 1236 003a 012A     		cmp	r2, #1
 1237 003c 08D0     		beq	.L112
 1238              	.LBB149:
 1239              	.LBB150:
 1240              		.loc 2 195 0 is_stmt 1
 1241              		.syntax unified
 1242              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1243 003e 4FF05003 			mov r3, #80												
 1244 0042 83F31188 		msr basepri, r3											
 1245 0046 BFF36F8F 		isb														
 1246 004a BFF34F8F 		dsb														
 1247              	
 1248              	@ 0 "" 2
 1249              	.LVL127:
 1250              		.thumb
ARM GAS  /tmp/ccyQlUm1.s 			page 69


 1251              		.syntax unified
 1252              	.L113:
 1253 004e FEE7     		b	.L113
 1254              	.LVL128:
 1255              	.L112:
 1256 0050 1E46     		mov	r6, r3
 1257 0052 0F46     		mov	r7, r1
 1258              	.LBE150:
 1259              	.LBE149:
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1260              		.loc 1 736 0
 1261 0054 FFF7FEFF 		bl	xTaskGetSchedulerState
 1262              	.LVL129:
 1263 0058 50B9     		cbnz	r0, .L129
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1264              		.loc 1 736 0 is_stmt 0 discriminator 2
 1265 005a 019B     		ldr	r3, [sp, #4]
 1266 005c 53B1     		cbz	r3, .L130
 1267              	.LBB151:
 1268              	.LBB152:
 1269              		.loc 2 195 0 is_stmt 1
 1270              		.syntax unified
 1271              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1272 005e 4FF05003 			mov r3, #80												
 1273 0062 83F31188 		msr basepri, r3											
 1274 0066 BFF36F8F 		isb														
 1275 006a BFF34F8F 		dsb														
 1276              	
 1277              	@ 0 "" 2
 1278              	.LVL130:
 1279              		.thumb
 1280              		.syntax unified
 1281              	.L115:
 1282 006e FEE7     		b	.L115
 1283              	.L129:
 1284              	.LBE152:
 1285              	.LBE151:
 1286 0070 0025     		movs	r5, #0
 1287 0072 3AE0     		b	.L116
 1288              	.L130:
 1289 0074 0025     		movs	r5, #0
 1290 0076 38E0     		b	.L116
 1291              	.LVL131:
 1292              	.L117:
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1293              		.loc 1 755 0
 1294 0078 3246     		mov	r2, r6
 1295 007a 3946     		mov	r1, r7
 1296 007c 2046     		mov	r0, r4
 1297 007e FFF7FEFF 		bl	prvCopyDataToQueue
 1298              	.LVL132:
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1299              		.loc 1 810 0
 1300 0082 636A     		ldr	r3, [r4, #36]
 1301 0084 4BB9     		cbnz	r3, .L133
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1302              		.loc 1 825 0
ARM GAS  /tmp/ccyQlUm1.s 			page 70


 1303 0086 A8B1     		cbz	r0, .L120
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1304              		.loc 1 831 0
 1305 0088 3B4B     		ldr	r3, .L138
 1306 008a 4FF08052 		mov	r2, #268435456
 1307 008e 1A60     		str	r2, [r3]
 1308              		.syntax unified
 1309              	@ 831 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1310 0090 BFF34F8F 		dsb
 1311              	@ 0 "" 2
 1312              	@ 831 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1313 0094 BFF36F8F 		isb
 1314              	@ 0 "" 2
 1315              		.thumb
 1316              		.syntax unified
 1317 0098 0CE0     		b	.L120
 1318              	.L133:
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1319              		.loc 1 812 0
 1320 009a 04F12400 		add	r0, r4, #36
 1321              	.LVL133:
 1322 009e FFF7FEFF 		bl	xTaskRemoveFromEventList
 1323              	.LVL134:
 1324 00a2 38B1     		cbz	r0, .L120
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1325              		.loc 1 818 0
 1326 00a4 344B     		ldr	r3, .L138
 1327 00a6 4FF08052 		mov	r2, #268435456
 1328 00aa 1A60     		str	r2, [r3]
 1329              		.syntax unified
 1330              	@ 818 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1331 00ac BFF34F8F 		dsb
 1332              	@ 0 "" 2
 1333              	@ 818 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1334 00b0 BFF36F8F 		isb
 1335              	@ 0 "" 2
 1336              		.thumb
 1337              		.syntax unified
 1338              	.L120:
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1339              		.loc 1 840 0
 1340 00b4 FFF7FEFF 		bl	vPortExitCritical
 1341              	.LVL135:
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1342              		.loc 1 841 0
 1343 00b8 0120     		movs	r0, #1
 1344              	.L107:
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1345              		.loc 1 920 0
 1346 00ba 05B0     		add	sp, sp, #20
 1347              	.LCFI21:
 1348              		.cfi_remember_state
 1349              		.cfi_def_cfa_offset 20
 1350              		@ sp needed
 1351 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 1352              	.LVL136:
 1353              	.L134:
ARM GAS  /tmp/ccyQlUm1.s 			page 71


 1354              	.LCFI22:
 1355              		.cfi_restore_state
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1356              		.loc 1 849 0
 1357 00be FFF7FEFF 		bl	vPortExitCritical
 1358              	.LVL137:
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1359              		.loc 1 854 0
 1360 00c2 0020     		movs	r0, #0
 1361 00c4 F9E7     		b	.L107
 1362              	.L135:
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1363              		.loc 1 860 0
 1364 00c6 02A8     		add	r0, sp, #8
 1365 00c8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1366              	.LVL138:
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1367              		.loc 1 861 0
 1368 00cc 0125     		movs	r5, #1
 1369 00ce 19E0     		b	.L123
 1370              	.LVL139:
 1371              	.L136:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1372              		.loc 1 876 0 discriminator 1
 1373 00d0 0023     		movs	r3, #0
 1374 00d2 84F84430 		strb	r3, [r4, #68]
 1375 00d6 21E0     		b	.L124
 1376              	.L137:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1377              		.loc 1 876 0 is_stmt 0 discriminator 4
 1378 00d8 0023     		movs	r3, #0
 1379 00da 84F84530 		strb	r3, [r4, #69]
 1380 00de 23E0     		b	.L125
 1381              	.L127:
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1382              		.loc 1 906 0 is_stmt 1
 1383 00e0 2046     		mov	r0, r4
 1384 00e2 FFF7FEFF 		bl	prvUnlockQueue
 1385              	.LVL140:
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1386              		.loc 1 907 0
 1387 00e6 FFF7FEFF 		bl	xTaskResumeAll
 1388              	.LVL141:
 1389              	.L116:
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1390              		.loc 1 746 0
 1391 00ea FFF7FEFF 		bl	vPortEnterCritical
 1392              	.LVL142:
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1393              		.loc 1 752 0
 1394 00ee A26B     		ldr	r2, [r4, #56]
 1395 00f0 E36B     		ldr	r3, [r4, #60]
 1396 00f2 9A42     		cmp	r2, r3
 1397 00f4 C0D3     		bcc	.L117
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1398              		.loc 1 752 0 is_stmt 0 discriminator 1
 1399 00f6 022E     		cmp	r6, #2
ARM GAS  /tmp/ccyQlUm1.s 			page 72


 1400 00f8 BED0     		beq	.L117
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1401              		.loc 1 845 0 is_stmt 1
 1402 00fa 019B     		ldr	r3, [sp, #4]
 1403 00fc 002B     		cmp	r3, #0
 1404 00fe DED0     		beq	.L134
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1405              		.loc 1 856 0
 1406 0100 002D     		cmp	r5, #0
 1407 0102 E0D0     		beq	.L135
 1408              	.LVL143:
 1409              	.L123:
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1410              		.loc 1 870 0
 1411 0104 FFF7FEFF 		bl	vPortExitCritical
 1412              	.LVL144:
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1413              		.loc 1 875 0
 1414 0108 FFF7FEFF 		bl	vTaskSuspendAll
 1415              	.LVL145:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1416              		.loc 1 876 0
 1417 010c FFF7FEFF 		bl	vPortEnterCritical
 1418              	.LVL146:
 1419 0110 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1420 0114 5BB2     		sxtb	r3, r3
 1421 0116 B3F1FF3F 		cmp	r3, #-1
 1422 011a D9D0     		beq	.L136
 1423              	.L124:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1424              		.loc 1 876 0 is_stmt 0 discriminator 3
 1425 011c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1426 0120 5BB2     		sxtb	r3, r3
 1427 0122 B3F1FF3F 		cmp	r3, #-1
 1428 0126 D7D0     		beq	.L137
 1429              	.L125:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1430              		.loc 1 876 0 discriminator 6
 1431 0128 FFF7FEFF 		bl	vPortExitCritical
 1432              	.LVL147:
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1433              		.loc 1 879 0 is_stmt 1 discriminator 6
 1434 012c 01A9     		add	r1, sp, #4
 1435 012e 02A8     		add	r0, sp, #8
 1436 0130 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1437              	.LVL148:
 1438 0134 C8B9     		cbnz	r0, .L126
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1439              		.loc 1 881 0
 1440 0136 2046     		mov	r0, r4
 1441 0138 FFF7FEFF 		bl	prvIsQueueFull
 1442              	.LVL149:
 1443 013c 0028     		cmp	r0, #0
 1444 013e CFD0     		beq	.L127
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1445              		.loc 1 884 0
 1446 0140 0199     		ldr	r1, [sp, #4]
ARM GAS  /tmp/ccyQlUm1.s 			page 73


 1447 0142 04F11000 		add	r0, r4, #16
 1448 0146 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1449              	.LVL150:
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1450              		.loc 1 891 0
 1451 014a 2046     		mov	r0, r4
 1452 014c FFF7FEFF 		bl	prvUnlockQueue
 1453              	.LVL151:
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1454              		.loc 1 898 0
 1455 0150 FFF7FEFF 		bl	xTaskResumeAll
 1456              	.LVL152:
 1457 0154 0028     		cmp	r0, #0
 1458 0156 C8D1     		bne	.L116
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1459              		.loc 1 900 0
 1460 0158 074B     		ldr	r3, .L138
 1461 015a 4FF08052 		mov	r2, #268435456
 1462 015e 1A60     		str	r2, [r3]
 1463              		.syntax unified
 1464              	@ 900 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1465 0160 BFF34F8F 		dsb
 1466              	@ 0 "" 2
 1467              	@ 900 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1468 0164 BFF36F8F 		isb
 1469              	@ 0 "" 2
 1470              		.thumb
 1471              		.syntax unified
 1472 0168 BFE7     		b	.L116
 1473              	.L126:
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1474              		.loc 1 913 0
 1475 016a 2046     		mov	r0, r4
 1476 016c FFF7FEFF 		bl	prvUnlockQueue
 1477              	.LVL153:
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1478              		.loc 1 914 0
 1479 0170 FFF7FEFF 		bl	xTaskResumeAll
 1480              	.LVL154:
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1481              		.loc 1 917 0
 1482 0174 0020     		movs	r0, #0
 1483 0176 A0E7     		b	.L107
 1484              	.L139:
 1485              		.align	2
 1486              	.L138:
 1487 0178 04ED00E0 		.word	-536810236
 1488              		.cfi_endproc
 1489              	.LFE17:
 1491              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1492              		.align	1
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1496              		.fpu fpv4-sp-d16
 1498              	prvInitialiseMutex:
 1499              	.LFB8:
ARM GAS  /tmp/ccyQlUm1.s 			page 74


 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1500              		.loc 1 453 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504              	.LVL155:
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1505              		.loc 1 454 0
 1506 0000 48B1     		cbz	r0, .L143
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1507              		.loc 1 453 0
 1508 0002 08B5     		push	{r3, lr}
 1509              	.LCFI23:
 1510              		.cfi_def_cfa_offset 8
 1511              		.cfi_offset 3, -8
 1512              		.cfi_offset 14, -4
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1513              		.loc 1 460 0
 1514 0004 0021     		movs	r1, #0
 1515 0006 4160     		str	r1, [r0, #4]
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1516              		.loc 1 461 0
 1517 0008 0160     		str	r1, [r0]
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1518              		.loc 1 464 0
 1519 000a C160     		str	r1, [r0, #12]
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1520              		.loc 1 469 0
 1521 000c 0B46     		mov	r3, r1
 1522 000e 0A46     		mov	r2, r1
 1523 0010 FFF7FEFF 		bl	xQueueGenericSend
 1524              	.LVL156:
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1525              		.loc 1 475 0
 1526 0014 08BD     		pop	{r3, pc}
 1527              	.LVL157:
 1528              	.L143:
 1529              	.LCFI24:
 1530              		.cfi_def_cfa_offset 0
 1531              		.cfi_restore 3
 1532              		.cfi_restore 14
 1533 0016 7047     		bx	lr
 1534              		.cfi_endproc
 1535              	.LFE8:
 1537              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1538              		.align	1
 1539              		.global	xQueueCreateMutex
 1540              		.syntax unified
 1541              		.thumb
 1542              		.thumb_func
 1543              		.fpu fpv4-sp-d16
 1545              	xQueueCreateMutex:
 1546              	.LFB9:
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1547              		.loc 1 483 0
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccyQlUm1.s 			page 75


 1550              		@ frame_needed = 0, uses_anonymous_args = 0
 1551              	.LVL158:
 1552 0000 10B5     		push	{r4, lr}
 1553              	.LCFI25:
 1554              		.cfi_def_cfa_offset 8
 1555              		.cfi_offset 4, -8
 1556              		.cfi_offset 14, -4
 1557              	.LVL159:
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1558              		.loc 1 487 0
 1559 0002 0246     		mov	r2, r0
 1560 0004 0021     		movs	r1, #0
 1561 0006 0120     		movs	r0, #1
 1562              	.LVL160:
 1563 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1564              	.LVL161:
 1565 000c 0446     		mov	r4, r0
 1566              	.LVL162:
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1567              		.loc 1 488 0
 1568 000e FFF7FEFF 		bl	prvInitialiseMutex
 1569              	.LVL163:
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1570              		.loc 1 491 0
 1571 0012 2046     		mov	r0, r4
 1572 0014 10BD     		pop	{r4, pc}
 1573              		.cfi_endproc
 1574              	.LFE9:
 1576              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1577              		.align	1
 1578              		.global	xQueueCreateMutexStatic
 1579              		.syntax unified
 1580              		.thumb
 1581              		.thumb_func
 1582              		.fpu fpv4-sp-d16
 1584              	xQueueCreateMutexStatic:
 1585              	.LFB10:
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1586              		.loc 1 499 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590              	.LVL164:
 1591 0000 10B5     		push	{r4, lr}
 1592              	.LCFI26:
 1593              		.cfi_def_cfa_offset 8
 1594              		.cfi_offset 4, -8
 1595              		.cfi_offset 14, -4
 1596 0002 82B0     		sub	sp, sp, #8
 1597              	.LCFI27:
 1598              		.cfi_def_cfa_offset 16
 1599              	.LVL165:
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1600              		.loc 1 507 0
 1601 0004 0090     		str	r0, [sp]
 1602 0006 0B46     		mov	r3, r1
 1603 0008 0022     		movs	r2, #0
ARM GAS  /tmp/ccyQlUm1.s 			page 76


 1604 000a 1146     		mov	r1, r2
 1605              	.LVL166:
 1606 000c 0120     		movs	r0, #1
 1607              	.LVL167:
 1608 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1609              	.LVL168:
 1610 0012 0446     		mov	r4, r0
 1611              	.LVL169:
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1612              		.loc 1 508 0
 1613 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1614              	.LVL170:
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1615              		.loc 1 511 0
 1616 0018 2046     		mov	r0, r4
 1617 001a 02B0     		add	sp, sp, #8
 1618              	.LCFI28:
 1619              		.cfi_def_cfa_offset 8
 1620              		@ sp needed
 1621 001c 10BD     		pop	{r4, pc}
 1622              		.cfi_endproc
 1623              	.LFE10:
 1625              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1626              		.align	1
 1627              		.global	xQueueGiveMutexRecursive
 1628              		.syntax unified
 1629              		.thumb
 1630              		.thumb_func
 1631              		.fpu fpv4-sp-d16
 1633              	xQueueGiveMutexRecursive:
 1634              	.LFB13:
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 1635              		.loc 1 575 0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              	.LVL171:
 1640 0000 38B5     		push	{r3, r4, r5, lr}
 1641              	.LCFI29:
 1642              		.cfi_def_cfa_offset 16
 1643              		.cfi_offset 3, -16
 1644              		.cfi_offset 4, -12
 1645              		.cfi_offset 5, -8
 1646              		.cfi_offset 14, -4
 1647              	.LVL172:
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1648              		.loc 1 579 0
 1649 0002 40B9     		cbnz	r0, .L151
 1650              	.LBB153:
 1651              	.LBB154:
 1652              		.loc 2 195 0
 1653              		.syntax unified
 1654              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1655 0004 4FF05003 			mov r3, #80												
 1656 0008 83F31188 		msr basepri, r3											
 1657 000c BFF36F8F 		isb														
 1658 0010 BFF34F8F 		dsb														
ARM GAS  /tmp/ccyQlUm1.s 			page 77


 1659              	
 1660              	@ 0 "" 2
 1661              	.LVL173:
 1662              		.thumb
 1663              		.syntax unified
 1664              	.L152:
 1665 0014 FEE7     		b	.L152
 1666              	.L151:
 1667 0016 0446     		mov	r4, r0
 1668              	.LBE154:
 1669              	.LBE153:
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1670              		.loc 1 587 0
 1671 0018 4568     		ldr	r5, [r0, #4]
 1672 001a FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1673              	.LVL174:
 1674 001e 8542     		cmp	r5, r0
 1675 0020 01D0     		beq	.L157
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1676              		.loc 1 616 0
 1677 0022 0020     		movs	r0, #0
 1678              	.L150:
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1679              		.loc 1 622 0
 1680 0024 38BD     		pop	{r3, r4, r5, pc}
 1681              	.LVL175:
 1682              	.L157:
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1683              		.loc 1 596 0
 1684 0026 E368     		ldr	r3, [r4, #12]
 1685 0028 013B     		subs	r3, r3, #1
 1686 002a E360     		str	r3, [r4, #12]
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1687              		.loc 1 599 0
 1688 002c 33B9     		cbnz	r3, .L155
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1689              		.loc 1 603 0
 1690 002e 1A46     		mov	r2, r3
 1691 0030 1946     		mov	r1, r3
 1692 0032 2046     		mov	r0, r4
 1693 0034 FFF7FEFF 		bl	xQueueGenericSend
 1694              	.LVL176:
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1695              		.loc 1 610 0
 1696 0038 0120     		movs	r0, #1
 1697 003a F3E7     		b	.L150
 1698              	.L155:
 1699 003c 0120     		movs	r0, #1
 1700              	.LVL177:
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1701              		.loc 1 621 0
 1702 003e F1E7     		b	.L150
 1703              		.cfi_endproc
 1704              	.LFE13:
 1706              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1707              		.align	1
 1708              		.global	xQueueGenericSendFromISR
ARM GAS  /tmp/ccyQlUm1.s 			page 78


 1709              		.syntax unified
 1710              		.thumb
 1711              		.thumb_func
 1712              		.fpu fpv4-sp-d16
 1714              	xQueueGenericSendFromISR:
 1715              	.LFB18:
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1716              		.loc 1 924 0
 1717              		.cfi_startproc
 1718              		@ args = 0, pretend = 0, frame = 0
 1719              		@ frame_needed = 0, uses_anonymous_args = 0
 1720              	.LVL178:
 1721 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1722              	.LCFI30:
 1723              		.cfi_def_cfa_offset 32
 1724              		.cfi_offset 3, -32
 1725              		.cfi_offset 4, -28
 1726              		.cfi_offset 5, -24
 1727              		.cfi_offset 6, -20
 1728              		.cfi_offset 7, -16
 1729              		.cfi_offset 8, -12
 1730              		.cfi_offset 9, -8
 1731              		.cfi_offset 14, -4
 1732              	.LVL179:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1733              		.loc 1 929 0
 1734 0004 60B1     		cbz	r0, .L173
 1735 0006 0446     		mov	r4, r0
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1736              		.loc 1 930 0
 1737 0008 99B9     		cbnz	r1, .L161
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1738              		.loc 1 930 0 is_stmt 0 discriminator 2
 1739 000a 006C     		ldr	r0, [r0, #64]
 1740              	.LVL180:
 1741 000c 88B1     		cbz	r0, .L161
 1742              	.LBB155:
 1743              	.LBB156:
 1744              		.loc 2 195 0 is_stmt 1
 1745              		.syntax unified
 1746              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1747 000e 4FF05003 			mov r3, #80												
 1748 0012 83F31188 		msr basepri, r3											
 1749 0016 BFF36F8F 		isb														
 1750 001a BFF34F8F 		dsb														
 1751              	
 1752              	@ 0 "" 2
 1753              	.LVL181:
 1754              		.thumb
 1755              		.syntax unified
 1756              	.L162:
 1757 001e FEE7     		b	.L162
 1758              	.LVL182:
 1759              	.L173:
 1760              	.LBE156:
 1761              	.LBE155:
 1762              	.LBB157:
ARM GAS  /tmp/ccyQlUm1.s 			page 79


 1763              	.LBB158:
 1764              		.syntax unified
 1765              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1766 0020 4FF05003 			mov r3, #80												
 1767 0024 83F31188 		msr basepri, r3											
 1768 0028 BFF36F8F 		isb														
 1769 002c BFF34F8F 		dsb														
 1770              	
 1771              	@ 0 "" 2
 1772              	.LVL183:
 1773              		.thumb
 1774              		.syntax unified
 1775              	.L160:
 1776 0030 FEE7     		b	.L160
 1777              	.LVL184:
 1778              	.L161:
 1779              	.LBE158:
 1780              	.LBE157:
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1781              		.loc 1 931 0
 1782 0032 022B     		cmp	r3, #2
 1783 0034 0BD1     		bne	.L163
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1784              		.loc 1 931 0 is_stmt 0 discriminator 2
 1785 0036 E06B     		ldr	r0, [r4, #60]
 1786 0038 0128     		cmp	r0, #1
 1787 003a 08D0     		beq	.L163
 1788              	.LBB159:
 1789              	.LBB160:
 1790              		.loc 2 195 0 is_stmt 1
 1791              		.syntax unified
 1792              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1793 003c 4FF05003 			mov r3, #80												
 1794 0040 83F31188 		msr basepri, r3											
 1795 0044 BFF36F8F 		isb														
 1796 0048 BFF34F8F 		dsb														
 1797              	
 1798              	@ 0 "" 2
 1799              	.LVL185:
 1800              		.thumb
 1801              		.syntax unified
 1802              	.L164:
 1803 004c FEE7     		b	.L164
 1804              	.LVL186:
 1805              	.L163:
 1806 004e 1F46     		mov	r7, r3
 1807 0050 9046     		mov	r8, r2
 1808 0052 8946     		mov	r9, r1
 1809              	.LBE160:
 1810              	.LBE159:
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1811              		.loc 1 947 0
 1812 0054 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1813              	.LVL187:
 1814              	.LBB161:
 1815              	.LBB162:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/ccyQlUm1.s 			page 80


 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1816              		.loc 2 211 0
 1817              		.syntax unified
 1818              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1819 0058 EFF31186 			mrs r6, basepri											
 1820 005c 4FF05003 		mov r3, #80												
 1821 0060 83F31188 		msr basepri, r3											
 1822 0064 BFF36F8F 		isb														
 1823 0068 BFF34F8F 		dsb														
 1824              	
 1825              	@ 0 "" 2
 1826              		.thumb
 1827              		.syntax unified
 1828              	.LBE162:
 1829              	.LBE161:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1830              		.loc 1 956 0
 1831 006c A26B     		ldr	r2, [r4, #56]
 1832 006e E36B     		ldr	r3, [r4, #60]
 1833 0070 9A42     		cmp	r2, r3
 1834 0072 03D3     		bcc	.L165
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1835              		.loc 1 956 0 is_stmt 0 discriminator 1
 1836 0074 022F     		cmp	r7, #2
 1837 0076 01D0     		beq	.L165
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1838              		.loc 1 1065 0 is_stmt 1
 1839 0078 0020     		movs	r0, #0
 1840 007a 0FE0     		b	.L166
 1841              	.L165:
 1842              	.LBB163:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1843              		.loc 1 958 0
 1844 007c 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1845 0080 6DB2     		sxtb	r5, r5
 1846              	.LVL188:
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1847              		.loc 1 967 0
 1848 0082 3A46     		mov	r2, r7
 1849 0084 4946     		mov	r1, r9
 1850 0086 2046     		mov	r0, r4
 1851 0088 FFF7FEFF 		bl	prvCopyDataToQueue
 1852              	.LVL189:
ARM GAS  /tmp/ccyQlUm1.s 			page 81


 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1853              		.loc 1 971 0
 1854 008c B5F1FF3F 		cmp	r5, #-1
 1855 0090 08D0     		beq	.L174
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1856              		.loc 1 1057 0
 1857 0092 6B1C     		adds	r3, r5, #1
 1858 0094 5BB2     		sxtb	r3, r3
 1859 0096 84F84530 		strb	r3, [r4, #69]
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1860              		.loc 1 1060 0
 1861 009a 0120     		movs	r0, #1
 1862              	.LVL190:
 1863              	.L166:
 1864              	.LBE163:
 1865              	.LBB164:
 1866              	.LBB165:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1867              		.loc 2 229 0
 1868              		.syntax unified
 1869              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1870 009c 86F31188 			msr basepri, r6	
 1871              	@ 0 "" 2
 1872              	.LVL191:
 1873              		.thumb
 1874              		.syntax unified
 1875              	.LBE165:
 1876              	.LBE164:
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1877              		.loc 1 1071 0
 1878 00a0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1879              	.LVL192:
 1880              	.L174:
 1881              	.LBB166:
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1882              		.loc 1 1026 0
 1883 00a4 636A     		ldr	r3, [r4, #36]
 1884 00a6 5BB1     		cbz	r3, .L169
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1885              		.loc 1 1028 0
ARM GAS  /tmp/ccyQlUm1.s 			page 82


 1886 00a8 04F12400 		add	r0, r4, #36
 1887 00ac FFF7FEFF 		bl	xTaskRemoveFromEventList
 1888              	.LVL193:
 1889 00b0 40B1     		cbz	r0, .L170
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1890              		.loc 1 1032 0
 1891 00b2 B8F1000F 		cmp	r8, #0
 1892 00b6 07D0     		beq	.L171
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1893              		.loc 1 1034 0
 1894 00b8 0120     		movs	r0, #1
 1895 00ba C8F80000 		str	r0, [r8]
 1896 00be EDE7     		b	.L166
 1897              	.L169:
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1898              		.loc 1 1060 0
 1899 00c0 0120     		movs	r0, #1
 1900 00c2 EBE7     		b	.L166
 1901              	.L170:
 1902 00c4 0120     		movs	r0, #1
 1903 00c6 E9E7     		b	.L166
 1904              	.L171:
 1905 00c8 0120     		movs	r0, #1
 1906 00ca E7E7     		b	.L166
 1907              	.LBE166:
 1908              		.cfi_endproc
 1909              	.LFE18:
 1911              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1912              		.align	1
 1913              		.global	xQueueGiveFromISR
 1914              		.syntax unified
 1915              		.thumb
 1916              		.thumb_func
 1917              		.fpu fpv4-sp-d16
 1919              	xQueueGiveFromISR:
 1920              	.LFB19:
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1921              		.loc 1 1075 0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 0
 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 1925              	.LVL194:
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1926              		.loc 1 1086 0
 1927 0000 60B1     		cbz	r0, .L190
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1928              		.loc 1 1075 0
 1929 0002 70B5     		push	{r4, r5, r6, lr}
 1930              	.LCFI31:
 1931              		.cfi_def_cfa_offset 16
 1932              		.cfi_offset 4, -16
 1933              		.cfi_offset 5, -12
 1934              		.cfi_offset 6, -8
 1935              		.cfi_offset 14, -4
 1936 0004 0446     		mov	r4, r0
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1937              		.loc 1 1090 0
ARM GAS  /tmp/ccyQlUm1.s 			page 83


 1938 0006 036C     		ldr	r3, [r0, #64]
 1939 0008 8BB1     		cbz	r3, .L178
 1940              	.LBB167:
 1941              	.LBB168:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1942              		.loc 2 195 0
 1943              		.syntax unified
 1944              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1945 000a 4FF05003 			mov r3, #80												
 1946 000e 83F31188 		msr basepri, r3											
 1947 0012 BFF36F8F 		isb														
 1948 0016 BFF34F8F 		dsb														
 1949              	
 1950              	@ 0 "" 2
 1951              	.LVL195:
 1952              		.thumb
 1953              		.syntax unified
 1954              	.L179:
 1955 001a FEE7     		b	.L179
 1956              	.L190:
 1957              	.LCFI32:
 1958              		.cfi_def_cfa_offset 0
 1959              		.cfi_restore 4
 1960              		.cfi_restore 5
 1961              		.cfi_restore 6
 1962              		.cfi_restore 14
 1963              	.LBE168:
 1964              	.LBE167:
 1965              	.LBB169:
 1966              	.LBB170:
 1967              		.syntax unified
 1968              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1969 001c 4FF05003 			mov r3, #80												
 1970 0020 83F31188 		msr basepri, r3											
 1971 0024 BFF36F8F 		isb														
 1972 0028 BFF34F8F 		dsb														
 1973              	
 1974              	@ 0 "" 2
 1975              	.LVL196:
 1976              		.thumb
 1977              		.syntax unified
 1978              	.L177:
 1979 002c FEE7     		b	.L177
 1980              	.L178:
 1981              	.LCFI33:
 1982              		.cfi_def_cfa_offset 16
 1983              		.cfi_offset 4, -16
 1984              		.cfi_offset 5, -12
 1985              		.cfi_offset 6, -8
 1986              		.cfi_offset 14, -4
 1987              	.LBE170:
 1988              	.LBE169:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1989              		.loc 1 1095 0
 1990 002e 0368     		ldr	r3, [r0]
 1991 0030 2BB3     		cbz	r3, .L191
 1992              	.L180:
ARM GAS  /tmp/ccyQlUm1.s 			page 84


 1993 0032 0E46     		mov	r6, r1
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1994              		.loc 1 1111 0
 1995 0034 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1996              	.LVL197:
 1997              	.LBB171:
 1998              	.LBB172:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1999              		.loc 2 211 0
 2000              		.syntax unified
 2001              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2002 0038 EFF31185 			mrs r5, basepri											
 2003 003c 4FF05003 		mov r3, #80												
 2004 0040 83F31188 		msr basepri, r3											
 2005 0044 BFF36F8F 		isb														
 2006 0048 BFF34F8F 		dsb														
 2007              	
 2008              	@ 0 "" 2
 2009              		.thumb
 2010              		.syntax unified
 2011              	.LBE172:
 2012              	.LBE171:
 2013              	.LBB173:
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2014              		.loc 1 1115 0
 2015 004c A26B     		ldr	r2, [r4, #56]
 2016              	.LVL198:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2017              		.loc 1 1120 0
 2018 004e E36B     		ldr	r3, [r4, #60]
 2019 0050 9342     		cmp	r3, r2
 2020 0052 26D9     		bls	.L184
 2021              	.LBB174:
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2022              		.loc 1 1122 0
 2023 0054 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2024 0058 5BB2     		sxtb	r3, r3
 2025              	.LVL199:
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2026              		.loc 1 1132 0
 2027 005a 0132     		adds	r2, r2, #1
 2028              	.LVL200:
 2029 005c A263     		str	r2, [r4, #56]
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2030              		.loc 1 1136 0
 2031 005e B3F1FF3F 		cmp	r3, #-1
 2032 0062 18D1     		bne	.L183
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2033              		.loc 1 1191 0
 2034 0064 636A     		ldr	r3, [r4, #36]
 2035              	.LVL201:
 2036 0066 F3B1     		cbz	r3, .L185
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2037              		.loc 1 1193 0
 2038 0068 04F12400 		add	r0, r4, #36
 2039 006c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2040              	.LVL202:
ARM GAS  /tmp/ccyQlUm1.s 			page 85


 2041 0070 D8B1     		cbz	r0, .L186
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 2042              		.loc 1 1197 0
 2043 0072 E6B1     		cbz	r6, .L187
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 2044              		.loc 1 1199 0
 2045 0074 0120     		movs	r0, #1
 2046 0076 3060     		str	r0, [r6]
 2047              	.L182:
 2048              	.LVL203:
 2049              	.LBE174:
 2050              	.LBE173:
 2051              	.LBB177:
 2052              	.LBB178:
 2053              		.loc 2 229 0
 2054              		.syntax unified
 2055              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2056 0078 85F31188 			msr basepri, r5	
 2057              	@ 0 "" 2
 2058              	.LVL204:
 2059              		.thumb
 2060              		.syntax unified
 2061              	.LBE178:
 2062              	.LBE177:
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2063              		.loc 1 1236 0
 2064 007c 70BD     		pop	{r4, r5, r6, pc}
 2065              	.LVL205:
 2066              	.L191:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2067              		.loc 1 1095 0 discriminator 2
 2068 007e 4368     		ldr	r3, [r0, #4]
 2069 0080 002B     		cmp	r3, #0
 2070 0082 D6D0     		beq	.L180
 2071              	.LBB179:
 2072              	.LBB180:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2073              		.loc 2 195 0
 2074              		.syntax unified
 2075              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2076 0084 4FF05003 			mov r3, #80												
 2077 0088 83F31188 		msr basepri, r3											
 2078 008c BFF36F8F 		isb														
 2079 0090 BFF34F8F 		dsb														
 2080              	
 2081              	@ 0 "" 2
 2082              	.LVL206:
 2083              		.thumb
 2084              		.syntax unified
 2085              	.L181:
 2086 0094 FEE7     		b	.L181
 2087              	.LVL207:
 2088              	.L183:
 2089              	.LBE180:
 2090              	.LBE179:
 2091              	.LBB181:
 2092              	.LBB175:
ARM GAS  /tmp/ccyQlUm1.s 			page 86


1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2093              		.loc 1 1222 0
 2094 0096 0133     		adds	r3, r3, #1
 2095              	.LVL208:
 2096 0098 5BB2     		sxtb	r3, r3
 2097              	.LVL209:
 2098 009a 84F84530 		strb	r3, [r4, #69]
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2099              		.loc 1 1225 0
 2100 009e 0120     		movs	r0, #1
 2101 00a0 EAE7     		b	.L182
 2102              	.LVL210:
 2103              	.L184:
 2104              	.LBE175:
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2105              		.loc 1 1230 0
 2106 00a2 0020     		movs	r0, #0
 2107 00a4 E8E7     		b	.L182
 2108              	.LVL211:
 2109              	.L185:
 2110              	.LBB176:
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2111              		.loc 1 1225 0
 2112 00a6 0120     		movs	r0, #1
 2113 00a8 E6E7     		b	.L182
 2114              	.LVL212:
 2115              	.L186:
 2116 00aa 0120     		movs	r0, #1
 2117 00ac E4E7     		b	.L182
 2118              	.L187:
 2119 00ae 0120     		movs	r0, #1
 2120 00b0 E2E7     		b	.L182
 2121              	.LBE176:
 2122              	.LBE181:
 2123              		.cfi_endproc
 2124              	.LFE19:
 2126              		.section	.text.xQueueReceive,"ax",%progbits
 2127              		.align	1
 2128              		.global	xQueueReceive
 2129              		.syntax unified
 2130              		.thumb
 2131              		.thumb_func
 2132              		.fpu fpv4-sp-d16
 2134              	xQueueReceive:
 2135              	.LFB20:
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2136              		.loc 1 1240 0
 2137              		.cfi_startproc
 2138              		@ args = 0, pretend = 0, frame = 16
 2139              		@ frame_needed = 0, uses_anonymous_args = 0
 2140              	.LVL213:
 2141 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2142              	.LCFI34:
 2143              		.cfi_def_cfa_offset 20
 2144              		.cfi_offset 4, -20
 2145              		.cfi_offset 5, -16
 2146              		.cfi_offset 6, -12
ARM GAS  /tmp/ccyQlUm1.s 			page 87


 2147              		.cfi_offset 7, -8
 2148              		.cfi_offset 14, -4
 2149 0002 85B0     		sub	sp, sp, #20
 2150              	.LCFI35:
 2151              		.cfi_def_cfa_offset 40
 2152 0004 0192     		str	r2, [sp, #4]
 2153              	.LVL214:
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2154              		.loc 1 1246 0
 2155 0006 60B1     		cbz	r0, .L213
 2156 0008 0446     		mov	r4, r0
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2157              		.loc 1 1250 0
 2158 000a 99B9     		cbnz	r1, .L195
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2159              		.loc 1 1250 0 is_stmt 0 discriminator 2
 2160 000c 036C     		ldr	r3, [r0, #64]
 2161 000e 8BB1     		cbz	r3, .L195
 2162              	.LBB182:
 2163              	.LBB183:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2164              		.loc 2 195 0 is_stmt 1
 2165              		.syntax unified
 2166              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2167 0010 4FF05003 			mov r3, #80												
 2168 0014 83F31188 		msr basepri, r3											
 2169 0018 BFF36F8F 		isb														
 2170 001c BFF34F8F 		dsb														
 2171              	
 2172              	@ 0 "" 2
 2173              	.LVL215:
 2174              		.thumb
 2175              		.syntax unified
 2176              	.L196:
 2177 0020 FEE7     		b	.L196
 2178              	.L213:
 2179              	.LBE183:
 2180              	.LBE182:
 2181              	.LBB184:
 2182              	.LBB185:
 2183              		.syntax unified
 2184              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2185 0022 4FF05003 			mov r3, #80												
 2186 0026 83F31188 		msr basepri, r3											
 2187 002a BFF36F8F 		isb														
 2188 002e BFF34F8F 		dsb														
 2189              	
 2190              	@ 0 "" 2
 2191              	.LVL216:
 2192              		.thumb
 2193              		.syntax unified
 2194              	.L194:
 2195 0032 FEE7     		b	.L194
 2196              	.L195:
 2197 0034 0F46     		mov	r7, r1
 2198              	.LBE185:
 2199              	.LBE184:
ARM GAS  /tmp/ccyQlUm1.s 			page 88


1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2200              		.loc 1 1255 0
 2201 0036 FFF7FEFF 		bl	xTaskGetSchedulerState
 2202              	.LVL217:
 2203 003a 50B9     		cbnz	r0, .L210
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2204              		.loc 1 1255 0 is_stmt 0 discriminator 2
 2205 003c 019B     		ldr	r3, [sp, #4]
 2206 003e 53B1     		cbz	r3, .L211
 2207              	.LBB186:
 2208              	.LBB187:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2209              		.loc 2 195 0 is_stmt 1
 2210              		.syntax unified
 2211              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2212 0040 4FF05003 			mov r3, #80												
 2213 0044 83F31188 		msr basepri, r3											
 2214 0048 BFF36F8F 		isb														
 2215 004c BFF34F8F 		dsb														
 2216              	
 2217              	@ 0 "" 2
 2218              	.LVL218:
 2219              		.thumb
 2220              		.syntax unified
 2221              	.L198:
 2222 0050 FEE7     		b	.L198
 2223              	.L210:
 2224              	.LBE187:
 2225              	.LBE186:
 2226 0052 0026     		movs	r6, #0
 2227 0054 3EE0     		b	.L199
 2228              	.L211:
 2229 0056 0026     		movs	r6, #0
 2230 0058 3CE0     		b	.L199
 2231              	.LVL219:
 2232              	.L216:
 2233              	.LBB188:
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 2234              		.loc 1 1274 0
 2235 005a 3946     		mov	r1, r7
 2236 005c 2046     		mov	r0, r4
 2237 005e FFF7FEFF 		bl	prvCopyDataFromQueue
 2238              	.LVL220:
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2239              		.loc 1 1276 0
 2240 0062 013D     		subs	r5, r5, #1
 2241              	.LVL221:
 2242 0064 A563     		str	r5, [r4, #56]
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2243              		.loc 1 1281 0
 2244 0066 2369     		ldr	r3, [r4, #16]
 2245 0068 23B9     		cbnz	r3, .L214
 2246              	.L201:
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2247              		.loc 1 1297 0
 2248 006a FFF7FEFF 		bl	vPortExitCritical
 2249              	.LVL222:
ARM GAS  /tmp/ccyQlUm1.s 			page 89


1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2250              		.loc 1 1298 0
 2251 006e 0120     		movs	r0, #1
 2252              	.LVL223:
 2253              	.L192:
 2254              	.LBE188:
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2255              		.loc 1 1377 0
 2256 0070 05B0     		add	sp, sp, #20
 2257              	.LCFI36:
 2258              		.cfi_remember_state
 2259              		.cfi_def_cfa_offset 20
 2260              		@ sp needed
 2261 0072 F0BD     		pop	{r4, r5, r6, r7, pc}
 2262              	.LVL224:
 2263              	.L214:
 2264              	.LCFI37:
 2265              		.cfi_restore_state
 2266              	.LBB189:
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2267              		.loc 1 1283 0
 2268 0074 04F11000 		add	r0, r4, #16
 2269 0078 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2270              	.LVL225:
 2271 007c 0028     		cmp	r0, #0
 2272 007e F4D0     		beq	.L201
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2273              		.loc 1 1285 0
 2274 0080 344B     		ldr	r3, .L221
 2275 0082 4FF08052 		mov	r2, #268435456
 2276 0086 1A60     		str	r2, [r3]
 2277              		.syntax unified
 2278              	@ 1285 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2279 0088 BFF34F8F 		dsb
 2280              	@ 0 "" 2
 2281              	@ 1285 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2282 008c BFF36F8F 		isb
 2283              	@ 0 "" 2
 2284              		.thumb
 2285              		.syntax unified
 2286 0090 EBE7     		b	.L201
 2287              	.LVL226:
 2288              	.L217:
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2289              		.loc 1 1306 0
 2290 0092 FFF7FEFF 		bl	vPortExitCritical
 2291              	.LVL227:
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2292              		.loc 1 1308 0
 2293 0096 0020     		movs	r0, #0
 2294 0098 EAE7     		b	.L192
 2295              	.L218:
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2296              		.loc 1 1314 0
 2297 009a 02A8     		add	r0, sp, #8
 2298 009c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2299              	.LVL228:
ARM GAS  /tmp/ccyQlUm1.s 			page 90


1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2300              		.loc 1 1315 0
 2301 00a0 0126     		movs	r6, #1
 2302 00a2 21E0     		b	.L204
 2303              	.LVL229:
 2304              	.L219:
 2305              	.LBE189:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2306              		.loc 1 1330 0 discriminator 1
 2307 00a4 0023     		movs	r3, #0
 2308 00a6 84F84430 		strb	r3, [r4, #68]
 2309 00aa 29E0     		b	.L205
 2310              	.L220:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2311              		.loc 1 1330 0 is_stmt 0 discriminator 4
 2312 00ac 0023     		movs	r3, #0
 2313 00ae 84F84530 		strb	r3, [r4, #69]
 2314 00b2 2BE0     		b	.L206
 2315              	.L208:
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2316              		.loc 1 1355 0 is_stmt 1
 2317 00b4 2046     		mov	r0, r4
 2318 00b6 FFF7FEFF 		bl	prvUnlockQueue
 2319              	.LVL230:
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2320              		.loc 1 1356 0
 2321 00ba FFF7FEFF 		bl	xTaskResumeAll
 2322              	.LVL231:
 2323 00be 09E0     		b	.L199
 2324              	.L207:
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2325              		.loc 1 1363 0
 2326 00c0 2046     		mov	r0, r4
 2327 00c2 FFF7FEFF 		bl	prvUnlockQueue
 2328              	.LVL232:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2329              		.loc 1 1364 0
 2330 00c6 FFF7FEFF 		bl	xTaskResumeAll
 2331              	.LVL233:
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2332              		.loc 1 1366 0
 2333 00ca 2046     		mov	r0, r4
 2334 00cc FFF7FEFF 		bl	prvIsQueueEmpty
 2335              	.LVL234:
 2336 00d0 0028     		cmp	r0, #0
 2337 00d2 3DD1     		bne	.L215
 2338              	.LVL235:
 2339              	.L199:
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2340              		.loc 1 1265 0
 2341 00d4 FFF7FEFF 		bl	vPortEnterCritical
 2342              	.LVL236:
 2343              	.LBB190:
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2344              		.loc 1 1267 0
 2345 00d8 A56B     		ldr	r5, [r4, #56]
 2346              	.LVL237:
ARM GAS  /tmp/ccyQlUm1.s 			page 91


1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2347              		.loc 1 1271 0
 2348 00da 002D     		cmp	r5, #0
 2349 00dc BDD1     		bne	.L216
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2350              		.loc 1 1302 0
 2351 00de 019B     		ldr	r3, [sp, #4]
 2352 00e0 002B     		cmp	r3, #0
 2353 00e2 D6D0     		beq	.L217
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2354              		.loc 1 1310 0
 2355 00e4 002E     		cmp	r6, #0
 2356 00e6 D8D0     		beq	.L218
 2357              	.LVL238:
 2358              	.L204:
 2359              	.LBE190:
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2360              		.loc 1 1324 0
 2361 00e8 FFF7FEFF 		bl	vPortExitCritical
 2362              	.LVL239:
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2363              		.loc 1 1329 0
 2364 00ec FFF7FEFF 		bl	vTaskSuspendAll
 2365              	.LVL240:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2366              		.loc 1 1330 0
 2367 00f0 FFF7FEFF 		bl	vPortEnterCritical
 2368              	.LVL241:
 2369 00f4 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2370 00f8 5BB2     		sxtb	r3, r3
 2371 00fa B3F1FF3F 		cmp	r3, #-1
 2372 00fe D1D0     		beq	.L219
 2373              	.L205:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2374              		.loc 1 1330 0 is_stmt 0 discriminator 3
 2375 0100 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2376 0104 5BB2     		sxtb	r3, r3
 2377 0106 B3F1FF3F 		cmp	r3, #-1
 2378 010a CFD0     		beq	.L220
 2379              	.L206:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2380              		.loc 1 1330 0 discriminator 6
 2381 010c FFF7FEFF 		bl	vPortExitCritical
 2382              	.LVL242:
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2383              		.loc 1 1333 0 is_stmt 1 discriminator 6
 2384 0110 01A9     		add	r1, sp, #4
 2385 0112 02A8     		add	r0, sp, #8
 2386 0114 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2387              	.LVL243:
 2388 0118 0028     		cmp	r0, #0
 2389 011a D1D1     		bne	.L207
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2390              		.loc 1 1337 0
 2391 011c 2046     		mov	r0, r4
 2392 011e FFF7FEFF 		bl	prvIsQueueEmpty
 2393              	.LVL244:
ARM GAS  /tmp/ccyQlUm1.s 			page 92


 2394 0122 0028     		cmp	r0, #0
 2395 0124 C6D0     		beq	.L208
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2396              		.loc 1 1340 0
 2397 0126 0199     		ldr	r1, [sp, #4]
 2398 0128 04F12400 		add	r0, r4, #36
 2399 012c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2400              	.LVL245:
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2401              		.loc 1 1341 0
 2402 0130 2046     		mov	r0, r4
 2403 0132 FFF7FEFF 		bl	prvUnlockQueue
 2404              	.LVL246:
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2405              		.loc 1 1342 0
 2406 0136 FFF7FEFF 		bl	xTaskResumeAll
 2407              	.LVL247:
 2408 013a 0028     		cmp	r0, #0
 2409 013c CAD1     		bne	.L199
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2410              		.loc 1 1344 0
 2411 013e 054B     		ldr	r3, .L221
 2412 0140 4FF08052 		mov	r2, #268435456
 2413 0144 1A60     		str	r2, [r3]
 2414              		.syntax unified
 2415              	@ 1344 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2416 0146 BFF34F8F 		dsb
 2417              	@ 0 "" 2
 2418              	@ 1344 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2419 014a BFF36F8F 		isb
 2420              	@ 0 "" 2
 2421              		.thumb
 2422              		.syntax unified
 2423 014e C1E7     		b	.L199
 2424              	.L215:
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2425              		.loc 1 1369 0
 2426 0150 0020     		movs	r0, #0
 2427 0152 8DE7     		b	.L192
 2428              	.L222:
 2429              		.align	2
 2430              	.L221:
 2431 0154 04ED00E0 		.word	-536810236
 2432              		.cfi_endproc
 2433              	.LFE20:
 2435              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2436              		.align	1
 2437              		.global	xQueueSemaphoreTake
 2438              		.syntax unified
 2439              		.thumb
 2440              		.thumb_func
 2441              		.fpu fpv4-sp-d16
 2443              	xQueueSemaphoreTake:
 2444              	.LFB21:
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2445              		.loc 1 1381 0
 2446              		.cfi_startproc
ARM GAS  /tmp/ccyQlUm1.s 			page 93


 2447              		@ args = 0, pretend = 0, frame = 16
 2448              		@ frame_needed = 0, uses_anonymous_args = 0
 2449              	.LVL248:
 2450 0000 70B5     		push	{r4, r5, r6, lr}
 2451              	.LCFI38:
 2452              		.cfi_def_cfa_offset 16
 2453              		.cfi_offset 4, -16
 2454              		.cfi_offset 5, -12
 2455              		.cfi_offset 6, -8
 2456              		.cfi_offset 14, -4
 2457 0002 84B0     		sub	sp, sp, #16
 2458              	.LCFI39:
 2459              		.cfi_def_cfa_offset 32
 2460 0004 0191     		str	r1, [sp, #4]
 2461              	.LVL249:
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2462              		.loc 1 1391 0
 2463 0006 40B9     		cbnz	r0, .L224
 2464              	.LBB191:
 2465              	.LBB192:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2466              		.loc 2 195 0
 2467              		.syntax unified
 2468              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2469 0008 4FF05003 			mov r3, #80												
 2470 000c 83F31188 		msr basepri, r3											
 2471 0010 BFF36F8F 		isb														
 2472 0014 BFF34F8F 		dsb														
 2473              	
 2474              	@ 0 "" 2
 2475              	.LVL250:
 2476              		.thumb
 2477              		.syntax unified
 2478              	.L225:
 2479 0018 FEE7     		b	.L225
 2480              	.L224:
 2481 001a 0446     		mov	r4, r0
 2482              	.LBE192:
 2483              	.LBE191:
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2484              		.loc 1 1395 0
 2485 001c 036C     		ldr	r3, [r0, #64]
 2486 001e 43B1     		cbz	r3, .L226
 2487              	.LBB193:
 2488              	.LBB194:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2489              		.loc 2 195 0
 2490              		.syntax unified
 2491              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2492 0020 4FF05003 			mov r3, #80												
 2493 0024 83F31188 		msr basepri, r3											
 2494 0028 BFF36F8F 		isb														
 2495 002c BFF34F8F 		dsb														
 2496              	
 2497              	@ 0 "" 2
 2498              	.LVL251:
 2499              		.thumb
ARM GAS  /tmp/ccyQlUm1.s 			page 94


 2500              		.syntax unified
 2501              	.L227:
 2502 0030 FEE7     		b	.L227
 2503              	.L226:
 2504              	.LBE194:
 2505              	.LBE193:
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2506              		.loc 1 1400 0
 2507 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 2508              	.LVL252:
 2509 0036 50B9     		cbnz	r0, .L245
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2510              		.loc 1 1400 0 is_stmt 0 discriminator 2
 2511 0038 019B     		ldr	r3, [sp, #4]
 2512 003a 5BB1     		cbz	r3, .L246
 2513              	.LBB195:
 2514              	.LBB196:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2515              		.loc 2 195 0 is_stmt 1
 2516              		.syntax unified
 2517              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2518 003c 4FF05003 			mov r3, #80												
 2519 0040 83F31188 		msr basepri, r3											
 2520 0044 BFF36F8F 		isb														
 2521 0048 BFF34F8F 		dsb														
 2522              	
 2523              	@ 0 "" 2
 2524              	.LVL253:
 2525              		.thumb
 2526              		.syntax unified
 2527              	.L229:
 2528 004c FEE7     		b	.L229
 2529              	.L245:
 2530              	.LBE196:
 2531              	.LBE195:
 2532 004e 0025     		movs	r5, #0
 2533 0050 2E46     		mov	r6, r5
 2534 0052 51E0     		b	.L230
 2535              	.L246:
 2536 0054 0025     		movs	r5, #0
 2537 0056 2E46     		mov	r6, r5
 2538 0058 4EE0     		b	.L230
 2539              	.LVL254:
 2540              	.L249:
 2541              	.LBB197:
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2542              		.loc 1 1425 0
 2543 005a 013B     		subs	r3, r3, #1
 2544              	.LVL255:
 2545 005c A363     		str	r3, [r4, #56]
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2546              		.loc 1 1429 0
 2547 005e 2368     		ldr	r3, [r4]
 2548              	.LVL256:
 2549 0060 13B9     		cbnz	r3, .L232
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2550              		.loc 1 1433 0
ARM GAS  /tmp/ccyQlUm1.s 			page 95


 2551 0062 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2552              	.LVL257:
 2553 0066 6060     		str	r0, [r4, #4]
 2554              	.L232:
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2555              		.loc 1 1444 0
 2556 0068 2369     		ldr	r3, [r4, #16]
 2557 006a 63B1     		cbz	r3, .L233
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2558              		.loc 1 1446 0
 2559 006c 04F11000 		add	r0, r4, #16
 2560 0070 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2561              	.LVL258:
 2562 0074 38B1     		cbz	r0, .L233
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2563              		.loc 1 1448 0
 2564 0076 484B     		ldr	r3, .L255
 2565 0078 4FF08052 		mov	r2, #268435456
 2566 007c 1A60     		str	r2, [r3]
 2567              		.syntax unified
 2568              	@ 1448 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2569 007e BFF34F8F 		dsb
 2570              	@ 0 "" 2
 2571              	@ 1448 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2572 0082 BFF36F8F 		isb
 2573              	@ 0 "" 2
 2574              		.thumb
 2575              		.syntax unified
 2576              	.L233:
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2577              		.loc 1 1460 0
 2578 0086 FFF7FEFF 		bl	vPortExitCritical
 2579              	.LVL259:
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2580              		.loc 1 1461 0
 2581 008a 0125     		movs	r5, #1
 2582              	.LVL260:
 2583              	.L223:
 2584              	.LBE197:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2585              		.loc 1 1596 0
 2586 008c 2846     		mov	r0, r5
 2587 008e 04B0     		add	sp, sp, #16
 2588              	.LCFI40:
 2589              		.cfi_remember_state
 2590              		.cfi_def_cfa_offset 16
 2591              		@ sp needed
 2592 0090 70BD     		pop	{r4, r5, r6, pc}
 2593              	.LVL261:
 2594              	.L250:
 2595              	.LCFI41:
 2596              		.cfi_restore_state
 2597              	.LBB200:
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2598              		.loc 1 1472 0
 2599 0092 45B1     		cbz	r5, .L236
 2600              	.LBB198:
ARM GAS  /tmp/ccyQlUm1.s 			page 96


 2601              	.LBB199:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2602              		.loc 2 195 0
 2603              		.syntax unified
 2604              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2605 0094 4FF05003 			mov r3, #80												
 2606 0098 83F31188 		msr basepri, r3											
 2607 009c BFF36F8F 		isb														
 2608 00a0 BFF34F8F 		dsb														
 2609              	
 2610              	@ 0 "" 2
 2611              	.LVL262:
 2612              		.thumb
 2613              		.syntax unified
 2614              	.L237:
 2615 00a4 FEE7     		b	.L237
 2616              	.L236:
 2617              	.LBE199:
 2618              	.LBE198:
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2619              		.loc 1 1478 0
 2620 00a6 FFF7FEFF 		bl	vPortExitCritical
 2621              	.LVL263:
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2622              		.loc 1 1480 0
 2623 00aa EFE7     		b	.L223
 2624              	.L251:
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2625              		.loc 1 1486 0
 2626 00ac 02A8     		add	r0, sp, #8
 2627 00ae FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2628              	.LVL264:
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2629              		.loc 1 1487 0
 2630 00b2 0126     		movs	r6, #1
 2631 00b4 2AE0     		b	.L238
 2632              	.LVL265:
 2633              	.L252:
 2634              	.LBE200:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2635              		.loc 1 1502 0 discriminator 1
 2636 00b6 0023     		movs	r3, #0
 2637 00b8 84F84430 		strb	r3, [r4, #68]
 2638 00bc 32E0     		b	.L239
 2639              	.L253:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2640              		.loc 1 1502 0 is_stmt 0 discriminator 4
 2641 00be 0023     		movs	r3, #0
 2642 00c0 84F84530 		strb	r3, [r4, #69]
 2643 00c4 34E0     		b	.L240
 2644              	.L254:
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2645              		.loc 1 1519 0 is_stmt 1
 2646 00c6 FFF7FEFF 		bl	vPortEnterCritical
 2647              	.LVL266:
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2648              		.loc 1 1521 0
ARM GAS  /tmp/ccyQlUm1.s 			page 97


 2649 00ca 6068     		ldr	r0, [r4, #4]
 2650 00cc FFF7FEFF 		bl	xTaskPriorityInherit
 2651              	.LVL267:
 2652 00d0 0546     		mov	r5, r0
 2653              	.LVL268:
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2654              		.loc 1 1523 0
 2655 00d2 FFF7FEFF 		bl	vPortExitCritical
 2656              	.LVL269:
 2657 00d6 3BE0     		b	.L243
 2658              	.L242:
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2659              		.loc 1 1547 0
 2660 00d8 2046     		mov	r0, r4
 2661 00da FFF7FEFF 		bl	prvUnlockQueue
 2662              	.LVL270:
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2663              		.loc 1 1548 0
 2664 00de FFF7FEFF 		bl	xTaskResumeAll
 2665              	.LVL271:
 2666 00e2 09E0     		b	.L230
 2667              	.L241:
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2668              		.loc 1 1554 0
 2669 00e4 2046     		mov	r0, r4
 2670 00e6 FFF7FEFF 		bl	prvUnlockQueue
 2671              	.LVL272:
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2672              		.loc 1 1555 0
 2673 00ea FFF7FEFF 		bl	xTaskResumeAll
 2674              	.LVL273:
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2675              		.loc 1 1561 0
 2676 00ee 2046     		mov	r0, r4
 2677 00f0 FFF7FEFF 		bl	prvIsQueueEmpty
 2678              	.LVL274:
 2679 00f4 0028     		cmp	r0, #0
 2680 00f6 40D1     		bne	.L248
 2681              	.LVL275:
 2682              	.L230:
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2683              		.loc 1 1411 0
 2684 00f8 FFF7FEFF 		bl	vPortEnterCritical
 2685              	.LVL276:
 2686              	.LBB201:
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2687              		.loc 1 1415 0
 2688 00fc A36B     		ldr	r3, [r4, #56]
 2689              	.LVL277:
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2690              		.loc 1 1419 0
 2691 00fe 002B     		cmp	r3, #0
 2692 0100 ABD1     		bne	.L249
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2693              		.loc 1 1465 0
 2694 0102 019B     		ldr	r3, [sp, #4]
 2695              	.LVL278:
ARM GAS  /tmp/ccyQlUm1.s 			page 98


 2696 0104 002B     		cmp	r3, #0
 2697 0106 C4D0     		beq	.L250
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2698              		.loc 1 1482 0
 2699 0108 002E     		cmp	r6, #0
 2700 010a CFD0     		beq	.L251
 2701              	.LVL279:
 2702              	.L238:
 2703              	.LBE201:
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2704              		.loc 1 1496 0
 2705 010c FFF7FEFF 		bl	vPortExitCritical
 2706              	.LVL280:
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2707              		.loc 1 1501 0
 2708 0110 FFF7FEFF 		bl	vTaskSuspendAll
 2709              	.LVL281:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2710              		.loc 1 1502 0
 2711 0114 FFF7FEFF 		bl	vPortEnterCritical
 2712              	.LVL282:
 2713 0118 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2714 011c 5BB2     		sxtb	r3, r3
 2715 011e B3F1FF3F 		cmp	r3, #-1
 2716 0122 C8D0     		beq	.L252
 2717              	.L239:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2718              		.loc 1 1502 0 is_stmt 0 discriminator 3
 2719 0124 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2720 0128 5BB2     		sxtb	r3, r3
 2721 012a B3F1FF3F 		cmp	r3, #-1
 2722 012e C6D0     		beq	.L253
 2723              	.L240:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2724              		.loc 1 1502 0 discriminator 6
 2725 0130 FFF7FEFF 		bl	vPortExitCritical
 2726              	.LVL283:
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2727              		.loc 1 1505 0 is_stmt 1 discriminator 6
 2728 0134 01A9     		add	r1, sp, #4
 2729 0136 02A8     		add	r0, sp, #8
 2730 0138 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2731              	.LVL284:
 2732 013c 0028     		cmp	r0, #0
 2733 013e D1D1     		bne	.L241
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2734              		.loc 1 1511 0
 2735 0140 2046     		mov	r0, r4
 2736 0142 FFF7FEFF 		bl	prvIsQueueEmpty
 2737              	.LVL285:
 2738 0146 0028     		cmp	r0, #0
 2739 0148 C6D0     		beq	.L242
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2740              		.loc 1 1517 0
 2741 014a 2368     		ldr	r3, [r4]
 2742 014c 002B     		cmp	r3, #0
 2743 014e BAD0     		beq	.L254
ARM GAS  /tmp/ccyQlUm1.s 			page 99


 2744              	.L243:
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2745              		.loc 1 1532 0
 2746 0150 0199     		ldr	r1, [sp, #4]
 2747 0152 04F12400 		add	r0, r4, #36
 2748 0156 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2749              	.LVL286:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2750              		.loc 1 1533 0
 2751 015a 2046     		mov	r0, r4
 2752 015c FFF7FEFF 		bl	prvUnlockQueue
 2753              	.LVL287:
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2754              		.loc 1 1534 0
 2755 0160 FFF7FEFF 		bl	xTaskResumeAll
 2756              	.LVL288:
 2757 0164 0028     		cmp	r0, #0
 2758 0166 C7D1     		bne	.L230
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2759              		.loc 1 1536 0
 2760 0168 0B4B     		ldr	r3, .L255
 2761 016a 4FF08052 		mov	r2, #268435456
 2762 016e 1A60     		str	r2, [r3]
 2763              		.syntax unified
 2764              	@ 1536 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2765 0170 BFF34F8F 		dsb
 2766              	@ 0 "" 2
 2767              	@ 1536 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2768 0174 BFF36F8F 		isb
 2769              	@ 0 "" 2
 2770              		.thumb
 2771              		.syntax unified
 2772 0178 BEE7     		b	.L230
 2773              	.L248:
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2774              		.loc 1 1568 0
 2775 017a 002D     		cmp	r5, #0
 2776 017c 86D0     		beq	.L223
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2777              		.loc 1 1570 0
 2778 017e FFF7FEFF 		bl	vPortEnterCritical
 2779              	.LVL289:
 2780              	.LBB202:
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
 2781              		.loc 1 1579 0
 2782 0182 2046     		mov	r0, r4
 2783 0184 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2784              	.LVL290:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2785              		.loc 1 1580 0
 2786 0188 0146     		mov	r1, r0
 2787 018a 6068     		ldr	r0, [r4, #4]
 2788              	.LVL291:
 2789 018c FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2790              	.LVL292:
 2791              	.LBE202:
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/ccyQlUm1.s 			page 100


 2792              		.loc 1 1582 0
 2793 0190 FFF7FEFF 		bl	vPortExitCritical
 2794              	.LVL293:
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2795              		.loc 1 1588 0
 2796 0194 0025     		movs	r5, #0
 2797              	.LVL294:
 2798 0196 79E7     		b	.L223
 2799              	.L256:
 2800              		.align	2
 2801              	.L255:
 2802 0198 04ED00E0 		.word	-536810236
 2803              		.cfi_endproc
 2804              	.LFE21:
 2806              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 2807              		.align	1
 2808              		.global	xQueueTakeMutexRecursive
 2809              		.syntax unified
 2810              		.thumb
 2811              		.thumb_func
 2812              		.fpu fpv4-sp-d16
 2814              	xQueueTakeMutexRecursive:
 2815              	.LFB14:
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2816              		.loc 1 630 0
 2817              		.cfi_startproc
 2818              		@ args = 0, pretend = 0, frame = 0
 2819              		@ frame_needed = 0, uses_anonymous_args = 0
 2820              	.LVL295:
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2821              		.loc 1 634 0
 2822 0000 40B9     		cbnz	r0, .L258
 2823              	.LBB203:
 2824              	.LBB204:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2825              		.loc 2 195 0
 2826              		.syntax unified
 2827              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2828 0002 4FF05003 			mov r3, #80												
 2829 0006 83F31188 		msr basepri, r3											
 2830 000a BFF36F8F 		isb														
 2831 000e BFF34F8F 		dsb														
 2832              	
 2833              	@ 0 "" 2
 2834              	.LVL296:
 2835              		.thumb
 2836              		.syntax unified
 2837              	.L259:
 2838 0012 FEE7     		b	.L259
 2839              	.L258:
 2840              	.LBE204:
 2841              	.LBE203:
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2842              		.loc 1 630 0
 2843 0014 70B5     		push	{r4, r5, r6, lr}
 2844              	.LCFI42:
 2845              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccyQlUm1.s 			page 101


 2846              		.cfi_offset 4, -16
 2847              		.cfi_offset 5, -12
 2848              		.cfi_offset 6, -8
 2849              		.cfi_offset 14, -4
 2850 0016 0446     		mov	r4, r0
 2851 0018 0D46     		mov	r5, r1
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2852              		.loc 1 641 0
 2853 001a 4668     		ldr	r6, [r0, #4]
 2854 001c FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 2855              	.LVL297:
 2856 0020 8642     		cmp	r6, r0
 2857 0022 09D0     		beq	.L264
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2858              		.loc 1 648 0
 2859 0024 2946     		mov	r1, r5
 2860 0026 2046     		mov	r0, r4
 2861 0028 FFF7FEFF 		bl	xQueueSemaphoreTake
 2862              	.LVL298:
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2863              		.loc 1 653 0
 2864 002c 0246     		mov	r2, r0
 2865 002e 38B1     		cbz	r0, .L257
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2866              		.loc 1 655 0
 2867 0030 E368     		ldr	r3, [r4, #12]
 2868 0032 0133     		adds	r3, r3, #1
 2869 0034 E360     		str	r3, [r4, #12]
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2870              		.loc 1 663 0
 2871 0036 03E0     		b	.L257
 2872              	.LVL299:
 2873              	.L264:
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2874              		.loc 1 643 0
 2875 0038 E368     		ldr	r3, [r4, #12]
 2876 003a 0133     		adds	r3, r3, #1
 2877 003c E360     		str	r3, [r4, #12]
 2878              	.LVL300:
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2879              		.loc 1 644 0
 2880 003e 0122     		movs	r2, #1
 2881              	.LVL301:
 2882              	.L257:
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2883              		.loc 1 664 0
 2884 0040 1046     		mov	r0, r2
 2885 0042 70BD     		pop	{r4, r5, r6, pc}
 2886              		.cfi_endproc
 2887              	.LFE14:
 2889              		.section	.text.xQueuePeek,"ax",%progbits
 2890              		.align	1
 2891              		.global	xQueuePeek
 2892              		.syntax unified
 2893              		.thumb
 2894              		.thumb_func
 2895              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccyQlUm1.s 			page 102


 2897              	xQueuePeek:
 2898              	.LFB22:
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2899              		.loc 1 1600 0
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 16
 2902              		@ frame_needed = 0, uses_anonymous_args = 0
 2903              	.LVL302:
 2904 0000 70B5     		push	{r4, r5, r6, lr}
 2905              	.LCFI43:
 2906              		.cfi_def_cfa_offset 16
 2907              		.cfi_offset 4, -16
 2908              		.cfi_offset 5, -12
 2909              		.cfi_offset 6, -8
 2910              		.cfi_offset 14, -4
 2911 0002 84B0     		sub	sp, sp, #16
 2912              	.LCFI44:
 2913              		.cfi_def_cfa_offset 32
 2914 0004 0192     		str	r2, [sp, #4]
 2915              	.LVL303:
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2916              		.loc 1 1607 0
 2917 0006 60B1     		cbz	r0, .L286
 2918 0008 0446     		mov	r4, r0
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2919              		.loc 1 1611 0
 2920 000a 99B9     		cbnz	r1, .L268
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2921              		.loc 1 1611 0 is_stmt 0 discriminator 2
 2922 000c 036C     		ldr	r3, [r0, #64]
 2923 000e 8BB1     		cbz	r3, .L268
 2924              	.LBB205:
 2925              	.LBB206:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2926              		.loc 2 195 0 is_stmt 1
 2927              		.syntax unified
 2928              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2929 0010 4FF05003 			mov r3, #80												
 2930 0014 83F31188 		msr basepri, r3											
 2931 0018 BFF36F8F 		isb														
 2932 001c BFF34F8F 		dsb														
 2933              	
 2934              	@ 0 "" 2
 2935              	.LVL304:
 2936              		.thumb
 2937              		.syntax unified
 2938              	.L269:
 2939 0020 FEE7     		b	.L269
 2940              	.L286:
 2941              	.LBE206:
 2942              	.LBE205:
 2943              	.LBB207:
 2944              	.LBB208:
 2945              		.syntax unified
 2946              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2947 0022 4FF05003 			mov r3, #80												
 2948 0026 83F31188 		msr basepri, r3											
ARM GAS  /tmp/ccyQlUm1.s 			page 103


 2949 002a BFF36F8F 		isb														
 2950 002e BFF34F8F 		dsb														
 2951              	
 2952              	@ 0 "" 2
 2953              	.LVL305:
 2954              		.thumb
 2955              		.syntax unified
 2956              	.L267:
 2957 0032 FEE7     		b	.L267
 2958              	.L268:
 2959 0034 0E46     		mov	r6, r1
 2960              	.LBE208:
 2961              	.LBE207:
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2962              		.loc 1 1616 0
 2963 0036 FFF7FEFF 		bl	xTaskGetSchedulerState
 2964              	.LVL306:
 2965 003a 50B9     		cbnz	r0, .L283
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2966              		.loc 1 1616 0 is_stmt 0 discriminator 2
 2967 003c 019B     		ldr	r3, [sp, #4]
 2968 003e 53B1     		cbz	r3, .L284
 2969              	.LBB209:
 2970              	.LBB210:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2971              		.loc 2 195 0 is_stmt 1
 2972              		.syntax unified
 2973              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2974 0040 4FF05003 			mov r3, #80												
 2975 0044 83F31188 		msr basepri, r3											
 2976 0048 BFF36F8F 		isb														
 2977 004c BFF34F8F 		dsb														
 2978              	
 2979              	@ 0 "" 2
 2980              	.LVL307:
 2981              		.thumb
 2982              		.syntax unified
 2983              	.L271:
 2984 0050 FEE7     		b	.L271
 2985              	.L283:
 2986              	.LBE210:
 2987              	.LBE209:
 2988 0052 0025     		movs	r5, #0
 2989 0054 3EE0     		b	.L272
 2990              	.L284:
 2991 0056 0025     		movs	r5, #0
 2992 0058 3CE0     		b	.L272
 2993              	.LVL308:
 2994              	.L289:
 2995              	.LBB211:
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2996              		.loc 1 1638 0
 2997 005a E568     		ldr	r5, [r4, #12]
 2998              	.LVL309:
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 2999              		.loc 1 1640 0
 3000 005c 3146     		mov	r1, r6
ARM GAS  /tmp/ccyQlUm1.s 			page 104


 3001 005e 2046     		mov	r0, r4
 3002 0060 FFF7FEFF 		bl	prvCopyDataFromQueue
 3003              	.LVL310:
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3004              		.loc 1 1644 0
 3005 0064 E560     		str	r5, [r4, #12]
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3006              		.loc 1 1648 0
 3007 0066 636A     		ldr	r3, [r4, #36]
 3008 0068 23B9     		cbnz	r3, .L287
 3009              	.L274:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 3010              		.loc 1 1665 0
 3011 006a FFF7FEFF 		bl	vPortExitCritical
 3012              	.LVL311:
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3013              		.loc 1 1666 0
 3014 006e 0120     		movs	r0, #1
 3015              	.LVL312:
 3016              	.L265:
 3017              	.LBE211:
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3018              		.loc 1 1746 0
 3019 0070 04B0     		add	sp, sp, #16
 3020              	.LCFI45:
 3021              		.cfi_remember_state
 3022              		.cfi_def_cfa_offset 16
 3023              		@ sp needed
 3024 0072 70BD     		pop	{r4, r5, r6, pc}
 3025              	.LVL313:
 3026              	.L287:
 3027              	.LCFI46:
 3028              		.cfi_restore_state
 3029              	.LBB212:
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3030              		.loc 1 1650 0
 3031 0074 04F12400 		add	r0, r4, #36
 3032 0078 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3033              	.LVL314:
 3034 007c 0028     		cmp	r0, #0
 3035 007e F4D0     		beq	.L274
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 3036              		.loc 1 1653 0
 3037 0080 344B     		ldr	r3, .L294
 3038 0082 4FF08052 		mov	r2, #268435456
 3039 0086 1A60     		str	r2, [r3]
 3040              		.syntax unified
 3041              	@ 1653 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3042 0088 BFF34F8F 		dsb
 3043              	@ 0 "" 2
 3044              	@ 1653 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3045 008c BFF36F8F 		isb
 3046              	@ 0 "" 2
 3047              		.thumb
 3048              		.syntax unified
 3049 0090 EBE7     		b	.L274
 3050              	.LVL315:
ARM GAS  /tmp/ccyQlUm1.s 			page 105


 3051              	.L290:
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 3052              		.loc 1 1674 0
 3053 0092 FFF7FEFF 		bl	vPortExitCritical
 3054              	.LVL316:
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3055              		.loc 1 1676 0
 3056 0096 0020     		movs	r0, #0
 3057 0098 EAE7     		b	.L265
 3058              	.L291:
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 3059              		.loc 1 1683 0
 3060 009a 02A8     		add	r0, sp, #8
 3061 009c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3062              	.LVL317:
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3063              		.loc 1 1684 0
 3064 00a0 0125     		movs	r5, #1
 3065 00a2 21E0     		b	.L277
 3066              	.LVL318:
 3067              	.L292:
 3068              	.LBE212:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3069              		.loc 1 1699 0 discriminator 1
 3070 00a4 0023     		movs	r3, #0
 3071 00a6 84F84430 		strb	r3, [r4, #68]
 3072 00aa 29E0     		b	.L278
 3073              	.L293:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3074              		.loc 1 1699 0 is_stmt 0 discriminator 4
 3075 00ac 0023     		movs	r3, #0
 3076 00ae 84F84530 		strb	r3, [r4, #69]
 3077 00b2 2BE0     		b	.L279
 3078              	.L281:
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 3079              		.loc 1 1724 0 is_stmt 1
 3080 00b4 2046     		mov	r0, r4
 3081 00b6 FFF7FEFF 		bl	prvUnlockQueue
 3082              	.LVL319:
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3083              		.loc 1 1725 0
 3084 00ba FFF7FEFF 		bl	xTaskResumeAll
 3085              	.LVL320:
 3086 00be 09E0     		b	.L272
 3087              	.L280:
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 3088              		.loc 1 1732 0
 3089 00c0 2046     		mov	r0, r4
 3090 00c2 FFF7FEFF 		bl	prvUnlockQueue
 3091              	.LVL321:
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3092              		.loc 1 1733 0
 3093 00c6 FFF7FEFF 		bl	xTaskResumeAll
 3094              	.LVL322:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3095              		.loc 1 1735 0
 3096 00ca 2046     		mov	r0, r4
ARM GAS  /tmp/ccyQlUm1.s 			page 106


 3097 00cc FFF7FEFF 		bl	prvIsQueueEmpty
 3098              	.LVL323:
 3099 00d0 0028     		cmp	r0, #0
 3100 00d2 3DD1     		bne	.L288
 3101              	.LVL324:
 3102              	.L272:
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3103              		.loc 1 1627 0
 3104 00d4 FFF7FEFF 		bl	vPortEnterCritical
 3105              	.LVL325:
 3106              	.LBB213:
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3107              		.loc 1 1629 0
 3108 00d8 A36B     		ldr	r3, [r4, #56]
 3109              	.LVL326:
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3110              		.loc 1 1633 0
 3111 00da 002B     		cmp	r3, #0
 3112 00dc BDD1     		bne	.L289
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3113              		.loc 1 1670 0
 3114 00de 019B     		ldr	r3, [sp, #4]
 3115              	.LVL327:
 3116 00e0 002B     		cmp	r3, #0
 3117 00e2 D6D0     		beq	.L290
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3118              		.loc 1 1678 0
 3119 00e4 002D     		cmp	r5, #0
 3120 00e6 D8D0     		beq	.L291
 3121              	.LVL328:
 3122              	.L277:
 3123              	.LBE213:
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3124              		.loc 1 1693 0
 3125 00e8 FFF7FEFF 		bl	vPortExitCritical
 3126              	.LVL329:
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 3127              		.loc 1 1698 0
 3128 00ec FFF7FEFF 		bl	vTaskSuspendAll
 3129              	.LVL330:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3130              		.loc 1 1699 0
 3131 00f0 FFF7FEFF 		bl	vPortEnterCritical
 3132              	.LVL331:
 3133 00f4 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3134 00f8 5BB2     		sxtb	r3, r3
 3135 00fa B3F1FF3F 		cmp	r3, #-1
 3136 00fe D1D0     		beq	.L292
 3137              	.L278:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3138              		.loc 1 1699 0 is_stmt 0 discriminator 3
 3139 0100 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3140 0104 5BB2     		sxtb	r3, r3
 3141 0106 B3F1FF3F 		cmp	r3, #-1
 3142 010a CFD0     		beq	.L293
 3143              	.L279:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccyQlUm1.s 			page 107


 3144              		.loc 1 1699 0 discriminator 6
 3145 010c FFF7FEFF 		bl	vPortExitCritical
 3146              	.LVL332:
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3147              		.loc 1 1702 0 is_stmt 1 discriminator 6
 3148 0110 01A9     		add	r1, sp, #4
 3149 0112 02A8     		add	r0, sp, #8
 3150 0114 FFF7FEFF 		bl	xTaskCheckForTimeOut
 3151              	.LVL333:
 3152 0118 0028     		cmp	r0, #0
 3153 011a D1D1     		bne	.L280
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3154              		.loc 1 1706 0
 3155 011c 2046     		mov	r0, r4
 3156 011e FFF7FEFF 		bl	prvIsQueueEmpty
 3157              	.LVL334:
 3158 0122 0028     		cmp	r0, #0
 3159 0124 C6D0     		beq	.L281
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 3160              		.loc 1 1709 0
 3161 0126 0199     		ldr	r1, [sp, #4]
 3162 0128 04F12400 		add	r0, r4, #36
 3163 012c FFF7FEFF 		bl	vTaskPlaceOnEventList
 3164              	.LVL335:
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3165              		.loc 1 1710 0
 3166 0130 2046     		mov	r0, r4
 3167 0132 FFF7FEFF 		bl	prvUnlockQueue
 3168              	.LVL336:
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3169              		.loc 1 1711 0
 3170 0136 FFF7FEFF 		bl	xTaskResumeAll
 3171              	.LVL337:
 3172 013a 0028     		cmp	r0, #0
 3173 013c CAD1     		bne	.L272
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3174              		.loc 1 1713 0
 3175 013e 054B     		ldr	r3, .L294
 3176 0140 4FF08052 		mov	r2, #268435456
 3177 0144 1A60     		str	r2, [r3]
 3178              		.syntax unified
 3179              	@ 1713 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3180 0146 BFF34F8F 		dsb
 3181              	@ 0 "" 2
 3182              	@ 1713 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3183 014a BFF36F8F 		isb
 3184              	@ 0 "" 2
 3185              		.thumb
 3186              		.syntax unified
 3187 014e C1E7     		b	.L272
 3188              	.L288:
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3189              		.loc 1 1738 0
 3190 0150 0020     		movs	r0, #0
 3191 0152 8DE7     		b	.L265
 3192              	.L295:
 3193              		.align	2
ARM GAS  /tmp/ccyQlUm1.s 			page 108


 3194              	.L294:
 3195 0154 04ED00E0 		.word	-536810236
 3196              		.cfi_endproc
 3197              	.LFE22:
 3199              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 3200              		.align	1
 3201              		.global	xQueueReceiveFromISR
 3202              		.syntax unified
 3203              		.thumb
 3204              		.thumb_func
 3205              		.fpu fpv4-sp-d16
 3207              	xQueueReceiveFromISR:
 3208              	.LFB23:
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3209              		.loc 1 1750 0
 3210              		.cfi_startproc
 3211              		@ args = 0, pretend = 0, frame = 0
 3212              		@ frame_needed = 0, uses_anonymous_args = 0
 3213              	.LVL338:
 3214 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3215              	.LCFI47:
 3216              		.cfi_def_cfa_offset 32
 3217              		.cfi_offset 3, -32
 3218              		.cfi_offset 4, -28
 3219              		.cfi_offset 5, -24
 3220              		.cfi_offset 6, -20
 3221              		.cfi_offset 7, -16
 3222              		.cfi_offset 8, -12
 3223              		.cfi_offset 9, -8
 3224              		.cfi_offset 14, -4
 3225              	.LVL339:
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3226              		.loc 1 1755 0
 3227 0004 60B1     		cbz	r0, .L308
 3228 0006 0446     		mov	r4, r0
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3229              		.loc 1 1756 0
 3230 0008 99B9     		cbnz	r1, .L299
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3231              		.loc 1 1756 0 is_stmt 0 discriminator 2
 3232 000a 036C     		ldr	r3, [r0, #64]
 3233 000c 8BB1     		cbz	r3, .L299
 3234              	.LBB214:
 3235              	.LBB215:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3236              		.loc 2 195 0 is_stmt 1
 3237              		.syntax unified
 3238              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3239 000e 4FF05003 			mov r3, #80												
 3240 0012 83F31188 		msr basepri, r3											
 3241 0016 BFF36F8F 		isb														
 3242 001a BFF34F8F 		dsb														
 3243              	
 3244              	@ 0 "" 2
 3245              	.LVL340:
 3246              		.thumb
 3247              		.syntax unified
ARM GAS  /tmp/ccyQlUm1.s 			page 109


 3248              	.L300:
 3249 001e FEE7     		b	.L300
 3250              	.L308:
 3251              	.LBE215:
 3252              	.LBE214:
 3253              	.LBB216:
 3254              	.LBB217:
 3255              		.syntax unified
 3256              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3257 0020 4FF05003 			mov r3, #80												
 3258 0024 83F31188 		msr basepri, r3											
 3259 0028 BFF36F8F 		isb														
 3260 002c BFF34F8F 		dsb														
 3261              	
 3262              	@ 0 "" 2
 3263              	.LVL341:
 3264              		.thumb
 3265              		.syntax unified
 3266              	.L298:
 3267 0030 FEE7     		b	.L298
 3268              	.L299:
 3269 0032 1746     		mov	r7, r2
 3270 0034 8946     		mov	r9, r1
 3271              	.LBE217:
 3272              	.LBE216:
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3273              		.loc 1 1772 0
 3274 0036 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3275              	.LVL342:
 3276              	.LBB218:
 3277              	.LBB219:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3278              		.loc 2 211 0
 3279              		.syntax unified
 3280              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3281 003a EFF31186 			mrs r6, basepri											
 3282 003e 4FF05003 		mov r3, #80												
 3283 0042 83F31188 		msr basepri, r3											
 3284 0046 BFF36F8F 		isb														
 3285 004a BFF34F8F 		dsb														
 3286              	
 3287              	@ 0 "" 2
 3288              		.thumb
 3289              		.syntax unified
 3290              	.LBE219:
 3291              	.LBE218:
 3292              	.LBB220:
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3293              		.loc 1 1776 0
 3294 004e D4F83880 		ldr	r8, [r4, #56]
 3295              	.LVL343:
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3296              		.loc 1 1779 0
 3297 0052 B8F1000F 		cmp	r8, #0
 3298 0056 1DD0     		beq	.L303
 3299              	.LBB221:
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccyQlUm1.s 			page 110


 3300              		.loc 1 1781 0
 3301 0058 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 3302 005c 6DB2     		sxtb	r5, r5
 3303              	.LVL344:
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3304              		.loc 1 1785 0
 3305 005e 4946     		mov	r1, r9
 3306 0060 2046     		mov	r0, r4
 3307 0062 FFF7FEFF 		bl	prvCopyDataFromQueue
 3308              	.LVL345:
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3309              		.loc 1 1786 0
 3310 0066 08F1FF33 		add	r3, r8, #-1
 3311 006a A363     		str	r3, [r4, #56]
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3312              		.loc 1 1792 0
 3313 006c B5F1FF3F 		cmp	r5, #-1
 3314 0070 05D0     		beq	.L309
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3315              		.loc 1 1823 0
 3316 0072 6B1C     		adds	r3, r5, #1
 3317 0074 5BB2     		sxtb	r3, r3
 3318 0076 84F84430 		strb	r3, [r4, #68]
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3319              		.loc 1 1826 0
 3320 007a 0120     		movs	r0, #1
 3321 007c 0BE0     		b	.L301
 3322              	.L309:
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3323              		.loc 1 1794 0
 3324 007e 2369     		ldr	r3, [r4, #16]
 3325 0080 6BB1     		cbz	r3, .L304
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3326              		.loc 1 1796 0
 3327 0082 04F11000 		add	r0, r4, #16
 3328 0086 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3329              	.LVL346:
 3330 008a 50B1     		cbz	r0, .L305
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 3331              		.loc 1 1800 0
 3332 008c 5FB1     		cbz	r7, .L306
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 3333              		.loc 1 1802 0
 3334 008e 0120     		movs	r0, #1
 3335 0090 3860     		str	r0, [r7]
 3336 0092 00E0     		b	.L301
 3337              	.LVL347:
 3338              	.L303:
 3339              	.LBE221:
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 3340              		.loc 1 1830 0
 3341 0094 0020     		movs	r0, #0
 3342              	.L301:
 3343              	.LVL348:
 3344              	.LBE220:
 3345              	.LBB223:
 3346              	.LBB224:
ARM GAS  /tmp/ccyQlUm1.s 			page 111


 3347              		.loc 2 229 0
 3348              		.syntax unified
 3349              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3350 0096 86F31188 			msr basepri, r6	
 3351              	@ 0 "" 2
 3352              	.LVL349:
 3353              		.thumb
 3354              		.syntax unified
 3355              	.LBE224:
 3356              	.LBE223:
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3357              		.loc 1 1837 0
 3358 009a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3359              	.LVL350:
 3360              	.L304:
 3361              	.LBB225:
 3362              	.LBB222:
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3363              		.loc 1 1826 0
 3364 009e 0120     		movs	r0, #1
 3365 00a0 F9E7     		b	.L301
 3366              	.L305:
 3367 00a2 0120     		movs	r0, #1
 3368 00a4 F7E7     		b	.L301
 3369              	.L306:
 3370 00a6 0120     		movs	r0, #1
 3371 00a8 F5E7     		b	.L301
 3372              	.LBE222:
 3373              	.LBE225:
 3374              		.cfi_endproc
 3375              	.LFE23:
 3377              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3378              		.align	1
 3379              		.global	xQueuePeekFromISR
 3380              		.syntax unified
 3381              		.thumb
 3382              		.thumb_func
 3383              		.fpu fpv4-sp-d16
 3385              	xQueuePeekFromISR:
 3386              	.LFB24:
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3387              		.loc 1 1841 0
 3388              		.cfi_startproc
 3389              		@ args = 0, pretend = 0, frame = 0
 3390              		@ frame_needed = 0, uses_anonymous_args = 0
 3391              	.LVL351:
 3392 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3393              	.LCFI48:
 3394              		.cfi_def_cfa_offset 24
 3395              		.cfi_offset 3, -24
 3396              		.cfi_offset 4, -20
 3397              		.cfi_offset 5, -16
 3398              		.cfi_offset 6, -12
 3399              		.cfi_offset 7, -8
 3400              		.cfi_offset 14, -4
 3401              	.LVL352:
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
ARM GAS  /tmp/ccyQlUm1.s 			page 112


 3402              		.loc 1 1847 0
 3403 0002 60B1     		cbz	r0, .L320
 3404 0004 0446     		mov	r4, r0
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3405              		.loc 1 1848 0
 3406 0006 99B9     		cbnz	r1, .L313
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3407              		.loc 1 1848 0 is_stmt 0 discriminator 2
 3408 0008 036C     		ldr	r3, [r0, #64]
 3409 000a 8BB1     		cbz	r3, .L313
 3410              	.LBB226:
 3411              	.LBB227:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3412              		.loc 2 195 0 is_stmt 1
 3413              		.syntax unified
 3414              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3415 000c 4FF05003 			mov r3, #80												
 3416 0010 83F31188 		msr basepri, r3											
 3417 0014 BFF36F8F 		isb														
 3418 0018 BFF34F8F 		dsb														
 3419              	
 3420              	@ 0 "" 2
 3421              	.LVL353:
 3422              		.thumb
 3423              		.syntax unified
 3424              	.L314:
 3425 001c FEE7     		b	.L314
 3426              	.L320:
 3427              	.LBE227:
 3428              	.LBE226:
 3429              	.LBB228:
 3430              	.LBB229:
 3431              		.syntax unified
 3432              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3433 001e 4FF05003 			mov r3, #80												
 3434 0022 83F31188 		msr basepri, r3											
 3435 0026 BFF36F8F 		isb														
 3436 002a BFF34F8F 		dsb														
 3437              	
 3438              	@ 0 "" 2
 3439              	.LVL354:
 3440              		.thumb
 3441              		.syntax unified
 3442              	.L312:
 3443 002e FEE7     		b	.L312
 3444              	.L313:
 3445              	.LBE229:
 3446              	.LBE228:
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3447              		.loc 1 1849 0
 3448 0030 236C     		ldr	r3, [r4, #64]
 3449 0032 43B9     		cbnz	r3, .L315
 3450              	.LBB230:
 3451              	.LBB231:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3452              		.loc 2 195 0
 3453              		.syntax unified
ARM GAS  /tmp/ccyQlUm1.s 			page 113


 3454              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3455 0034 4FF05003 			mov r3, #80												
 3456 0038 83F31188 		msr basepri, r3											
 3457 003c BFF36F8F 		isb														
 3458 0040 BFF34F8F 		dsb														
 3459              	
 3460              	@ 0 "" 2
 3461              	.LVL355:
 3462              		.thumb
 3463              		.syntax unified
 3464              	.L316:
 3465 0044 FEE7     		b	.L316
 3466              	.L315:
 3467 0046 0D46     		mov	r5, r1
 3468              	.LBE231:
 3469              	.LBE230:
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3470              		.loc 1 1865 0
 3471 0048 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3472              	.LVL356:
 3473              	.LBB232:
 3474              	.LBB233:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3475              		.loc 2 211 0
 3476              		.syntax unified
 3477              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3478 004c EFF31186 			mrs r6, basepri											
 3479 0050 4FF05003 		mov r3, #80												
 3480 0054 83F31188 		msr basepri, r3											
 3481 0058 BFF36F8F 		isb														
 3482 005c BFF34F8F 		dsb														
 3483              	
 3484              	@ 0 "" 2
 3485              		.thumb
 3486              		.syntax unified
 3487              	.LBE233:
 3488              	.LBE232:
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3489              		.loc 1 1870 0
 3490 0060 A36B     		ldr	r3, [r4, #56]
 3491 0062 4BB1     		cbz	r3, .L318
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3492              		.loc 1 1876 0
 3493 0064 E768     		ldr	r7, [r4, #12]
 3494              	.LVL357:
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 3495              		.loc 1 1877 0
 3496 0066 2946     		mov	r1, r5
 3497 0068 2046     		mov	r0, r4
 3498 006a FFF7FEFF 		bl	prvCopyDataFromQueue
 3499              	.LVL358:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3500              		.loc 1 1878 0
 3501 006e E760     		str	r7, [r4, #12]
 3502              	.LVL359:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3503              		.loc 1 1880 0
ARM GAS  /tmp/ccyQlUm1.s 			page 114


 3504 0070 0120     		movs	r0, #1
 3505              	.LVL360:
 3506              	.L317:
 3507              	.LBB234:
 3508              	.LBB235:
 3509              		.loc 2 229 0
 3510              		.syntax unified
 3511              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3512 0072 86F31188 			msr basepri, r6	
 3513              	@ 0 "" 2
 3514              	.LVL361:
 3515              		.thumb
 3516              		.syntax unified
 3517              	.LBE235:
 3518              	.LBE234:
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3519              		.loc 1 1891 0
 3520 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3521              	.LVL362:
 3522              	.L318:
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 3523              		.loc 1 1884 0
 3524 0078 0020     		movs	r0, #0
 3525 007a FAE7     		b	.L317
 3526              		.cfi_endproc
 3527              	.LFE24:
 3529              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 3530              		.align	1
 3531              		.global	uxQueueMessagesWaiting
 3532              		.syntax unified
 3533              		.thumb
 3534              		.thumb_func
 3535              		.fpu fpv4-sp-d16
 3537              	uxQueueMessagesWaiting:
 3538              	.LFB25:
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3539              		.loc 1 1895 0
 3540              		.cfi_startproc
 3541              		@ args = 0, pretend = 0, frame = 0
 3542              		@ frame_needed = 0, uses_anonymous_args = 0
 3543              	.LVL363:
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3544              		.loc 1 1898 0
 3545 0000 40B9     		cbnz	r0, .L322
 3546              	.LBB236:
 3547              	.LBB237:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3548              		.loc 2 195 0
 3549              		.syntax unified
 3550              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3551 0002 4FF05003 			mov r3, #80												
 3552 0006 83F31188 		msr basepri, r3											
 3553 000a BFF36F8F 		isb														
 3554 000e BFF34F8F 		dsb														
 3555              	
 3556              	@ 0 "" 2
 3557              	.LVL364:
ARM GAS  /tmp/ccyQlUm1.s 			page 115


 3558              		.thumb
 3559              		.syntax unified
 3560              	.L323:
 3561 0012 FEE7     		b	.L323
 3562              	.L322:
 3563              	.LBE237:
 3564              	.LBE236:
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3565              		.loc 1 1895 0
 3566 0014 10B5     		push	{r4, lr}
 3567              	.LCFI49:
 3568              		.cfi_def_cfa_offset 8
 3569              		.cfi_offset 4, -8
 3570              		.cfi_offset 14, -4
 3571 0016 0446     		mov	r4, r0
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3572              		.loc 1 1900 0
 3573 0018 FFF7FEFF 		bl	vPortEnterCritical
 3574              	.LVL365:
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3575              		.loc 1 1902 0
 3576 001c A46B     		ldr	r4, [r4, #56]
 3577              	.LVL366:
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3578              		.loc 1 1904 0
 3579 001e FFF7FEFF 		bl	vPortExitCritical
 3580              	.LVL367:
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3581              		.loc 1 1907 0
 3582 0022 2046     		mov	r0, r4
 3583 0024 10BD     		pop	{r4, pc}
 3584              		.cfi_endproc
 3585              	.LFE25:
 3587              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3588              		.align	1
 3589              		.global	uxQueueSpacesAvailable
 3590              		.syntax unified
 3591              		.thumb
 3592              		.thumb_func
 3593              		.fpu fpv4-sp-d16
 3595              	uxQueueSpacesAvailable:
 3596              	.LFB26:
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3597              		.loc 1 1911 0
 3598              		.cfi_startproc
 3599              		@ args = 0, pretend = 0, frame = 0
 3600              		@ frame_needed = 0, uses_anonymous_args = 0
 3601              	.LVL368:
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3602              		.loc 1 1916 0
 3603 0000 40B9     		cbnz	r0, .L327
 3604              	.LBB238:
 3605              	.LBB239:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3606              		.loc 2 195 0
 3607              		.syntax unified
 3608              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /tmp/ccyQlUm1.s 			page 116


 3609 0002 4FF05003 			mov r3, #80												
 3610 0006 83F31188 		msr basepri, r3											
 3611 000a BFF36F8F 		isb														
 3612 000e BFF34F8F 		dsb														
 3613              	
 3614              	@ 0 "" 2
 3615              	.LVL369:
 3616              		.thumb
 3617              		.syntax unified
 3618              	.L328:
 3619 0012 FEE7     		b	.L328
 3620              	.L327:
 3621              	.LBE239:
 3622              	.LBE238:
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3623              		.loc 1 1911 0
 3624 0014 10B5     		push	{r4, lr}
 3625              	.LCFI50:
 3626              		.cfi_def_cfa_offset 8
 3627              		.cfi_offset 4, -8
 3628              		.cfi_offset 14, -4
 3629 0016 0446     		mov	r4, r0
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3630              		.loc 1 1918 0
 3631 0018 FFF7FEFF 		bl	vPortEnterCritical
 3632              	.LVL370:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3633              		.loc 1 1920 0
 3634 001c E36B     		ldr	r3, [r4, #60]
 3635 001e A46B     		ldr	r4, [r4, #56]
 3636              	.LVL371:
 3637 0020 1C1B     		subs	r4, r3, r4
 3638              	.LVL372:
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3639              		.loc 1 1922 0
 3640 0022 FFF7FEFF 		bl	vPortExitCritical
 3641              	.LVL373:
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3642              		.loc 1 1925 0
 3643 0026 2046     		mov	r0, r4
 3644 0028 10BD     		pop	{r4, pc}
 3645              		.cfi_endproc
 3646              	.LFE26:
 3648              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3649              		.align	1
 3650              		.global	uxQueueMessagesWaitingFromISR
 3651              		.syntax unified
 3652              		.thumb
 3653              		.thumb_func
 3654              		.fpu fpv4-sp-d16
 3656              	uxQueueMessagesWaitingFromISR:
 3657              	.LFB27:
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3658              		.loc 1 1929 0
 3659              		.cfi_startproc
 3660              		@ args = 0, pretend = 0, frame = 0
 3661              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccyQlUm1.s 			page 117


 3662              		@ link register save eliminated.
 3663              	.LVL374:
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3664              		.loc 1 1932 0
 3665 0000 08B1     		cbz	r0, .L334
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3666              		.loc 1 1934 0
 3667 0002 806B     		ldr	r0, [r0, #56]
 3668              	.LVL375:
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3669              		.loc 1 1937 0
 3670 0004 7047     		bx	lr
 3671              	.LVL376:
 3672              	.L334:
 3673              	.LBB240:
 3674              	.LBB241:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3675              		.loc 2 195 0
 3676              		.syntax unified
 3677              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3678 0006 4FF05003 			mov r3, #80												
 3679 000a 83F31188 		msr basepri, r3											
 3680 000e BFF36F8F 		isb														
 3681 0012 BFF34F8F 		dsb														
 3682              	
 3683              	@ 0 "" 2
 3684              	.LVL377:
 3685              		.thumb
 3686              		.syntax unified
 3687              	.L333:
 3688 0016 FEE7     		b	.L333
 3689              	.LBE241:
 3690              	.LBE240:
 3691              		.cfi_endproc
 3692              	.LFE27:
 3694              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 3695              		.align	1
 3696              		.global	uxQueueGetQueueNumber
 3697              		.syntax unified
 3698              		.thumb
 3699              		.thumb_func
 3700              		.fpu fpv4-sp-d16
 3702              	uxQueueGetQueueNumber:
 3703              	.LFB29:
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 3704              		.loc 1 1985 0
 3705              		.cfi_startproc
 3706              		@ args = 0, pretend = 0, frame = 0
 3707              		@ frame_needed = 0, uses_anonymous_args = 0
 3708              		@ link register save eliminated.
 3709              	.LVL378:
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3710              		.loc 1 1987 0
 3711 0000 806C     		ldr	r0, [r0, #72]
 3712              	.LVL379:
 3713 0002 7047     		bx	lr
 3714              		.cfi_endproc
ARM GAS  /tmp/ccyQlUm1.s 			page 118


 3715              	.LFE29:
 3717              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 3718              		.align	1
 3719              		.global	vQueueSetQueueNumber
 3720              		.syntax unified
 3721              		.thumb
 3722              		.thumb_func
 3723              		.fpu fpv4-sp-d16
 3725              	vQueueSetQueueNumber:
 3726              	.LFB30:
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 3727              		.loc 1 1995 0
 3728              		.cfi_startproc
 3729              		@ args = 0, pretend = 0, frame = 0
 3730              		@ frame_needed = 0, uses_anonymous_args = 0
 3731              		@ link register save eliminated.
 3732              	.LVL380:
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3733              		.loc 1 1996 0
 3734 0000 8164     		str	r1, [r0, #72]
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3735              		.loc 1 1997 0
 3736 0002 7047     		bx	lr
 3737              		.cfi_endproc
 3738              	.LFE30:
 3740              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 3741              		.align	1
 3742              		.global	ucQueueGetQueueType
 3743              		.syntax unified
 3744              		.thumb
 3745              		.thumb_func
 3746              		.fpu fpv4-sp-d16
 3748              	ucQueueGetQueueType:
 3749              	.LFB31:
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 3750              		.loc 1 2005 0
 3751              		.cfi_startproc
 3752              		@ args = 0, pretend = 0, frame = 0
 3753              		@ frame_needed = 0, uses_anonymous_args = 0
 3754              		@ link register save eliminated.
 3755              	.LVL381:
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3756              		.loc 1 2007 0
 3757 0000 90F84C00 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 3758              	.LVL382:
 3759 0004 7047     		bx	lr
 3760              		.cfi_endproc
 3761              	.LFE31:
 3763              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3764              		.align	1
 3765              		.global	xQueueIsQueueEmptyFromISR
 3766              		.syntax unified
 3767              		.thumb
 3768              		.thumb_func
 3769              		.fpu fpv4-sp-d16
 3771              	xQueueIsQueueEmptyFromISR:
 3772              	.LFB37:
ARM GAS  /tmp/ccyQlUm1.s 			page 119


2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3773              		.loc 1 2278 0
 3774              		.cfi_startproc
 3775              		@ args = 0, pretend = 0, frame = 0
 3776              		@ frame_needed = 0, uses_anonymous_args = 0
 3777              		@ link register save eliminated.
 3778              	.LVL383:
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3779              		.loc 1 2281 0
 3780 0000 18B1     		cbz	r0, .L343
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3781              		.loc 1 2282 0
 3782 0002 836B     		ldr	r3, [r0, #56]
 3783 0004 53B9     		cbnz	r3, .L342
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3784              		.loc 1 2284 0
 3785 0006 0120     		movs	r0, #1
 3786              	.LVL384:
 3787 0008 7047     		bx	lr
 3788              	.LVL385:
 3789              	.L343:
 3790              	.LBB242:
 3791              	.LBB243:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3792              		.loc 2 195 0
 3793              		.syntax unified
 3794              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3795 000a 4FF05003 			mov r3, #80												
 3796 000e 83F31188 		msr basepri, r3											
 3797 0012 BFF36F8F 		isb														
 3798 0016 BFF34F8F 		dsb														
 3799              	
 3800              	@ 0 "" 2
 3801              	.LVL386:
 3802              		.thumb
 3803              		.syntax unified
 3804              	.L340:
 3805 001a FEE7     		b	.L340
 3806              	.L342:
 3807              	.LBE243:
 3808              	.LBE242:
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3809              		.loc 1 2288 0
 3810 001c 0020     		movs	r0, #0
 3811              	.LVL387:
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3812              		.loc 1 2292 0
 3813 001e 7047     		bx	lr
 3814              		.cfi_endproc
 3815              	.LFE37:
 3817              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3818              		.align	1
 3819              		.global	xQueueIsQueueFullFromISR
 3820              		.syntax unified
 3821              		.thumb
 3822              		.thumb_func
 3823              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccyQlUm1.s 			page 120


 3825              	xQueueIsQueueFullFromISR:
 3826              	.LFB39:
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3827              		.loc 1 2317 0
 3828              		.cfi_startproc
 3829              		@ args = 0, pretend = 0, frame = 0
 3830              		@ frame_needed = 0, uses_anonymous_args = 0
 3831              		@ link register save eliminated.
 3832              	.LVL388:
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 3833              		.loc 1 2320 0
 3834 0000 28B1     		cbz	r0, .L349
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 3835              		.loc 1 2321 0
 3836 0002 826B     		ldr	r2, [r0, #56]
 3837 0004 C36B     		ldr	r3, [r0, #60]
 3838 0006 9A42     		cmp	r2, r3
 3839 0008 0AD1     		bne	.L348
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 3840              		.loc 1 2323 0
 3841 000a 0120     		movs	r0, #1
 3842              	.LVL389:
 3843 000c 7047     		bx	lr
 3844              	.LVL390:
 3845              	.L349:
 3846              	.LBB244:
 3847              	.LBB245:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3848              		.loc 2 195 0
 3849              		.syntax unified
 3850              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3851 000e 4FF05003 			mov r3, #80												
 3852 0012 83F31188 		msr basepri, r3											
 3853 0016 BFF36F8F 		isb														
 3854 001a BFF34F8F 		dsb														
 3855              	
 3856              	@ 0 "" 2
 3857              	.LVL391:
 3858              		.thumb
 3859              		.syntax unified
 3860              	.L346:
 3861 001e FEE7     		b	.L346
 3862              	.L348:
 3863              	.LBE245:
 3864              	.LBE244:
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3865              		.loc 1 2327 0
 3866 0020 0020     		movs	r0, #0
ARM GAS  /tmp/ccyQlUm1.s 			page 121


 3867              	.LVL392:
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3868              		.loc 1 2331 0
 3869 0022 7047     		bx	lr
 3870              		.cfi_endproc
 3871              	.LFE39:
 3873              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3874              		.align	1
 3875              		.global	vQueueAddToRegistry
 3876              		.syntax unified
 3877              		.thumb
 3878              		.thumb_func
 3879              		.fpu fpv4-sp-d16
 3881              	vQueueAddToRegistry:
 3882              	.LFB40:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/ccyQlUm1.s 			page 122


2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
ARM GAS  /tmp/ccyQlUm1.s 			page 123


2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/ccyQlUm1.s 			page 124


2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccyQlUm1.s 			page 125


2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  /tmp/ccyQlUm1.s 			page 126


2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3883              		.loc 1 2612 0
 3884              		.cfi_startproc
 3885              		@ args = 0, pretend = 0, frame = 0
 3886              		@ frame_needed = 0, uses_anonymous_args = 0
 3887              		@ link register save eliminated.
 3888              	.LVL393:
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3889              		.loc 1 2617 0
 3890 0000 0023     		movs	r3, #0
 3891              	.LVL394:
 3892              	.L351:
 3893              		.loc 1 2617 0 is_stmt 0 discriminator 1
 3894 0002 072B     		cmp	r3, #7
 3895 0004 0CD8     		bhi	.L355
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3896              		.loc 1 2619 0 is_stmt 1
 3897 0006 074A     		ldr	r2, .L357
 3898 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 3899 000c 0AB1     		cbz	r2, .L356
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3900              		.loc 1 2617 0 discriminator 2
 3901 000e 0133     		adds	r3, r3, #1
 3902              	.LVL395:
 3903 0010 F7E7     		b	.L351
 3904              	.L356:
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 3905              		.loc 1 2622 0
 3906 0012 044A     		ldr	r2, .L357
 3907 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3908              		.loc 1 2623 0
 3909 0018 02EBC303 		add	r3, r2, r3, lsl #3
 3910              	.LVL396:
 3911 001c 5860     		str	r0, [r3, #4]
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
ARM GAS  /tmp/ccyQlUm1.s 			page 127


2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3912              		.loc 1 2626 0
 3913 001e 7047     		bx	lr
 3914              	.LVL397:
 3915              	.L355:
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3916              		.loc 1 2633 0
 3917 0020 7047     		bx	lr
 3918              	.L358:
 3919 0022 00BF     		.align	2
 3920              	.L357:
 3921 0024 00000000 		.word	xQueueRegistry
 3922              		.cfi_endproc
 3923              	.LFE40:
 3925              		.section	.text.pcQueueGetName,"ax",%progbits
 3926              		.align	1
 3927              		.global	pcQueueGetName
 3928              		.syntax unified
 3929              		.thumb
 3930              		.thumb_func
 3931              		.fpu fpv4-sp-d16
 3933              	pcQueueGetName:
 3934              	.LFB41:
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3935              		.loc 1 2641 0
 3936              		.cfi_startproc
 3937              		@ args = 0, pretend = 0, frame = 0
 3938              		@ frame_needed = 0, uses_anonymous_args = 0
 3939              		@ link register save eliminated.
 3940              	.LVL398:
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3941              		.loc 1 2647 0
 3942 0000 0023     		movs	r3, #0
 3943              	.LVL399:
 3944              	.L360:
 3945              		.loc 1 2647 0 is_stmt 0 discriminator 1
 3946 0002 072B     		cmp	r3, #7
 3947 0004 0BD8     		bhi	.L364
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/ccyQlUm1.s 			page 128


2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3948              		.loc 1 2649 0 is_stmt 1
 3949 0006 074A     		ldr	r2, .L366
 3950 0008 02EBC302 		add	r2, r2, r3, lsl #3
 3951 000c 5268     		ldr	r2, [r2, #4]
 3952 000e 8242     		cmp	r2, r0
 3953 0010 01D0     		beq	.L365
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3954              		.loc 1 2647 0 discriminator 2
 3955 0012 0133     		adds	r3, r3, #1
 3956              	.LVL400:
 3957 0014 F5E7     		b	.L360
 3958              	.L365:
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 3959              		.loc 1 2651 0
 3960 0016 034A     		ldr	r2, .L366
 3961 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 3962              	.LVL401:
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3963              		.loc 1 2652 0
 3964 001c 7047     		bx	lr
 3965              	.LVL402:
 3966              	.L364:
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3967              		.loc 1 2643 0
 3968 001e 0020     		movs	r0, #0
 3969              	.LVL403:
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 3970              		.loc 1 2661 0
 3971 0020 7047     		bx	lr
 3972              	.L367:
 3973 0022 00BF     		.align	2
 3974              	.L366:
 3975 0024 00000000 		.word	xQueueRegistry
 3976              		.cfi_endproc
 3977              	.LFE41:
 3979              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 3980              		.align	1
 3981              		.global	vQueueUnregisterQueue
 3982              		.syntax unified
 3983              		.thumb
 3984              		.thumb_func
 3985              		.fpu fpv4-sp-d16
 3987              	vQueueUnregisterQueue:
 3988              	.LFB42:
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccyQlUm1.s 			page 129


2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3989              		.loc 1 2669 0
 3990              		.cfi_startproc
 3991              		@ args = 0, pretend = 0, frame = 0
 3992              		@ frame_needed = 0, uses_anonymous_args = 0
 3993              		@ link register save eliminated.
 3994              	.LVL404:
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3995              		.loc 1 2674 0
 3996 0000 0023     		movs	r3, #0
 3997              	.LVL405:
 3998              	.L369:
 3999              		.loc 1 2674 0 is_stmt 0 discriminator 1
 4000 0002 072B     		cmp	r3, #7
 4001 0004 0FD8     		bhi	.L373
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4002              		.loc 1 2676 0 is_stmt 1
 4003 0006 084A     		ldr	r2, .L375
 4004 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4005 000c 5268     		ldr	r2, [r2, #4]
 4006 000e 8242     		cmp	r2, r0
 4007 0010 01D0     		beq	.L374
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4008              		.loc 1 2674 0 discriminator 2
 4009 0012 0133     		adds	r3, r3, #1
 4010              	.LVL406:
 4011 0014 F5E7     		b	.L369
 4012              	.L374:
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 4013              		.loc 1 2679 0
 4014 0016 044A     		ldr	r2, .L375
 4015 0018 0021     		movs	r1, #0
 4016 001a 42F83310 		str	r1, [r2, r3, lsl #3]
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 4017              		.loc 1 2684 0
 4018 001e 02EBC303 		add	r3, r2, r3, lsl #3
 4019              	.LVL407:
 4020 0022 5960     		str	r1, [r3, #4]
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4021              		.loc 1 2685 0
 4022 0024 7047     		bx	lr
 4023              	.LVL408:
ARM GAS  /tmp/ccyQlUm1.s 			page 130


 4024              	.L373:
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4025              		.loc 1 2693 0
 4026 0026 7047     		bx	lr
 4027              	.L376:
 4028              		.align	2
 4029              	.L375:
 4030 0028 00000000 		.word	xQueueRegistry
 4031              		.cfi_endproc
 4032              	.LFE42:
 4034              		.section	.text.vQueueDelete,"ax",%progbits
 4035              		.align	1
 4036              		.global	vQueueDelete
 4037              		.syntax unified
 4038              		.thumb
 4039              		.thumb_func
 4040              		.fpu fpv4-sp-d16
 4042              	vQueueDelete:
 4043              	.LFB28:
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 4044              		.loc 1 1941 0
 4045              		.cfi_startproc
 4046              		@ args = 0, pretend = 0, frame = 0
 4047              		@ frame_needed = 0, uses_anonymous_args = 0
 4048              	.LVL409:
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4049              		.loc 1 1944 0
 4050 0000 40B9     		cbnz	r0, .L378
 4051              	.LBB246:
 4052              	.LBB247:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4053              		.loc 2 195 0
 4054              		.syntax unified
 4055              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4056 0002 4FF05003 			mov r3, #80												
 4057 0006 83F31188 		msr basepri, r3											
 4058 000a BFF36F8F 		isb														
 4059 000e BFF34F8F 		dsb														
 4060              	
 4061              	@ 0 "" 2
 4062              	.LVL410:
 4063              		.thumb
 4064              		.syntax unified
 4065              	.L379:
 4066 0012 FEE7     		b	.L379
 4067              	.L378:
 4068              	.LBE247:
 4069              	.LBE246:
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 4070              		.loc 1 1941 0
ARM GAS  /tmp/ccyQlUm1.s 			page 131


 4071 0014 10B5     		push	{r4, lr}
 4072              	.LCFI51:
 4073              		.cfi_def_cfa_offset 8
 4074              		.cfi_offset 4, -8
 4075              		.cfi_offset 14, -4
 4076 0016 0446     		mov	r4, r0
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 4077              		.loc 1 1949 0
 4078 0018 FFF7FEFF 		bl	vQueueUnregisterQueue
 4079              	.LVL411:
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4080              		.loc 1 1963 0
 4081 001c 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 4082 0020 03B1     		cbz	r3, .L383
 4083              	.L377:
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4084              		.loc 1 1979 0
 4085 0022 10BD     		pop	{r4, pc}
 4086              	.LVL412:
 4087              	.L383:
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 4088              		.loc 1 1965 0
 4089 0024 2046     		mov	r0, r4
 4090 0026 FFF7FEFF 		bl	vPortFree
 4091              	.LVL413:
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4092              		.loc 1 1979 0
 4093 002a FAE7     		b	.L377
 4094              		.cfi_endproc
 4095              	.LFE28:
 4097              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 4098              		.align	1
 4099              		.global	vQueueWaitForMessageRestricted
 4100              		.syntax unified
 4101              		.thumb
 4102              		.thumb_func
 4103              		.fpu fpv4-sp-d16
 4105              	vQueueWaitForMessageRestricted:
 4106              	.LFB43:
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TIMERS == 1 )
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4107              		.loc 1 2701 0
 4108              		.cfi_startproc
 4109              		@ args = 0, pretend = 0, frame = 0
 4110              		@ frame_needed = 0, uses_anonymous_args = 0
 4111              	.LVL414:
 4112 0000 70B5     		push	{r4, r5, r6, lr}
 4113              	.LCFI52:
 4114              		.cfi_def_cfa_offset 16
 4115              		.cfi_offset 4, -16
 4116              		.cfi_offset 5, -12
ARM GAS  /tmp/ccyQlUm1.s 			page 132


 4117              		.cfi_offset 6, -8
 4118              		.cfi_offset 14, -4
 4119 0002 0446     		mov	r4, r0
 4120 0004 0D46     		mov	r5, r1
 4121 0006 1646     		mov	r6, r2
 4122              	.LVL415:
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function should not be called by application code hence the
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		designed for use by kernel code, and has special calling requirements.
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		It can result in vListInsert() being called on a list that can only
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		possibly ever have one item in it, so the list will be fast, but even
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		so it should be called with the scheduler locked and not from a critical
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		section. */
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Only do anything if there are no messages in the queue.  This function
2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		will not actually cause the task to block, just place it on a blocked
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		list.  It will not block until the scheduler is unlocked - at which
2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		time a yield will be performed.  If an item is added to the queue while
2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		the queue is locked, and the calling task blocks on the queue, then the
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task will be immediately unblocked when the queue is unlocked. */
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 4123              		.loc 1 2718 0
 4124 0008 FFF7FEFF 		bl	vPortEnterCritical
 4125              	.LVL416:
 4126 000c 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 4127 0010 5BB2     		sxtb	r3, r3
 4128 0012 B3F1FF3F 		cmp	r3, #-1
 4129 0016 0DD0     		beq	.L389
 4130              	.L385:
 4131              		.loc 1 2718 0 is_stmt 0 discriminator 3
 4132 0018 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 4133 001c 5BB2     		sxtb	r3, r3
 4134 001e B3F1FF3F 		cmp	r3, #-1
 4135 0022 0BD0     		beq	.L390
 4136              	.L386:
 4137              		.loc 1 2718 0 discriminator 6
 4138 0024 FFF7FEFF 		bl	vPortExitCritical
 4139              	.LVL417:
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4140              		.loc 1 2719 0 is_stmt 1 discriminator 6
 4141 0028 A36B     		ldr	r3, [r4, #56]
 4142 002a 5BB1     		cbz	r3, .L391
 4143              	.L387:
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is nothing in the queue, block for the specified period. */
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefi
2723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvUnlockQueue( pxQueue );
 4144              		.loc 1 2728 0
 4145 002c 2046     		mov	r0, r4
 4146 002e FFF7FEFF 		bl	prvUnlockQueue
ARM GAS  /tmp/ccyQlUm1.s 			page 133


 4147              	.LVL418:
2729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 4148              		.loc 1 2729 0
 4149 0032 70BD     		pop	{r4, r5, r6, pc}
 4150              	.LVL419:
 4151              	.L389:
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4152              		.loc 1 2718 0 discriminator 1
 4153 0034 0023     		movs	r3, #0
 4154 0036 84F84430 		strb	r3, [r4, #68]
 4155 003a EDE7     		b	.L385
 4156              	.L390:
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4157              		.loc 1 2718 0 is_stmt 0 discriminator 4
 4158 003c 0023     		movs	r3, #0
 4159 003e 84F84530 		strb	r3, [r4, #69]
 4160 0042 EFE7     		b	.L386
 4161              	.L391:
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 4162              		.loc 1 2722 0 is_stmt 1
 4163 0044 3246     		mov	r2, r6
 4164 0046 2946     		mov	r1, r5
 4165 0048 04F12400 		add	r0, r4, #36
 4166 004c FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
 4167              	.LVL420:
 4168 0050 ECE7     		b	.L387
 4169              		.cfi_endproc
 4170              	.LFE43:
 4172              		.comm	xQueueRegistry,64,4
 4173              		.text
 4174              	.Letext0:
 4175              		.file 3 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eab
 4176              		.file 4 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 4177              		.file 5 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 4178              		.file 6 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 4179              		.file 7 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 4180              		.file 8 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 4181              		.file 9 "/home/hongtao/STM32_Tools/ARM_GCC/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 4182              		.file 10 "Inc/FreeRTOSConfig.h"
 4183              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 4184              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 4185              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 4186              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 4187              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 4188              		.file 16 "<built-in>"
ARM GAS  /tmp/ccyQlUm1.s 			page 134


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/ccyQlUm1.s:18     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 $t
     /tmp/ccyQlUm1.s:24     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 prvGetDisinheritPriorityAfterTimeout
     /tmp/ccyQlUm1.s:54     .text.prvIsQueueFull:0000000000000000 $t
     /tmp/ccyQlUm1.s:60     .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/ccyQlUm1.s:101    .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/ccyQlUm1.s:107    .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/ccyQlUm1.s:146    .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/ccyQlUm1.s:152    .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/ccyQlUm1.s:271    .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/ccyQlUm1.s:277    .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/ccyQlUm1.s:326    .text.prvUnlockQueue:0000000000000000 $t
     /tmp/ccyQlUm1.s:332    .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/ccyQlUm1.s:438    .text.xQueueGenericReset:0000000000000000 $t
     /tmp/ccyQlUm1.s:445    .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/ccyQlUm1.s:554    .text.xQueueGenericReset:0000000000000080 $d
     /tmp/ccyQlUm1.s:559    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/ccyQlUm1.s:565    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/ccyQlUm1.s:612    .text.xQueueGenericCreateStatic:0000000000000000 $t
     /tmp/ccyQlUm1.s:619    .text.xQueueGenericCreateStatic:0000000000000000 xQueueGenericCreateStatic
     /tmp/ccyQlUm1.s:780    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/ccyQlUm1.s:787    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/ccyQlUm1.s:877    .text.xQueueGetMutexHolder:0000000000000000 $t
     /tmp/ccyQlUm1.s:884    .text.xQueueGetMutexHolder:0000000000000000 xQueueGetMutexHolder
     /tmp/ccyQlUm1.s:923    .text.xQueueGetMutexHolderFromISR:0000000000000000 $t
     /tmp/ccyQlUm1.s:930    .text.xQueueGetMutexHolderFromISR:0000000000000000 xQueueGetMutexHolderFromISR
     /tmp/ccyQlUm1.s:977    .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 $t
     /tmp/ccyQlUm1.s:984    .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 xQueueCreateCountingSemaphoreStatic
     /tmp/ccyQlUm1.s:1072   .text.xQueueCreateCountingSemaphore:0000000000000000 $t
     /tmp/ccyQlUm1.s:1079   .text.xQueueCreateCountingSemaphore:0000000000000000 xQueueCreateCountingSemaphore
     /tmp/ccyQlUm1.s:1156   .text.xQueueGenericSend:0000000000000000 $t
     /tmp/ccyQlUm1.s:1163   .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/ccyQlUm1.s:1487   .text.xQueueGenericSend:0000000000000178 $d
     /tmp/ccyQlUm1.s:1492   .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/ccyQlUm1.s:1498   .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/ccyQlUm1.s:1538   .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/ccyQlUm1.s:1545   .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/ccyQlUm1.s:1577   .text.xQueueCreateMutexStatic:0000000000000000 $t
     /tmp/ccyQlUm1.s:1584   .text.xQueueCreateMutexStatic:0000000000000000 xQueueCreateMutexStatic
     /tmp/ccyQlUm1.s:1626   .text.xQueueGiveMutexRecursive:0000000000000000 $t
     /tmp/ccyQlUm1.s:1633   .text.xQueueGiveMutexRecursive:0000000000000000 xQueueGiveMutexRecursive
     /tmp/ccyQlUm1.s:1707   .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/ccyQlUm1.s:1714   .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/ccyQlUm1.s:1912   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/ccyQlUm1.s:1919   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/ccyQlUm1.s:2127   .text.xQueueReceive:0000000000000000 $t
     /tmp/ccyQlUm1.s:2134   .text.xQueueReceive:0000000000000000 xQueueReceive
     /tmp/ccyQlUm1.s:2431   .text.xQueueReceive:0000000000000154 $d
     /tmp/ccyQlUm1.s:2436   .text.xQueueSemaphoreTake:0000000000000000 $t
     /tmp/ccyQlUm1.s:2443   .text.xQueueSemaphoreTake:0000000000000000 xQueueSemaphoreTake
     /tmp/ccyQlUm1.s:2802   .text.xQueueSemaphoreTake:0000000000000198 $d
     /tmp/ccyQlUm1.s:2807   .text.xQueueTakeMutexRecursive:0000000000000000 $t
     /tmp/ccyQlUm1.s:2814   .text.xQueueTakeMutexRecursive:0000000000000000 xQueueTakeMutexRecursive
     /tmp/ccyQlUm1.s:2890   .text.xQueuePeek:0000000000000000 $t
     /tmp/ccyQlUm1.s:2897   .text.xQueuePeek:0000000000000000 xQueuePeek
     /tmp/ccyQlUm1.s:3195   .text.xQueuePeek:0000000000000154 $d
ARM GAS  /tmp/ccyQlUm1.s 			page 135


     /tmp/ccyQlUm1.s:3200   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/ccyQlUm1.s:3207   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/ccyQlUm1.s:3378   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/ccyQlUm1.s:3385   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
     /tmp/ccyQlUm1.s:3530   .text.uxQueueMessagesWaiting:0000000000000000 $t
     /tmp/ccyQlUm1.s:3537   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/ccyQlUm1.s:3588   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/ccyQlUm1.s:3595   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/ccyQlUm1.s:3649   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/ccyQlUm1.s:3656   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/ccyQlUm1.s:3695   .text.uxQueueGetQueueNumber:0000000000000000 $t
     /tmp/ccyQlUm1.s:3702   .text.uxQueueGetQueueNumber:0000000000000000 uxQueueGetQueueNumber
     /tmp/ccyQlUm1.s:3718   .text.vQueueSetQueueNumber:0000000000000000 $t
     /tmp/ccyQlUm1.s:3725   .text.vQueueSetQueueNumber:0000000000000000 vQueueSetQueueNumber
     /tmp/ccyQlUm1.s:3741   .text.ucQueueGetQueueType:0000000000000000 $t
     /tmp/ccyQlUm1.s:3748   .text.ucQueueGetQueueType:0000000000000000 ucQueueGetQueueType
     /tmp/ccyQlUm1.s:3764   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/ccyQlUm1.s:3771   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
     /tmp/ccyQlUm1.s:3818   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/ccyQlUm1.s:3825   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/ccyQlUm1.s:3874   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/ccyQlUm1.s:3881   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/ccyQlUm1.s:3921   .text.vQueueAddToRegistry:0000000000000024 $d
                            *COM*:0000000000000040 xQueueRegistry
     /tmp/ccyQlUm1.s:3926   .text.pcQueueGetName:0000000000000000 $t
     /tmp/ccyQlUm1.s:3933   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/ccyQlUm1.s:3975   .text.pcQueueGetName:0000000000000024 $d
     /tmp/ccyQlUm1.s:3980   .text.vQueueUnregisterQueue:0000000000000000 $t
     /tmp/ccyQlUm1.s:3987   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/ccyQlUm1.s:4030   .text.vQueueUnregisterQueue:0000000000000028 $d
     /tmp/ccyQlUm1.s:4035   .text.vQueueDelete:0000000000000000 $t
     /tmp/ccyQlUm1.s:4042   .text.vQueueDelete:0000000000000000 vQueueDelete
     /tmp/ccyQlUm1.s:4098   .text.vQueueWaitForMessageRestricted:0000000000000000 $t
     /tmp/ccyQlUm1.s:4105   .text.vQueueWaitForMessageRestricted:0000000000000000 vQueueWaitForMessageRestricted

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
vTaskMissedYield
xTaskRemoveFromEventList
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
xTaskResumeAll
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
vTaskPlaceOnEventListRestricted
ARM GAS  /tmp/ccyQlUm1.s 			page 136


